(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["PasuunaPlayer"] = factory();
	else
		root["PasuunaPlayer"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QYXN1dW5hUGxheWVyLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanM/OTcwYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jbGFzc0NhbGxDaGVjazsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/classCallCheck.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QYXN1dW5hUGxheWVyLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanM/NWJjMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgcmV0dXJuIENvbnN0cnVjdG9yO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jcmVhdGVDbGFzczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/createClass.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/readOnlyError.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/readOnlyError.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}\n\nmodule.exports = _readOnlyError;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QYXN1dW5hUGxheWVyLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcmVhZE9ubHlFcnJvci5qcz9kYTYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3JlYWRPbmx5RXJyb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfcmVhZE9ubHlFcnJvcihuYW1lKSB7XG4gIHRocm93IG5ldyBFcnJvcihcIlxcXCJcIiArIG5hbWUgKyBcIlxcXCIgaXMgcmVhZC1vbmx5XCIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9yZWFkT25seUVycm9yOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/readOnlyError.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/tiny-emitter/index.js":
/*!********************************************!*\
  !*** ./node_modules/tiny-emitter/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QYXN1dW5hUGxheWVyLy4vbm9kZV9tb2R1bGVzL3RpbnktZW1pdHRlci9pbmRleC5qcz9jMGUyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQ0FBa0M7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7O0FBRUEsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQSx3Q0FBd0MsU0FBUztBQUNqRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3RpbnktZW1pdHRlci9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIEUgKCkge1xuICAvLyBLZWVwIHRoaXMgZW1wdHkgc28gaXQncyBlYXNpZXIgdG8gaW5oZXJpdCBmcm9tXG4gIC8vICh2aWEgaHR0cHM6Ly9naXRodWIuY29tL2xpcHNtYWNrIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL3Njb3R0Y29yZ2FuL3RpbnktZW1pdHRlci9pc3N1ZXMvMylcbn1cblxuRS5wcm90b3R5cGUgPSB7XG4gIG9uOiBmdW5jdGlvbiAobmFtZSwgY2FsbGJhY2ssIGN0eCkge1xuICAgIHZhciBlID0gdGhpcy5lIHx8ICh0aGlzLmUgPSB7fSk7XG5cbiAgICAoZVtuYW1lXSB8fCAoZVtuYW1lXSA9IFtdKSkucHVzaCh7XG4gICAgICBmbjogY2FsbGJhY2ssXG4gICAgICBjdHg6IGN0eFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG5cbiAgb25jZTogZnVuY3Rpb24gKG5hbWUsIGNhbGxiYWNrLCBjdHgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgZnVuY3Rpb24gbGlzdGVuZXIgKCkge1xuICAgICAgc2VsZi5vZmYobmFtZSwgbGlzdGVuZXIpO1xuICAgICAgY2FsbGJhY2suYXBwbHkoY3R4LCBhcmd1bWVudHMpO1xuICAgIH07XG5cbiAgICBsaXN0ZW5lci5fID0gY2FsbGJhY2tcbiAgICByZXR1cm4gdGhpcy5vbihuYW1lLCBsaXN0ZW5lciwgY3R4KTtcbiAgfSxcblxuICBlbWl0OiBmdW5jdGlvbiAobmFtZSkge1xuICAgIHZhciBkYXRhID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICAgIHZhciBldnRBcnIgPSAoKHRoaXMuZSB8fCAodGhpcy5lID0ge30pKVtuYW1lXSB8fCBbXSkuc2xpY2UoKTtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIGxlbiA9IGV2dEFyci5sZW5ndGg7XG5cbiAgICBmb3IgKGk7IGkgPCBsZW47IGkrKykge1xuICAgICAgZXZ0QXJyW2ldLmZuLmFwcGx5KGV2dEFycltpXS5jdHgsIGRhdGEpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9LFxuXG4gIG9mZjogZnVuY3Rpb24gKG5hbWUsIGNhbGxiYWNrKSB7XG4gICAgdmFyIGUgPSB0aGlzLmUgfHwgKHRoaXMuZSA9IHt9KTtcbiAgICB2YXIgZXZ0cyA9IGVbbmFtZV07XG4gICAgdmFyIGxpdmVFdmVudHMgPSBbXTtcblxuICAgIGlmIChldnRzICYmIGNhbGxiYWNrKSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gZXZ0cy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICBpZiAoZXZ0c1tpXS5mbiAhPT0gY2FsbGJhY2sgJiYgZXZ0c1tpXS5mbi5fICE9PSBjYWxsYmFjaylcbiAgICAgICAgICBsaXZlRXZlbnRzLnB1c2goZXZ0c1tpXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmVtb3ZlIGV2ZW50IGZyb20gcXVldWUgdG8gcHJldmVudCBtZW1vcnkgbGVha1xuICAgIC8vIFN1Z2dlc3RlZCBieSBodHRwczovL2dpdGh1Yi5jb20vbGF6ZFxuICAgIC8vIFJlZjogaHR0cHM6Ly9naXRodWIuY29tL3Njb3R0Y29yZ2FuL3RpbnktZW1pdHRlci9jb21taXQvYzZlYmZhYTliYzk3M2IzM2QxMTBhODRhMzA3NzQyYjdjZjk0Yzk1MyNjb21taXRjb21tZW50LTUwMjQ5MTBcblxuICAgIChsaXZlRXZlbnRzLmxlbmd0aClcbiAgICAgID8gZVtuYW1lXSA9IGxpdmVFdmVudHNcbiAgICAgIDogZGVsZXRlIGVbbmFtZV07XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFO1xubW9kdWxlLmV4cG9ydHMuVGlueUVtaXR0ZXIgPSBFO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/tiny-emitter/index.js\n");

/***/ }),

/***/ "./node_modules/waaclock/index.js":
/*!****************************************!*\
  !*** ./node_modules/waaclock/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var WAAClock = __webpack_require__(/*! ./lib/WAAClock */ \"./node_modules/waaclock/lib/WAAClock.js\")\n\nmodule.exports = WAAClock\nif (typeof window !== 'undefined') window.WAAClock = WAAClock\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QYXN1dW5hUGxheWVyLy4vbm9kZV9tb2R1bGVzL3dhYWNsb2NrL2luZGV4LmpzP2YyNDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLCtEQUFnQjs7QUFFdkM7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy93YWFjbG9jay9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBXQUFDbG9jayA9IHJlcXVpcmUoJy4vbGliL1dBQUNsb2NrJylcblxubW9kdWxlLmV4cG9ydHMgPSBXQUFDbG9ja1xuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB3aW5kb3cuV0FBQ2xvY2sgPSBXQUFDbG9ja1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/waaclock/index.js\n");

/***/ }),

/***/ "./node_modules/waaclock/lib/WAAClock.js":
/*!***********************************************!*\
  !*** ./node_modules/waaclock/lib/WAAClock.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {var isBrowser = (typeof window !== 'undefined')\n\nvar CLOCK_DEFAULTS = {\n  toleranceLate: 0.10,\n  toleranceEarly: 0.001\n}\n\n// ==================== Event ==================== //\nvar Event = function(clock, deadline, func) {\n  this.clock = clock\n  this.func = func\n  this._cleared = false // Flag used to clear an event inside callback\n\n  this.toleranceLate = clock.toleranceLate\n  this.toleranceEarly = clock.toleranceEarly\n  this._latestTime = null\n  this._earliestTime = null\n  this.deadline = null\n  this.repeatTime = null\n\n  this.schedule(deadline)\n}\n\n// Unschedules the event\nEvent.prototype.clear = function() {\n  this.clock._removeEvent(this)\n  this._cleared = true\n  return this\n}\n\n// Sets the event to repeat every `time` seconds.\nEvent.prototype.repeat = function(time) {\n  if (time === 0)\n    throw new Error('delay cannot be 0')\n  this.repeatTime = time\n  if (!this.clock._hasEvent(this))\n    this.schedule(this.deadline + this.repeatTime)\n  return this\n}\n\n// Sets the time tolerance of the event.\n// The event will be executed in the interval `[deadline - early, deadline + late]`\n// If the clock fails to execute the event in time, the event will be dropped.\nEvent.prototype.tolerance = function(values) {\n  if (typeof values.late === 'number')\n    this.toleranceLate = values.late\n  if (typeof values.early === 'number')\n    this.toleranceEarly = values.early\n  this._refreshEarlyLateDates()\n  if (this.clock._hasEvent(this)) {\n    this.clock._removeEvent(this)\n    this.clock._insertEvent(this)\n  }\n  return this\n}\n\n// Returns true if the event is repeated, false otherwise\nEvent.prototype.isRepeated = function() { return this.repeatTime !== null }\n\n// Schedules the event to be ran before `deadline`.\n// If the time is within the event tolerance, we handle the event immediately.\n// If the event was already scheduled at a different time, it is rescheduled.\nEvent.prototype.schedule = function(deadline) {\n  this._cleared = false\n  this.deadline = deadline\n  this._refreshEarlyLateDates()\n\n  if (this.clock.context.currentTime >= this._earliestTime) {\n    this._execute()\n  \n  } else if (this.clock._hasEvent(this)) {\n    this.clock._removeEvent(this)\n    this.clock._insertEvent(this)\n  \n  } else this.clock._insertEvent(this)\n}\n\nEvent.prototype.timeStretch = function(tRef, ratio) {\n  if (this.isRepeated())\n    this.repeatTime = this.repeatTime * ratio\n\n  var deadline = tRef + ratio * (this.deadline - tRef)\n  // If the deadline is too close or past, and the event has a repeat,\n  // we calculate the next repeat possible in the stretched space.\n  if (this.isRepeated()) {\n    while (this.clock.context.currentTime >= deadline - this.toleranceEarly)\n      deadline += this.repeatTime\n  }\n  this.schedule(deadline)\n}\n\n// Executes the event\nEvent.prototype._execute = function() {\n  if (this.clock._started === false) return\n  this.clock._removeEvent(this)\n\n  if (this.clock.context.currentTime < this._latestTime)\n    this.func(this)\n  else {\n    if (this.onexpired) this.onexpired(this)\n    console.warn('event expired')\n  }\n  // In the case `schedule` is called inside `func`, we need to avoid\n  // overrwriting with yet another `schedule`.\n  if (!this.clock._hasEvent(this) && this.isRepeated() && !this._cleared)\n    this.schedule(this.deadline + this.repeatTime) \n}\n\n// Updates cached times\nEvent.prototype._refreshEarlyLateDates = function() {\n  this._latestTime = this.deadline + this.toleranceLate\n  this._earliestTime = this.deadline - this.toleranceEarly\n}\n\n// ==================== WAAClock ==================== //\nvar WAAClock = module.exports = function(context, opts) {\n  var self = this\n  opts = opts || {}\n  this.tickMethod = opts.tickMethod || 'ScriptProcessorNode'\n  this.toleranceEarly = opts.toleranceEarly || CLOCK_DEFAULTS.toleranceEarly\n  this.toleranceLate = opts.toleranceLate || CLOCK_DEFAULTS.toleranceLate\n  this.context = context\n  this._events = []\n  this._started = false\n}\n\n// ---------- Public API ---------- //\n// Schedules `func` to run after `delay` seconds.\nWAAClock.prototype.setTimeout = function(func, delay) {\n  return this._createEvent(func, this._absTime(delay))\n}\n\n// Schedules `func` to run before `deadline`.\nWAAClock.prototype.callbackAtTime = function(func, deadline) {\n  return this._createEvent(func, deadline)\n}\n\n// Stretches `deadline` and `repeat` of all scheduled `events` by `ratio`, keeping\n// their relative distance to `tRef`. In fact this is equivalent to changing the tempo.\nWAAClock.prototype.timeStretch = function(tRef, events, ratio) {\n  events.forEach(function(event) { event.timeStretch(tRef, ratio) })\n  return events\n}\n\n// Removes all scheduled events and starts the clock \nWAAClock.prototype.start = function() {\n  if (this._started === false) {\n    var self = this\n    this._started = true\n    this._events = []\n\n    if (this.tickMethod === 'ScriptProcessorNode') {\n      var bufferSize = 256\n      // We have to keep a reference to the node to avoid garbage collection\n      this._clockNode = this.context.createScriptProcessor(bufferSize, 1, 1)\n      this._clockNode.connect(this.context.destination)\n      this._clockNode.onaudioprocess = function () {\n        process.nextTick(function() { self._tick() })\n      }\n    } else if (this.tickMethod === 'manual') null // _tick is called manually\n\n    else throw new Error('invalid tickMethod ' + this.tickMethod)\n  }\n}\n\n// Stops the clock\nWAAClock.prototype.stop = function() {\n  if (this._started === true) {\n    this._started = false\n    this._clockNode.disconnect()\n  }  \n}\n\n// ---------- Private ---------- //\n\n// This function is ran periodically, and at each tick it executes\n// events for which `currentTime` is included in their tolerance interval.\nWAAClock.prototype._tick = function() {\n  var event = this._events.shift()\n\n  while(event && event._earliestTime <= this.context.currentTime) {\n    event._execute()\n    event = this._events.shift()\n  }\n\n  // Put back the last event\n  if(event) this._events.unshift(event)\n}\n\n// Creates an event and insert it to the list\nWAAClock.prototype._createEvent = function(func, deadline) {\n  return new Event(this, deadline, func)\n}\n\n// Inserts an event to the list\nWAAClock.prototype._insertEvent = function(event) {\n  this._events.splice(this._indexByTime(event._earliestTime), 0, event)\n}\n\n// Removes an event from the list\nWAAClock.prototype._removeEvent = function(event) {\n  var ind = this._events.indexOf(event)\n  if (ind !== -1) this._events.splice(ind, 1)\n}\n\n// Returns true if `event` is in queue, false otherwise\nWAAClock.prototype._hasEvent = function(event) {\n return this._events.indexOf(event) !== -1\n}\n\n// Returns the index of the first event whose deadline is >= to `deadline`\nWAAClock.prototype._indexByTime = function(deadline) {\n  // performs a binary search\n  var low = 0\n    , high = this._events.length\n    , mid\n  while (low < high) {\n    mid = Math.floor((low + high) / 2)\n    if (this._events[mid]._earliestTime < deadline)\n      low = mid + 1\n    else high = mid\n  }\n  return low\n}\n\n// Converts from relative time to absolute time\nWAAClock.prototype._absTime = function(relTime) {\n  return relTime + this.context.currentTime\n}\n\n// Converts from absolute time to relative time \nWAAClock.prototype._relTime = function(absTime) {\n  return absTime - this.context.currentTime\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/waaclock/lib/WAAClock.js\n");

/***/ }),

/***/ "./src/audio.js":
/*!**********************!*\
  !*** ./src/audio.js ***!
  \**********************/
/*! exports provided: Audio */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Audio\", function() { return Audio; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./events */ \"./src/events.js\");\n/* harmony import */ var _audio_filterChain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./audio/filterChain */ \"./src/audio/filterChain.js\");\n/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./enum */ \"./src/enum.js\");\n\n\n\n\n\nvar Audio =\n/*#__PURE__*/\nfunction () {\n  function Audio(tracker) {\n    var audioContext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Audio);\n\n    this.tracker = tracker;\n    this.audioContext = audioContext || new AudioContext();\n    this.offlineContext = null;\n    this.context = this.audioContext;\n    this.masterVolume = null;\n    this.cutOffVolume = null;\n    this.lowPassfilter = null;\n    this.filterChains = [];\n    this.mediaRecorder = null;\n    this.currentStereoSeparation = _enum__WEBPACK_IMPORTED_MODULE_4__[\"STEREOSEPARATION\"].BALANCED;\n    this.lastMasterVolume = 0;\n    this.usePanning = false;\n    this.scheduledNotes = [[], [], []];\n    this.scheduledNotesBucket = 0;\n    this.prevSampleRate = 4143.569;\n    this.filters = {\n      volume: true,\n      panning: true,\n      high: true,\n      mid: true,\n      low: true,\n      lowPass: true,\n      reverb: true,\n      distortion: false\n    };\n    this.waveFormFunction = {\n      sine: function sine(period, progress, freq, amp) {\n        return period + Math.sin(progress * freq * 0.8) * amp * 1.7;\n      },\n      saw: function saw(period, progress, freq, amp) {\n        var value = 1 - Math.abs(progress * freq / 7 % 1); // from 1 to 0\n\n        value = value * 2 - 1; // from -1 to 1\n\n        value = value * amp * -2;\n        return period + value;\n      },\n      square: function square(period, progress, freq, amp) {\n        var value = Math.sin(progress * freq) <= 0 ? -1 : 1;\n        value = value * amp * 2;\n        return period + value;\n      },\n      sawInverse: function sawInverse(period, progress, freq, amp) {\n        var value = Math.abs(progress * freq / 7 % 1); // from 0 to 1\n\n        value = value * 2 - 1; // from -1 to 1\n\n        value = value * amp * -2;\n        return period + value;\n      }\n    };\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Audio, [{\n    key: \"createAudioConnections\",\n    value: function createAudioConnections(actx) {\n      this.cutOffVolume = actx.createGain();\n      this.cutOffVolume.gain.setValueAtTime(1, 0);\n      this.cutOffVolume.connect(actx.destination);\n      this.masterVolume = actx.createGain();\n      this.masterVolume.connect(this.cutOffVolume);\n      this.setMasterVolume(1);\n      this.lowPassfilter = actx.createBiquadFilter();\n      this.lowPassfilter.type = 'lowpass';\n      this.lowPassfilter.frequency.setValueAtTime(20000, 0);\n      this.lowPassfilter.connect(this.masterVolume);\n    }\n  }, {\n    key: \"addFilterChain\",\n    value: function addFilterChain() {\n      var filterChain = new _audio_filterChain__WEBPACK_IMPORTED_MODULE_3__[\"FilterChain\"](this, this.filters);\n      filterChain.output.connect(this.lowPassfilter);\n      this.filterChains.push(filterChain);\n    }\n  }, {\n    key: \"init\",\n    value: function init(actx) {\n      var _this = this;\n\n      actx = actx || this.audioContext;\n\n      if (!actx) {\n        console.error('Pasuuna: No audioContext');\n        return;\n      } else {\n        this.context = actx;\n      }\n\n      this.usePanning = !!this.context.createStereoPanner;\n      this.createAudioConnections(actx);\n      var numberOfTracks = this.tracker.getTrackCount();\n      this.filterChains = [];\n\n      for (var i = 0; i < numberOfTracks; i++) {\n        this.addFilterChain();\n      }\n\n      _events__WEBPACK_IMPORTED_MODULE_2__[\"events\"].on(_enum__WEBPACK_IMPORTED_MODULE_4__[\"EVENT\"].trackStateChange, function (state) {\n        if (typeof state.track !== 'undefined' && _this.filterChains[state.track]) {\n          _this.filterChains[state.track].volumeValue(state.mute ? 0 : 70);\n        }\n      });\n      _events__WEBPACK_IMPORTED_MODULE_2__[\"events\"].on(_enum__WEBPACK_IMPORTED_MODULE_4__[\"EVENT\"].trackCountChange, function (trackCount) {\n        for (var _i = _this.filterChains.length; _i < trackCount; _i++) {\n          _this.addFilterChain();\n        }\n\n        _events__WEBPACK_IMPORTED_MODULE_2__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_4__[\"EVENT\"].filterChainCountChange, trackCount);\n\n        _this.setStereoSeparation(_this.currentStereoSeparation);\n      });\n      _events__WEBPACK_IMPORTED_MODULE_2__[\"events\"].on(_enum__WEBPACK_IMPORTED_MODULE_4__[\"EVENT\"].trackerModeChanged, function (mode) {\n        _this.setStereoSeparation();\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.cutOffVolume.gain.setValueAtTime(1, 0);\n      this.cutOff = false;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      var _this2 = this;\n\n      this.cutOffVolume.gain.setValueAtTime(0, 0);\n      this.cutOff = true;\n      var totalNotes = 0;\n      this.scheduledNotes.forEach(function (bucket, index) {\n        totalNotes += bucket.length;\n        bucket.forEach(function (volume) {\n          volume.gain.cancelScheduledValues(0);\n          volume.gain.setValueAtTime(0, 0);\n        });\n        _this2.scheduledNotes[index] = [];\n      });\n    }\n  }, {\n    key: \"checkState\",\n    value: function checkState() {\n      if (this.context) {\n        if (this.context.state === 'suspended' && this.context.resume) {\n          console.info('Pasuuna: Audio context is suspended - trying to resume');\n          this.context.resume();\n        }\n      }\n    }\n  }, {\n    key: \"playSample\",\n    value: function playSample(index, period, volume, track, effects, time, noteIndex) {\n      var audioContext = this.audioContext;\n      this.enable();\n      period = period || 428; // C-3\n\n      if (typeof track === 'undefined') {\n        track = 0;\n      }\n\n      time = time || audioContext.currentTime;\n\n      if (noteIndex === _enum__WEBPACK_IMPORTED_MODULE_4__[\"NOTEOFF\"]) {\n        volume = 0; // note off\n      }\n\n      var instrument = this.tracker.getInstrument(index);\n      var basePeriod = period;\n      var volumeEnvelope;\n      var panningEnvelope;\n      var scheduled;\n      var pan = 0;\n\n      if (instrument) {\n        var sampleBuffer;\n        var offset = 0;\n        var sampleLength = 0;\n        var sampleRate;\n        var initialPlaybackRate = 1;\n        var panning = null;\n        volume = typeof volume === 'undefined' ? 100 * instrument.sample.volume / 64 : volume;\n        pan = (instrument.sample.panning || 0) / 128; // apply finetune\n\n        if (this.tracker.inFTMode()) {\n          if (this.tracker.useLinearFrequency) {\n            period -= instrument.getFineTune() / 2;\n          } else {\n            if (instrument.getFineTune()) {\n              period = this.getFineTuneForNote(noteIndex, instrument.getFineTune());\n            }\n          }\n        } else {\n          // protracker frequency\n          if (instrument.getFineTune()) {\n            period = this.getFineTuneForPeriod(period, instrument.getFineTune());\n          }\n        }\n\n        sampleRate = this.getSampleRateForPeriod(period);\n\n        if (instrument.sample.data.length) {\n          sampleLength = instrument.sample.data.length;\n\n          if (effects && effects.offset) {\n            if (effects.offset.value >= sampleLength) {\n              effects.offset.value = sampleLength - 1;\n            }\n\n            offset = effects.offset.value / audioContext.sampleRate; // in seconds\n          } // note - on safari you can't set a different samplerate?\n\n\n          sampleBuffer = audioContext.createBuffer(1, sampleLength, audioContext.sampleRate);\n          initialPlaybackRate = sampleRate / audioContext.sampleRate;\n        } else {\n          // empty samples are often used to cut of the previous instrument\n          sampleBuffer = audioContext.createBuffer(1, 1, audioContext.sampleRate);\n          offset = 0;\n        }\n\n        var buffering = sampleBuffer.getChannelData(0);\n\n        for (var i = 0; i < sampleLength; i++) {\n          buffering[i] = instrument.sample.data[i];\n        }\n\n        this.prevSampleRate = sampleRate;\n        var source = audioContext.createBufferSource();\n        source.buffer = sampleBuffer;\n        var volumeGain = audioContext.createGain();\n        volumeGain.gain.value = volume / 100;\n        volumeGain.gain.setValueAtTime(volume / 100, time);\n\n        if (instrument.sample.loop.enabled && instrument.sample.loop.length > 2) {\n          if (!_enum__WEBPACK_IMPORTED_MODULE_4__[\"SETTINGS\"].unrollLoops) {\n            source.loop = true; // in seconds ...\n\n            source.loopStart = instrument.sample.loop.start / audioContext.sampleRate;\n            source.loopEnd = (instrument.sample.loop.start + instrument.sample.loop.length) / audioContext.sampleRate;\n          }\n        }\n\n        if (instrument.volumeEnvelope.enabled || instrument.panningEnvelope.enabled || instrument.hasVibrato()) {\n          var envelopes = instrument.noteOn(time);\n          var target = source;\n\n          if (envelopes.volume) {\n            volumeEnvelope = envelopes.volume;\n            source.connect(volumeEnvelope);\n            target = volumeEnvelope;\n          }\n\n          if (envelopes.panning) {\n            panningEnvelope = envelopes.panning;\n            target.connect(panningEnvelope);\n            target = panningEnvelope;\n          }\n\n          scheduled = envelopes.scheduled;\n          target.connect(volumeGain);\n        } else {\n          source.connect(volumeGain);\n        }\n\n        var volumeFadeOut = this.context.createGain();\n        volumeFadeOut.gain.setValueAtTime(0, time);\n        volumeFadeOut.gain.linearRampToValueAtTime(1, time + 0.01);\n        volumeGain.connect(volumeFadeOut);\n\n        if (this.usePanning) {\n          panning = this.context.createStereoPanner();\n          panning.pan.setValueAtTime(pan, time);\n          volumeFadeOut.connect(panning);\n          panning.connect(this.filterChains[track].input);\n        } else {\n          volumeFadeOut.connect(this.filterChains[track].input);\n        }\n\n        source.playbackRate.value = initialPlaybackRate;\n        var sourceDelayTime = 0;\n        var playTime = time + sourceDelayTime;\n        source.start(playTime, offset);\n        var result = {\n          source: source,\n          volume: volumeGain,\n          panning: panning,\n          volumeEnvelope: volumeEnvelope,\n          panningEnvelope: panningEnvelope,\n          volumeFadeOut: volumeFadeOut,\n          startVolume: volume,\n          currentVolume: volume,\n          startPeriod: period,\n          basePeriod: basePeriod,\n          noteIndex: noteIndex,\n          startPlaybackRate: initialPlaybackRate,\n          sampleRate: sampleRate,\n          instrumentIndex: index,\n          effects: effects,\n          track: track,\n          time: time,\n          scheduled: scheduled\n        };\n        this.scheduledNotes[this.scheduledNotesBucket].push(volumeGain);\n        _events__WEBPACK_IMPORTED_MODULE_2__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_4__[\"EVENT\"].samplePlay, result);\n        return result;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"playSilence\",\n    value: function playSilence() {\n      // used to activate Audio engine on first touch in IOS and Android devices\n      if (this.context) {\n        var source = context.createBufferSource();\n        source.connect(this.masterVolume);\n        source.start();\n      }\n    }\n  }, {\n    key: \"playRaw\",\n    value: function playRaw(data, sampleRate) {\n      // used to loose snippets of samples (ranges etc)\n      if (this.context && data && data.length) {\n        var sampleBuffer = this.context.createBuffer(1, data.length, this.context.sampleRate);\n        var initialPlaybackRate = sampleRate / audioContext.sampleRate;\n        var source = context.createBufferSource();\n        source.buffer = sampleBuffer;\n        source.loop = true;\n        source.playbackRate.value = initialPlaybackRate;\n        source.connect(this.masterVolume);\n        source.start();\n      }\n    }\n  }, {\n    key: \"setStereoSeparation\",\n    value: function setStereoSeparation(value) {\n      var panAmount;\n      var numberOfTracks = this.tracker.getTrackCount();\n\n      if (this.tracker.inFTMode()) {\n        panAmount = 0;\n      } else {\n        value = value || this.currentStereoSeparation;\n        this.currentStereoSeparation = value;\n\n        switch (value) {\n          case _enum__WEBPACK_IMPORTED_MODULE_4__[\"STEREOSEPARATION\"].NONE:\n            // mono, no panning\n            panAmount = 0;\n            _enum__WEBPACK_IMPORTED_MODULE_4__[\"SETTINGS\"].stereoSeparation = _enum__WEBPACK_IMPORTED_MODULE_4__[\"STEREOSEPARATION\"].NONE;\n            break;\n\n          case _enum__WEBPACK_IMPORTED_MODULE_4__[\"STEREOSEPARATION\"].FULL:\n            // Amiga style: pan even channels hard to the left, uneven to the right;\n            panAmount = 1;\n            _enum__WEBPACK_IMPORTED_MODULE_4__[\"SETTINGS\"].stereoSeparation = _enum__WEBPACK_IMPORTED_MODULE_4__[\"STEREOSEPARATION\"].FULL;\n            break;\n\n          default:\n            // balanced: pan even channels somewhat to the left, uneven to the right;\n            panAmount = 0.5;\n            _enum__WEBPACK_IMPORTED_MODULE_4__[\"SETTINGS\"].stereoSeparation = _enum__WEBPACK_IMPORTED_MODULE_4__[\"STEREOSEPARATION\"].BALANCED;\n            break;\n        }\n      }\n\n      for (var i = 0; i < numberOfTracks; i++) {\n        var filter = this.filterChains[i];\n\n        if (filter) {\n          filter.panningValue(i % 2 == 0 ? -panAmount : panAmount);\n        }\n      }\n    }\n  }, {\n    key: \"getPrevSampleRate\",\n    value: function getPrevSampleRate() {\n      return this.prevSampleRate;\n    }\n  }, {\n    key: \"createPingPongDelay\",\n    value: function createPingPongDelay() {\n      // example of delay effect.\n      // Taken from http://stackoverflow.com/questions/20644328/using-channelsplitter-and-mergesplitter-nodes-in-web-audio-api\n      var delayTime = 0.12;\n      var feedback = 0.3;\n      var merger = this.context.createChannelMerger(2);\n      var leftDelay = this.context.createDelay();\n      var rightDelay = this.context.createDelay();\n      var leftFeedback = this.context.createGain();\n      var rightFeedback = this.context.createGain();\n      var splitter = this.context.createChannelSplitter(2);\n      splitter.connect(leftDelay, 0);\n      splitter.connect(rightDelay, 1);\n      leftDelay.delayTime.value = delayTime;\n      rightDelay.delayTime.value = delayTime;\n      leftFeedback.gain.value = feedback;\n      rightFeedback.gain.value = feedback; // Connect the routing - left bounces to right, right bounces to left.\n\n      leftDelay.connect(leftFeedback);\n      leftFeedback.connect(rightDelay);\n      rightDelay.connect(rightFeedback);\n      rightFeedback.connect(leftDelay); // Re-merge the two delay channels into stereo L/R\n\n      leftFeedback.connect(merger, 0, 0);\n      rightFeedback.connect(merger, 0, 1); // Now connect your input to 'splitter', and connect 'merger' to your output destination.\n\n      return {\n        splitter: splitter,\n        merger: merger\n      };\n    }\n    /**\r\n    * get a new AudioNode playing at x semitones from the root note\r\n    * used to create Chords and Arpeggio\r\n    *\r\n    * @param {audioNode} source: audioBuffer of the root note\r\n    * @param {Number} root: period of the root note\r\n    * @param {Number} semitones: amount of semitones from the root note\r\n    * @param {Number} finetune: finetune value of the base instrument\r\n    * @return {audioNode} audioBuffer of the new note\r\n    **/\n\n  }, {\n    key: \"semiTonesFrom\",\n    value: function semiTonesFrom(source, root, semitones, finetune) {\n      var target = context.createBufferSource();\n      target.buffer = source.buffer;\n\n      if (semitones) {\n        var rootNote = this.tracker.periodNoteTable[root];\n        var rootIndex = this.tracker.noteNames.indexOf(rootNote.name);\n        var targetName = this.tracker.noteNames[rootIndex + semitones];\n\n        if (targetName) {\n          var targetNote = this.tracker.nameNoteTable[targetName];\n\n          if (targetNote) {\n            target.playbackRate.value = rootNote.period / targetNote.period * source.playbackRate.value;\n          }\n        }\n      } else {\n        target.playbackRate.value = source.playbackRate.value;\n      }\n\n      return target;\n    }\n  }, {\n    key: \"getSemiToneFrom\",\n    value: function getSemiToneFrom(period, semitones, finetune) {\n      var result = period;\n\n      if (finetune) {\n        period = this.getFineTuneBasePeriod(period, finetune);\n\n        if (!period) {\n          period = result;\n          console.error('Pasuuna: base period for finetuned ' + finetune + ' period ' + period + ' not found');\n        }\n      }\n\n      if (semitones) {\n        var rootNote = this.tracker.periodNoteTable[period];\n\n        if (rootNote) {\n          var rootIndex = this.tracker.noteNames.indexOf(rootNote.name);\n          var targetName = this.tracker.noteNames[rootIndex + semitones];\n\n          if (targetName) {\n            var targetNote = this.tracker.nameNoteTable[targetName];\n\n            if (targetNote) {\n              result = targetNote.period;\n\n              if (finetune) {\n                result = this.getFineTuneForPeriod(result, finetune);\n              }\n            }\n          }\n        } else {\n          console.error('Pasuuna: note for period ' + period + ' not found');\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getNearestSemiTone\",\n    value: function getNearestSemiTone(period, instrumentIndex) {\n      var tuning = 8;\n\n      if (instrumentIndex) {\n        var instrument = this.tracker.getInstrument(instrumentIndex);\n\n        if (instrument && instrument.sample.finetune) {\n          tuning = tuning + instrument.sample.finetune;\n        }\n      }\n\n      var minDelta = 100000;\n      var result = period;\n\n      for (var note in _enum__WEBPACK_IMPORTED_MODULE_4__[\"NOTEPERIOD\"]) {\n        if (_enum__WEBPACK_IMPORTED_MODULE_4__[\"NOTEPERIOD\"].hasOwnProperty(note)) {\n          var p = _enum__WEBPACK_IMPORTED_MODULE_4__[\"NOTEPERIOD\"][note].tune[tuning];\n          var delta = Math.abs(p - period);\n\n          if (delta < minDelta) {\n            minDelta = delta;\n            result = p;\n          }\n        }\n      }\n\n      return result;\n    } // gives the finetuned period for a base period - protracker mode\n\n  }, {\n    key: \"getFineTuneForPeriod\",\n    value: function getFineTuneForPeriod(period, finetune) {\n      var result = period;\n      var note = this.tracker.periodNoteTable[period];\n\n      if (note && note.tune) {\n        var centerTune = 8;\n        var tune = 8 + finetune;\n\n        if (tune >= 0 && tune < note.tune.length) {\n          result = note.tune[tune];\n        }\n      }\n\n      return result;\n    } // gives the finetuned period for a base note (Fast Tracker Mode)\n\n  }, {\n    key: \"getFineTuneForNote\",\n    value: function getFineTuneForNote(note, finetune) {\n      if (note === _enum__WEBPACK_IMPORTED_MODULE_4__[\"NOTEOFF\"]) {\n        return 1;\n      }\n\n      var ftNote1 = this.tracker.FTNotes[note];\n      var ftNote2 = finetune > 0 ? this.tracker.FTNotes[note + 1] : this.tracker.FTNotes[note - 1];\n\n      if (ftNote1 && ftNote2) {\n        var delta = Math.abs(ftNote2.period - ftNote1.period) / 127;\n        return ftNote1.period - delta * finetune;\n      }\n\n      console.warn('unable to find finetune for note ' + note, ftNote1);\n      return ftNote1 ? ftNote1.period : 100000;\n    } // gives the non-finetuned baseperiod for a finetuned period\n\n  }, {\n    key: \"getFineTuneBasePeriod\",\n    value: function getFineTuneBasePeriod(period, finetune) {\n      var result = period;\n      var table = this.tracker.periodFinetuneTable[finetune];\n\n      if (table) {\n        result = table[period];\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSampleRateForPeriod\",\n    value: function getSampleRateForPeriod(period) {\n      if (this.tracker.inFTMode()) {\n        if (this.tracker.useLinearFrequency) {\n          return 8363 * Math.pow(2, (4608 - period) / 768);\n        }\n\n        return _enum__WEBPACK_IMPORTED_MODULE_4__[\"PC_FREQUENCY_HALF\"] / period;\n      }\n\n      return _enum__WEBPACK_IMPORTED_MODULE_4__[\"AMIGA_PALFREQUENCY_HALF\"] / period;\n    }\n  }, {\n    key: \"limitAmigaPeriod\",\n    value: function limitAmigaPeriod(period) {\n      // limits the period to the allowed Amiga frequency range, between 113 (B3) and 856 (C1)\n      period = Math.max(period, 113);\n      period = Math.min(period, 856);\n      return period;\n    }\n  }, {\n    key: \"setAmigaLowPassFilter\",\n    value: function setAmigaLowPassFilter(on, time) {\n      // note: this is determined by ear comparing a real Amiga 500 - maybe too much effect ?\n      var value = on ? 2000 : 20000;\n      this.lowPassfilter.frequency.setValueAtTime(value, time);\n    }\n  }, {\n    key: \"setMasterVolume\",\n    value: function setMasterVolume(value, time) {\n      _events__WEBPACK_IMPORTED_MODULE_2__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_4__[\"EVENT\"].masterVolumeChange, value);\n      time = time || this.context.currentTime;\n      value = value * 0.7;\n      this.masterVolume.gain.setValueAtTime(this.lastMasterVolume, time);\n      this.masterVolume.gain.linearRampToValueAtTime(value, time + 0.02);\n      this.lastMasterVolume = value;\n    }\n  }, {\n    key: \"slideMasterVolume\",\n    value: function slideMasterVolume(value, time) {\n      _events__WEBPACK_IMPORTED_MODULE_2__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_4__[\"EVENT\"].masterVolumeChange, value);\n      time = time || this.context.currentTime;\n      value = value * 0.7;\n      this.masterVolume.gain.linearRampToValueAtTime(value, time);\n      this.lastMasterVolume = value;\n    }\n  }, {\n    key: \"getLastMasterVolume\",\n    value: function getLastMasterVolume() {\n      return this.lastMasterVolume / 0.7;\n    }\n  }, {\n    key: \"clearScheduledNotesCache\",\n    value: function clearScheduledNotesCache() {\n      // 3 rotating caches\n      this.scheduledNotesBucket++;\n\n      if (this.scheduledNotesBucket > 2) {\n        this.scheduledNotesBucket = 0;\n      }\n\n      this.scheduledNotes[this.scheduledNotesBucket] = [];\n    }\n  }]);\n\n  return Audio;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/audio.js\n");

/***/ }),

/***/ "./src/audio/filterChain.js":
/*!**********************************!*\
  !*** ./src/audio/filterChain.js ***!
  \**********************************/
/*! exports provided: FilterChain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FilterChain\", function() { return FilterChain; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar FilterChain =\n/*#__PURE__*/\nfunction () {\n  function FilterChain(audio, filters) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FilterChain);\n\n    this.filters = filters || {\n      volume: true,\n      panning: true\n    };\n    this.input = null;\n    this.output = null;\n    this.output2 = null;\n    this.volumeGain = null;\n    this.highGain = null;\n    this.midGain = null;\n    this.lowGain = null;\n    this.lowPassfilter = null;\n    this.reverb = null;\n    this.reverbGain = null;\n    this.panner = null;\n    this.context = audio.context;\n    this.useVolume = filters.volume;\n    this.usePanning = filters.panning && this.context.createStereoPanner;\n    this.useHigh = filters.high;\n    this.useMid = filters.mid;\n    this.useLow = filters.low;\n    this.useLowPass = filters.lowPass;\n    this.useReverb = filters.reverb;\n    this.useDistortion = filters.distortion;\n    this._lowValue = 0.0;\n    this._midValue = 0.0;\n    this._highValue = 0.0;\n    this._volumeValue = 70;\n    this._panningValue = 0;\n    this.FREQ_MUL = 7000;\n    this.QUAL_MUL = 30; // use a simple Gain as input so that we can leave this connected while changing filters\n\n    this.input = this.context.createGain();\n    this.input.gain.value = 1;\n    this.output = this.input;\n    this.connectFilters();\n    this.volumeValue(this._volumeValue);\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(FilterChain, [{\n    key: \"lowValue\",\n    value: function lowValue(value) {\n      if (!this.useLow) return;\n\n      if (typeof value !== \"undefined\") {\n        var maxRange = 20;\n        this._lowValue = value;\n        this.lowGain.gain.value = this._lowValue * maxRange;\n      }\n\n      return this._lowValue;\n    }\n  }, {\n    key: \"midValue\",\n    value: function midValue(value) {\n      if (!this.useMid) return;\n\n      if (typeof value !== \"undefined\") {\n        var maxRange = 20;\n        this._midValue = value;\n        this.midGain.gain.value = this._midValue * maxRange;\n      }\n\n      return this._midValue;\n    }\n  }, {\n    key: \"highValue\",\n    value: function highValue(value) {\n      if (!this.useHigh) return;\n\n      if (typeof value !== \"undefined\") {\n        var maxRange = 20;\n        this._highValue = value;\n        this.highGain.gain.value = this._highValue * maxRange;\n      }\n\n      return this._highValue;\n    }\n  }, {\n    key: \"lowPassFrequencyValue\",\n    value: function lowPassFrequencyValue(value) {\n      if (!this.useLowPass) return; // Clamp the frequency between the minimum value (40 Hz) and half of the\n      // sampling rate.\n\n      var minValue = 40;\n      var maxValue = this.context.sampleRate / 2; // Logarithm (base 2) to compute how many octaves fall in the range.\n\n      var numberOfOctaves = Math.log(maxValue / minValue) / Math.LN2; // Compute a multiplier from 0 to 1 based on an exponential scale.\n\n      var multiplier = Math.pow(2, numberOfOctaves * (value - 1.0)); // Get back to the frequency value between min and max.\n\n      this.lowPassfilter.frequency.value = maxValue * multiplier;\n    }\n  }, {\n    key: \"lowPassQualityValue\",\n    value: function lowPassQualityValue(value) {\n      if (!this.useLowPass) return;\n      this.lowPassfilter.Q.value = value * QUAL_MUL;\n    }\n  }, {\n    key: \"volumeValue\",\n    value: function volumeValue(value) {\n      if (!this.useVolume) return;\n\n      if (typeof value !== \"undefined\") {\n        var max = 100;\n        var fraction = value / max;\n        this._volumeValue = value;\n        this.volumeGain.gain.value = fraction * fraction;\n      }\n\n      return this._volumeValue;\n    }\n  }, {\n    key: \"panningValue\",\n    value: function panningValue(value, time) {\n      if (!this.usePanning) return;\n\n      if (typeof value !== \"undefined\") {\n        this._panningValue = value;\n\n        if (time) {\n          this.panner.pan.setValueAtTime(this._panningValue, time);\n        } else {\n          // very weird bug in safari on OSX ... setting pan.value directy to 0 does not work\n          this.panner.pan.setValueAtTime(this._panningValue, this.context.currentTime);\n        }\n      }\n\n      return this._panningValue;\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(name, value) {\n      this.disConnectFilter();\n      if (name === \"high\") this.useHigh = !!value;\n      if (name === \"mid\") this.useMid = !!value;\n      if (name === \"low\") this.useLow = !!value;\n      if (name === \"lowPass\") this.useLowPass = !!value;\n      if (name === \"reverb\") this.useReverb = !!value;\n      if (name === \"panning\") this.usePanning = !!value && this.context.createStereoPanner;\n      this.connectFilters();\n    }\n  }, {\n    key: \"connectFilters\",\n    value: function connectFilters() {\n      this.output = this.input;\n\n      if (this.useHigh) {\n        this.highGain = this.highGain || this.createHigh();\n        this.output.connect(this.highGain);\n        this.output = this.highGain;\n      }\n\n      if (this.useMid) {\n        this.midGain = this.midGain || this.createMid();\n        this.output.connect(this.midGain);\n        this.output = this.midGain;\n      }\n\n      if (this.useLow) {\n        this.lowGain = this.lowGain || this.createLow();\n        this.output.connect(this.lowGain);\n        this.output = this.lowGain;\n      }\n\n      if (this.useLowPass) {\n        this.lowPassfilter = this.lowPassfilter || this.createLowPass();\n        this.output.connect(this.lowPassfilter);\n        this.output = this.lowPassfilter;\n      }\n\n      if (this.useReverb) {\n        this.reverb = this.reverb || this.context.createConvolver();\n        this.reverbGain = this.reverbGain || this.context.createGain();\n        this.reverbGain.gain.value = 0;\n        this.output.connect(this.reverbGain);\n        this.reverbGain.connect(this.reverb);\n        this.output2 = this.reverb;\n      }\n\n      if (this.useDistortion) {\n        var distortion = this.context.createWaveShaper();\n        distortion.curve = this.distortionCurve(400);\n        distortion.oversample = '4x';\n      }\n\n      if (this.usePanning) {\n        this.panner = this.panner || this.context.createStereoPanner();\n        this.output.connect(this.panner);\n        this.output = this.panner;\n      }\n\n      this.volumeGain = this.volumeGain || this.context.createGain();\n      this.output.connect(this.volumeGain);\n      if (this.output2) this.output2.connect(this.volumeGain);\n      this.output = this.volumeGain;\n    }\n  }, {\n    key: \"disConnectFilter\",\n    value: function disConnectFilter() {\n      this.input.disconnect();\n      if (this.highGain) this.highGain.disconnect();\n      if (this.midGain) this.midGain.disconnect();\n      if (this.lowGain) this.lowGain.disconnect();\n      if (this.lowPassfilter) this.lowPassfilter.disconnect();\n      if (this.reverbGain) this.reverbGain.disconnect();\n      if (this.panner) this.panner.disconnect();\n      this.output2 = undefined;\n    }\n  }, {\n    key: \"createHigh\",\n    value: function createHigh() {\n      var filter = this.context.createBiquadFilter();\n      filter.type = \"highshelf\";\n      filter.frequency.value = 3200.0;\n      filter.gain.value = this._highValue;\n      return filter;\n    }\n  }, {\n    key: \"createMid\",\n    value: function createMid() {\n      var filter = this.context.createBiquadFilter();\n      filter.type = \"peaking\";\n      filter.frequency.value = 1000.0;\n      filter.Q.value = 0.5;\n      filter.gain.value = this._midValue;\n      return filter;\n    }\n  }, {\n    key: \"createLow\",\n    value: function createLow() {\n      var filter = this.context.createBiquadFilter();\n      filter.type = \"lowshelf\";\n      filter.frequency.value = 320.0;\n      filter.gain.value = this._lowValue;\n      return filter;\n    }\n  }, {\n    key: \"createLowPass\",\n    value: function createLowPass() {\n      var filter = this.context.createBiquadFilter();\n      filter.type = \"lowpass\";\n      filter.frequency.value = 5000;\n      return filter;\n    }\n  }, {\n    key: \"distortionCurve\",\n    value: function distortionCurve(amount) {\n      var k = typeof amount === 'number' ? amount : 50;\n      var n_samples = 44100;\n      var curve = new Float32Array(n_samples);\n      var deg = Math.PI / 180;\n      var x;\n\n      for (i = 0; i < n_samples; ++i) {\n        x = i * 2 / n_samples - 1;\n        curve[i] = (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n      }\n\n      return curve;\n    }\n  }]);\n\n  return FilterChain;\n}();\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/audio/filterChain.js\n");

/***/ }),

/***/ "./src/binaryStream.js":
/*!*****************************!*\
  !*** ./src/binaryStream.js ***!
  \*****************************/
/*! exports provided: BinaryStream */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BinaryStream\", function() { return BinaryStream; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar BinaryStream =\n/*#__PURE__*/\nfunction () {\n  function BinaryStream(arrayBuffer, bigEndian) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, BinaryStream);\n\n    this.index = 0;\n    this.littleEndian = !bigEndian;\n    this.buffer = arrayBuffer;\n    this.dataView = new DataView(arrayBuffer);\n    this.length = arrayBuffer.byteLength;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(BinaryStream, [{\n    key: \"setIndex\",\n    value: function setIndex(value) {\n      value = value === 0 ? value : value || this.index;\n\n      if (value < 0) {\n        value = 0;\n      }\n\n      if (value >= this.length) {\n        value = this.length - 1;\n      }\n\n      this.index = value;\n    }\n  }, {\n    key: \"goto\",\n    value: function goto(value) {\n      this.setIndex(value);\n    }\n  }, {\n    key: \"jump\",\n    value: function jump(value) {\n      this.goto(this.index + value);\n    }\n  }, {\n    key: \"readByte\",\n    value: function readByte(position) {\n      this.setIndex(position);\n      var b = this.dataView.getInt8(this.index);\n      this.index++;\n      return b;\n    }\n  }, {\n    key: \"readUbyte\",\n    value: function readUbyte(position) {\n      this.setIndex(position);\n      var b = this.dataView.getUint8(this.index);\n      this.index++;\n      return b;\n    }\n  }, {\n    key: \"readLong\",\n    value: function readLong(position) {\n      return this.readUint(position);\n    }\n  }, {\n    key: \"readDWord\",\n    value: function readDWord(position) {\n      return this.readUint(position);\n    }\n  }, {\n    key: \"readUint\",\n    value: function readUint(position) {\n      this.setIndex(position);\n      var i = this.dataView.getUint32(this.index, this.littleEndian);\n      this.index += 4;\n      return i;\n    }\n  }, {\n    key: \"readBytes\",\n    value: function readBytes(len, position) {\n      this.setIndex(position);\n      var buffer = new Uint8Array(len);\n      var offset = 0;\n      var i = this.index;\n\n      if ((len += i) > this.length) {\n        len = this.length;\n      }\n\n      for (; i < len; ++i) {\n        buffer.setUint8(offset++, this.dataView.getUint8(i));\n      }\n\n      this.setIndex(len);\n      return buffer;\n    }\n  }, {\n    key: \"readString\",\n    value: function readString(len, position) {\n      this.setIndex(position);\n      var src = this.dataView;\n      var i = this.index;\n      var text = '';\n\n      if ((len += i) > this.length) {\n        len = this.length;\n      }\n\n      for (; i < len; ++i) {\n        var c = src.getUint8(i);\n\n        if (c == 0) {\n          break;\n        }\n\n        text += String.fromCharCode(c);\n      }\n\n      this.setIndex(len);\n      return text;\n    } // same as readUshort\n\n  }, {\n    key: \"readWord\",\n    value: function readWord(position) {\n      this.setIndex(position);\n      var w = this.dataView.getUint16(this.index, this.littleEndian);\n      this.index += 2;\n      return w;\n    }\n  }, {\n    key: \"readShort\",\n    value: function readShort(value, position) {\n      this.setIndex(position);\n      var w = this.dataView.getInt16(this.index, this.littleEndian);\n      this.index += 2;\n      return w;\n    }\n  }, {\n    key: \"isEOF\",\n    value: function isEOF(margin) {\n      margin = margin || 0;\n      return this.index >= this.length - margin;\n    }\n  }]);\n\n  return BinaryStream;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/binaryStream.js\n");

/***/ }),

/***/ "./src/enum.js":
/*!*********************!*\
  !*** ./src/enum.js ***!
  \*********************/
/*! exports provided: EVENT, PLAYTYPE, FILETYPE, MODULETYPE, STEREOSEPARATION, FREQUENCYTABLE, LOOPTYPE, AMIGA_PALFREQUENCY, PC_FREQUENCY, AMIGA_PALFREQUENCY_HALF, PC_FREQUENCY_HALF, NOTEPERIOD, FTNOTEPERIOD, NOTEOFF, TRACKERMODE, SETTINGS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EVENT\", function() { return EVENT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PLAYTYPE\", function() { return PLAYTYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FILETYPE\", function() { return FILETYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODULETYPE\", function() { return MODULETYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STEREOSEPARATION\", function() { return STEREOSEPARATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FREQUENCYTABLE\", function() { return FREQUENCYTABLE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LOOPTYPE\", function() { return LOOPTYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AMIGA_PALFREQUENCY\", function() { return AMIGA_PALFREQUENCY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PC_FREQUENCY\", function() { return PC_FREQUENCY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AMIGA_PALFREQUENCY_HALF\", function() { return AMIGA_PALFREQUENCY_HALF; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PC_FREQUENCY_HALF\", function() { return PC_FREQUENCY_HALF; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NOTEPERIOD\", function() { return NOTEPERIOD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FTNOTEPERIOD\", function() { return FTNOTEPERIOD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NOTEOFF\", function() { return NOTEOFF; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TRACKERMODE\", function() { return TRACKERMODE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SETTINGS\", function() { return SETTINGS; });\nvar EVENT = {\n  instrumentChange: 1,\n  patternChange: 2,\n  patternPosChange: 3,\n  patternTableChange: 4,\n  patternLoopChange: 5,\n  trackStateChange: 7,\n  playingChange: 8,\n  playTypeChange: 9,\n  songPositionChange: 10,\n  songRestart: 11,\n  songBPMChange: 12,\n  samplePlay: 13,\n  masterVolumeChange: 15,\n  songPropertyChange: 16,\n  instrumentNameChange: 17,\n  command: 18,\n  trackCountChange: 24,\n  songLoaded: 26,\n  songLoading: 27,\n  trackerModeChanged: 28,\n  instrumentListChange: 29,\n  filterChainCountChange: 33,\n  sampleIndexChange: 36\n};\nvar PLAYTYPE = {\n  song: 1,\n  pattern: 2\n};\nvar FILETYPE = {\n  module: 1,\n  sample: 2,\n  pattern: 3,\n  track: 4\n};\nvar MODULETYPE = {\n  mod: 1,\n  xm: 2\n};\nvar STEREOSEPARATION = {\n  FULL: 1,\n  BALANCED: 2,\n  NONE: 3\n};\nvar FREQUENCYTABLE = {\n  AMIGA: 1,\n  LINEAR: 2\n};\nvar LOOPTYPE = {\n  NONE: 0,\n  FORWARD: 1,\n  PINGPONG: 2\n}; // Amiga Frequency\n//export const PALFREQUENCY = 7093789.2;\n\nvar AMIGA_PALFREQUENCY = 7093790; // not that my ears can hear the difference but this seems to be the correct value  ftp://ftp.modland.com/pub/documents/format_documentation/Protracker%20effects%20(MODFIL12.TXT)%20(.mod).txt\n// Frequency used by Fast Tracker in Amiga mode\n\nvar PC_FREQUENCY = 7158728;\nvar AMIGA_PALFREQUENCY_HALF = AMIGA_PALFREQUENCY / 2;\nvar PC_FREQUENCY_HALF = PC_FREQUENCY / 2; // used in Protracker mode\n\nvar NOTEPERIOD = {\n  C1: {\n    period: 856,\n    name: \"C-1\",\n    tune: [907, 900, 894, 887, 881, 875, 868, 862, 856, 850, 844, 838, 832, 826, 820, 814]\n  },\n  Cs1: {\n    period: 808,\n    name: \"C#1\",\n    tune: [856, 850, 844, 838, 832, 826, 820, 814, 808, 802, 796, 791, 785, 779, 774, 768]\n  },\n  D1: {\n    period: 762,\n    name: \"D-1\",\n    tune: [808, 802, 796, 791, 785, 779, 774, 768, 762, 757, 752, 746, 741, 736, 730, 725]\n  },\n  Ds1: {\n    period: 720,\n    name: \"D#1\",\n    tune: [762, 757, 752, 746, 741, 736, 730, 725, 720, 715, 709, 704, 699, 694, 689, 684]\n  },\n  E1: {\n    period: 678,\n    name: \"E-1\",\n    tune: [720, 715, 709, 704, 699, 694, 689, 684, 678, 674, 670, 665, 660, 655, 651, 646]\n  },\n  F1: {\n    period: 640,\n    name: \"F-1\",\n    tune: [678, 675, 670, 665, 660, 655, 651, 646, 640, 637, 632, 628, 623, 619, 614, 610]\n  },\n  Fs1: {\n    period: 604,\n    name: \"F#1\",\n    tune: [640, 636, 632, 628, 623, 619, 614, 610, 604, 601, 597, 592, 588, 584, 580, 575]\n  },\n  G1: {\n    period: 570,\n    name: \"G-1\",\n    tune: [604, 601, 597, 592, 588, 584, 580, 575, 570, 567, 563, 559, 555, 551, 547, 543]\n  },\n  Gs1: {\n    period: 538,\n    name: \"G#1\",\n    tune: [570, 567, 563, 559, 555, 551, 547, 543, 538, 535, 532, 528, 524, 520, 516, 513]\n  },\n  A1: {\n    period: 508,\n    name: \"A-1\",\n    tune: [538, 535, 532, 528, 524, 520, 516, 513, 508, 505, 502, 498, 495, 491, 487, 484]\n  },\n  As1: {\n    period: 480,\n    name: \"A#1\",\n    tune: [508, 505, 502, 498, 494, 491, 487, 484, 480, 477, 474, 470, 467, 463, 460, 457]\n  },\n  B1: {\n    period: 453,\n    name: \"B-1\",\n    tune: [480, 477, 474, 470, 467, 463, 460, 457, 453, 450, 447, 444, 441, 437, 434, 431]\n  },\n  C2: {\n    period: 428,\n    name: \"C-2\",\n    tune: [453, 450, 447, 444, 441, 437, 434, 431, 428, 425, 422, 419, 416, 413, 410, 407]\n  },\n  Cs2: {\n    period: 404,\n    name: \"C#2\",\n    tune: [428, 425, 422, 419, 416, 413, 410, 407, 404, 401, 398, 395, 392, 390, 387, 384]\n  },\n  D2: {\n    period: 381,\n    name: \"D-2\",\n    tune: [404, 401, 398, 395, 392, 390, 387, 384, 381, 379, 376, 373, 370, 368, 365, 363]\n  },\n  Ds2: {\n    period: 360,\n    name: \"D#2\",\n    tune: [381, 379, 376, 373, 370, 368, 365, 363, 360, 357, 355, 352, 350, 347, 345, 342]\n  },\n  E2: {\n    period: 339,\n    name: \"E-2\",\n    tune: [360, 357, 355, 352, 350, 347, 345, 342, 339, 337, 335, 332, 330, 328, 325, 323]\n  },\n  F2: {\n    period: 320,\n    name: \"F-2\",\n    tune: [339, 337, 335, 332, 330, 328, 325, 323, 320, 318, 316, 314, 312, 309, 307, 305]\n  },\n  Fs2: {\n    period: 302,\n    name: \"F#2\",\n    tune: [320, 318, 316, 314, 312, 309, 307, 305, 302, 300, 298, 296, 294, 292, 290, 288]\n  },\n  G2: {\n    period: 285,\n    name: \"G-2\",\n    tune: [302, 300, 298, 296, 294, 292, 290, 288, 285, 284, 282, 280, 278, 276, 274, 272]\n  },\n  Gs2: {\n    period: 269,\n    name: \"G#2\",\n    tune: [285, 284, 282, 280, 278, 276, 274, 272, 269, 268, 266, 264, 262, 260, 258, 256]\n  },\n  A2: {\n    period: 254,\n    name: \"A-2\",\n    tune: [269, 268, 266, 264, 262, 260, 258, 256, 254, 253, 251, 249, 247, 245, 244, 242]\n  },\n  As2: {\n    period: 240,\n    name: \"A#2\",\n    tune: [254, 253, 251, 249, 247, 245, 244, 242, 240, 239, 237, 235, 233, 232, 230, 228]\n  },\n  B2: {\n    period: 226,\n    name: \"B-2\",\n    tune: [240, 238, 237, 235, 233, 232, 230, 228, 226, 225, 224, 222, 220, 219, 217, 216]\n  },\n  C3: {\n    period: 214,\n    name: \"C-3\",\n    tune: [226, 225, 223, 222, 220, 219, 217, 216, 214, 213, 211, 209, 208, 206, 205, 204]\n  },\n  Cs3: {\n    period: 202,\n    name: \"C#3\",\n    tune: [214, 212, 211, 209, 208, 206, 205, 203, 202, 201, 199, 198, 196, 195, 193, 192]\n  },\n  D3: {\n    period: 190,\n    name: \"D-3\",\n    tune: [202, 200, 199, 198, 196, 195, 193, 192, 190, 189, 188, 187, 185, 184, 183, 181]\n  },\n  Ds3: {\n    period: 180,\n    name: \"D#3\",\n    tune: [190, 189, 188, 187, 185, 184, 183, 181, 180, 179, 177, 176, 175, 174, 172, 171]\n  },\n  E3: {\n    period: 170,\n    name: \"E-3\",\n    tune: [180, 179, 177, 176, 175, 174, 172, 171, 170, 169, 167, 166, 165, 164, 163, 161]\n  },\n  F3: {\n    period: 160,\n    name: \"F-3\",\n    tune: [170, 169, 167, 166, 165, 164, 163, 161, 160, 159, 158, 157, 156, 155, 154, 152]\n  },\n  Fs3: {\n    period: 151,\n    name: \"F#3\",\n    tune: [160, 159, 158, 157, 156, 155, 154, 152, 151, 150, 149, 148, 147, 146, 145, 144]\n  },\n  G3: {\n    period: 143,\n    name: \"G-3\",\n    tune: [151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136]\n  },\n  Gs3: {\n    period: 135,\n    name: \"G#3\",\n    tune: [143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128]\n  },\n  A3: {\n    period: 127,\n    name: \"A-3\",\n    tune: [135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 125, 124, 123, 122, 121]\n  },\n  As3: {\n    period: 120,\n    name: \"A#3\",\n    tune: [127, 126, 125, 125, 123, 123, 122, 121, 120, 119, 118, 118, 117, 116, 115, 114]\n  },\n  B3: {\n    period: 113,\n    name: \"B-3\",\n    tune: [120, 119, 118, 118, 117, 116, 115, 114, 113, 113, 112, 111, 110, 109, 109, 108]\n  }\n}; // used in Fasttracker - Amiga frequency mode\n\nvar FTNOTEPERIOD = {\n  None: {\n    name: \"---\"\n  },\n  C0: {\n    name: \"C-0\",\n    period: 6848\n  },\n  Cs0: {\n    name: \"C#0\",\n    period: 6464\n  },\n  D0: {\n    name: \"D-0\",\n    period: 6096\n  },\n  Ds0: {\n    name: \"D#0\",\n    period: 5760\n  },\n  E0: {\n    name: \"E-0\",\n    period: 5424\n  },\n  F0: {\n    name: \"F-0\",\n    period: 5120\n  },\n  Fs0: {\n    name: \"F#0\",\n    period: 4832\n  },\n  G0: {\n    name: \"G-0\",\n    period: 4560\n  },\n  Gs0: {\n    name: \"G#0\",\n    period: 4304\n  },\n  A0: {\n    name: \"A-0\",\n    period: 4064\n  },\n  As0: {\n    name: \"A#0\",\n    period: 3840\n  },\n  B0: {\n    name: \"B-0\",\n    period: 3624\n  },\n  C1: {\n    name: \"C-1\",\n    period: 3424\n  },\n  Cs1: {\n    name: \"C#1\",\n    period: 3232\n  },\n  D1: {\n    name: \"D-1\",\n    period: 3048\n  },\n  Ds1: {\n    name: \"D#1\",\n    period: 2880\n  },\n  E1: {\n    name: \"E-1\",\n    period: 2712\n  },\n  F1: {\n    name: \"F-1\",\n    period: 2560\n  },\n  Fs1: {\n    name: \"F#1\",\n    period: 2416\n  },\n  G1: {\n    name: \"G-1\",\n    period: 2280\n  },\n  Gs1: {\n    name: \"G#1\",\n    period: 2152\n  },\n  A1: {\n    name: \"A-1\",\n    period: 2032\n  },\n  As1: {\n    name: \"A#1\",\n    period: 1920\n  },\n  B1: {\n    name: \"B-1\",\n    period: 1812\n  },\n  C2: {\n    name: \"C-2\",\n    period: 1712\n  },\n  Cs2: {\n    name: \"C#2\",\n    period: 1616\n  },\n  D2: {\n    name: \"D-2\",\n    period: 1524\n  },\n  Ds2: {\n    name: \"D#2\",\n    period: 1440\n  },\n  E2: {\n    name: \"E-2\",\n    period: 1356\n  },\n  F2: {\n    name: \"F-2\",\n    period: 1280\n  },\n  Fs2: {\n    name: \"F#2\",\n    period: 1208\n  },\n  G2: {\n    name: \"G-2\",\n    period: 1140\n  },\n  Gs2: {\n    name: \"G#2\",\n    period: 1076\n  },\n  A2: {\n    name: \"A-2\",\n    period: 1016\n  },\n  As2: {\n    name: \"A#2\",\n    period: 960\n  },\n  B2: {\n    name: \"B-2\",\n    period: 906\n  },\n  C3: {\n    name: \"C-3\",\n    period: 856\n  },\n  Cs3: {\n    name: \"C#3\",\n    period: 808\n  },\n  D3: {\n    name: \"D-3\",\n    period: 762\n  },\n  Ds3: {\n    name: \"D#3\",\n    period: 720\n  },\n  E3: {\n    name: \"E-3\",\n    period: 678\n  },\n  F3: {\n    name: \"F-3\",\n    period: 640\n  },\n  Fs3: {\n    name: \"F#3\",\n    period: 604\n  },\n  G3: {\n    name: \"G-3\",\n    period: 570\n  },\n  Gs3: {\n    name: \"G#3\",\n    period: 538\n  },\n  A3: {\n    name: \"A-3\",\n    period: 508\n  },\n  As3: {\n    name: \"A#3\",\n    period: 480\n  },\n  B3: {\n    name: \"B-3\",\n    period: 453\n  },\n  C4: {\n    name: \"C-4\",\n    period: 428\n  },\n  Cs4: {\n    name: \"C#4\",\n    period: 404\n  },\n  D4: {\n    name: \"D-4\",\n    period: 381\n  },\n  Ds4: {\n    name: \"D#4\",\n    period: 360\n  },\n  E4: {\n    name: \"E-4\",\n    period: 339\n  },\n  F4: {\n    name: \"F-4\",\n    period: 320\n  },\n  Fs4: {\n    name: \"F#4\",\n    period: 302\n  },\n  G4: {\n    name: \"G-4\",\n    period: 285\n  },\n  Gs4: {\n    name: \"G#4\",\n    period: 269\n  },\n  A4: {\n    name: \"A-4\",\n    period: 254\n  },\n  As4: {\n    name: \"A#4\",\n    period: 240\n  },\n  B4: {\n    name: \"B-4\",\n    period: 226.5,\n    modPeriod: 226\n  },\n  C5: {\n    name: \"C-5\",\n    period: 214\n  },\n  Cs5: {\n    name: \"C#5\",\n    period: 202\n  },\n  D5: {\n    name: \"D-5\",\n    period: 190.5,\n    modPeriod: 190\n  },\n  Ds5: {\n    name: \"D#5\",\n    period: 180\n  },\n  E5: {\n    name: \"E-5\",\n    period: 169.5,\n    modPeriod: 170\n  },\n  F5: {\n    name: \"F-5\",\n    period: 160\n  },\n  Fs5: {\n    name: \"F#5\",\n    period: 151\n  },\n  G5: {\n    name: \"G-5\",\n    period: 142.5,\n    modPeriod: 143\n  },\n  Gs5: {\n    name: \"G#5\",\n    period: 134.5,\n    modPeriod: 135\n  },\n  A5: {\n    name: \"A-5\",\n    period: 127\n  },\n  As5: {\n    name: \"A#5\",\n    period: 120\n  },\n  B5: {\n    name: \"B-5\",\n    period: 113.25,\n    modPeriod: 113\n  },\n  C6: {\n    name: \"C-6\",\n    period: 107\n  },\n  Cs6: {\n    name: \"C#6\",\n    period: 101\n  },\n  D6: {\n    name: \"D-6\",\n    period: 95.25,\n    modPeriod: 95\n  },\n  Ds6: {\n    name: \"D#6\",\n    period: 90\n  },\n  E6: {\n    name: \"E-6\",\n    period: 84.75,\n    modPeriod: 85\n  },\n  F6: {\n    name: \"F-6\",\n    period: 80\n  },\n  Fs6: {\n    name: \"F#6\",\n    period: 75.5,\n    modPeriod: 75\n  },\n  G6: {\n    name: \"G-6\",\n    period: 71.25,\n    modPeriod: 71\n  },\n  Gs6: {\n    name: \"G#6\",\n    period: 67.25,\n    modPeriod: 67\n  },\n  A6: {\n    name: \"A-6\",\n    period: 63.5,\n    modPeriod: 63\n  },\n  As6: {\n    name: \"A#6\",\n    period: 60\n  },\n  B6: {\n    name: \"B-6\",\n    period: 56.625,\n    modPeriod: 56\n  },\n  C7: {\n    name: \"C-7\",\n    period: 53.5,\n    modPeriod: 53\n  },\n  Cs7: {\n    name: \"C#7\",\n    period: 50.5,\n    modPeriod: 50\n  },\n  D7: {\n    name: \"D-7\",\n    period: 47.625,\n    modPeriod: 47\n  },\n  Ds7: {\n    name: \"D#7\",\n    period: 45\n  },\n  E7: {\n    name: \"E-7\",\n    period: 42.375,\n    modPeriod: 42\n  },\n  F7: {\n    name: \"F-7\",\n    period: 40\n  },\n  Fs7: {\n    name: \"F#7\",\n    period: 37.75,\n    modPeriod: 37\n  },\n  G7: {\n    name: \"G-7\",\n    period: 35.625,\n    modPeriod: 35\n  },\n  Gs7: {\n    name: \"G#7\",\n    period: 33.625,\n    modPeriod: 33\n  },\n  A7: {\n    name: \"A-7\",\n    period: 31.75,\n    modPeriod: 31\n  },\n  As7: {\n    name: \"A#7\",\n    period: 30\n  },\n  B7: {\n    name: \"B-7\",\n    period: 28.3125,\n    modPeriod: 28\n  },\n  // not used in fileformat but can be played through transposed notes\n  C8: {\n    name: \"C-8\",\n    period: 26.75\n  },\n  Cs8: {\n    name: \"C#8\",\n    period: 25.25\n  },\n  D8: {\n    name: \"D-8\",\n    period: 23.8125\n  },\n  Ds8: {\n    name: \"D#8\",\n    period: 22.5\n  },\n  E8: {\n    name: \"E-8\",\n    period: 21.1875\n  },\n  F8: {\n    name: \"F-8\",\n    period: 20\n  },\n  Fs8: {\n    name: \"F#8\",\n    period: 18.875\n  },\n  G8: {\n    name: \"G-8\",\n    period: 17.8125\n  },\n  Gs8: {\n    name: \"G#8\",\n    period: 16.8125\n  },\n  A8: {\n    name: \"A-8\",\n    period: 15.875\n  },\n  As8: {\n    name: \"A#8\",\n    period: 15\n  },\n  B8: {\n    name: \"B-8\",\n    period: 14.15625\n  },\n  C9: {\n    name: \"C-9\",\n    period: 13.375\n  },\n  Cs9: {\n    name: \"C#9\",\n    period: 12.625\n  },\n  D9: {\n    name: \"D-9\",\n    period: 11.90625\n  },\n  Ds9: {\n    name: \"D#9\",\n    period: 11.25\n  },\n  E9: {\n    name: \"E-9\",\n    period: 10.59375\n  },\n  F9: {\n    name: \"F-9\",\n    period: 10\n  },\n  Fs9: {\n    name: \"F#9\",\n    period: 9.4375\n  },\n  G9: {\n    name: \"G-9\",\n    period: 8.90625\n  },\n  Gs9: {\n    name: \"G#9\",\n    period: 8.40625\n  },\n  A9: {\n    name: \"A-9\",\n    period: 7.9375\n  },\n  As9: {\n    name: \"A#9\",\n    period: 7.5\n  },\n  B9: {\n    name: \"B-9\",\n    period: 7.078125\n  },\n  C10: {\n    name: \"C-10\",\n    period: 6.6875\n  },\n  Cs10: {\n    name: \"C#10\",\n    period: 6.3125\n  },\n  D10: {\n    name: \"D-10\",\n    period: 5.953125\n  },\n  Ds10: {\n    name: \"D#10\",\n    period: 5.625\n  },\n  E10: {\n    name: \"E-10\",\n    period: 5.296875\n  },\n  F10: {\n    name: \"F-10\",\n    period: 5\n  },\n  Fs10: {\n    name: \"F#10\",\n    period: 4.71875\n  },\n  G10: {\n    name: \"G-10\",\n    period: 4.453125\n  },\n  Gs10: {\n    name: \"G#10\",\n    period: 4.203125\n  },\n  A10: {\n    name: \"A-10\",\n    period: 3.96875\n  },\n  As10: {\n    name: \"A#10\",\n    period: 3.75\n  },\n  B10: {\n    name: \"B-10\",\n    period: 3.5390625\n  },\n  C11: {\n    name: \"C-11\",\n    period: 3.34375\n  },\n  Cs11: {\n    name: \"C#11\",\n    period: 3.15625\n  },\n  D11: {\n    name: \"D-11\",\n    period: 2.9765625\n  },\n  Ds11: {\n    name: \"D#11\",\n    period: 2.8125\n  },\n  E11: {\n    name: \"E-11\",\n    period: 2.6484375\n  },\n  F11: {\n    name: \"F-11\",\n    period: 2.5\n  },\n  Fs11: {\n    name: \"F#11\",\n    period: 2.359375\n  },\n  G11: {\n    name: \"G-11\",\n    period: 2.2265625\n  },\n  Gs11: {\n    name: \"G#11\",\n    period: 2.1015625\n  },\n  A11: {\n    name: \"A-11\",\n    period: 1.984375\n  },\n  As11: {\n    name: \"A#11\",\n    period: 1.875\n  },\n  B11: {\n    name: \"B-11\",\n    period: 1.76953125\n  },\n  OFF: {\n    name: \"OFF\",\n    period: 0\n  }\n};\nvar NOTEOFF = 145;\nvar TRACKERMODE = {\n  PROTRACKER: 1,\n  FASTTRACKER: 2\n};\nvar SETTINGS = {\n  unrollLoops: false,\n  unrollShortLoops: false,\n  sustainKeyboardNotes: false,\n  stereoSeparation: STEREOSEPARATION.BALANCED,\n  emulateProtracker1OffsetBug: true,\n  playbackDelay: 0.05,\n  playbackDelayStart: 0.02\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/enum.js\n");

/***/ }),

/***/ "./src/events.js":
/*!***********************!*\
  !*** ./src/events.js ***!
  \***********************/
/*! exports provided: events */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"events\", function() { return events; });\n/* harmony import */ var tiny_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-emitter */ \"./node_modules/tiny-emitter/index.js\");\n/* harmony import */ var tiny_emitter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tiny_emitter__WEBPACK_IMPORTED_MODULE_0__);\n\nvar events = new tiny_emitter__WEBPACK_IMPORTED_MODULE_0__[\"TinyEmitter\"]();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QYXN1dW5hUGxheWVyLy4vc3JjL2V2ZW50cy5qcz8xNTY2Il0sIm5hbWVzIjpbImV2ZW50cyIsIlRpbnlFbWl0dGVyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRU8sSUFBTUEsTUFBTSxHQUFHLElBQUlDLHdEQUFKLEVBQWYiLCJmaWxlIjoiLi9zcmMvZXZlbnRzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGlueUVtaXR0ZXIgfSBmcm9tICd0aW55LWVtaXR0ZXInO1xyXG5cclxuZXhwb3J0IGNvbnN0IGV2ZW50cyA9IG5ldyBUaW55RW1pdHRlcigpO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/events.js\n");

/***/ }),

/***/ "./src/fileformats/FileType.js":
/*!*************************************!*\
  !*** ./src/fileformats/FileType.js ***!
  \*************************************/
/*! exports provided: FileType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FileType\", function() { return FileType; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n\nvar FileType = function FileType(name, isMod, loader) {\n  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FileType);\n\n  this.name = name;\n  this.isMod = isMod;\n  this.loader = loader;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QYXN1dW5hUGxheWVyLy4vc3JjL2ZpbGVmb3JtYXRzL0ZpbGVUeXBlLmpzPzBlMmMiXSwibmFtZXMiOlsiRmlsZVR5cGUiLCJuYW1lIiwiaXNNb2QiLCJsb2FkZXIiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sSUFBTUEsUUFBYixHQUNDLGtCQUFZQyxJQUFaLEVBQWtCQyxLQUFsQixFQUF5QkMsTUFBekIsRUFBaUM7QUFBQTs7QUFDaEMsT0FBS0YsSUFBTCxHQUFZQSxJQUFaO0FBQ0EsT0FBS0MsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsT0FBS0MsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsQ0FMRiIsImZpbGUiOiIuL3NyYy9maWxlZm9ybWF0cy9GaWxlVHlwZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBGaWxlVHlwZSB7XHJcblx0Y29uc3RydWN0b3IobmFtZSwgaXNNb2QsIGxvYWRlcikge1xyXG5cdFx0dGhpcy5uYW1lID0gbmFtZTtcclxuXHRcdHRoaXMuaXNNb2QgPSBpc01vZDtcclxuXHRcdHRoaXMubG9hZGVyID0gbG9hZGVyO1xyXG5cdH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/fileformats/FileType.js\n");

/***/ }),

/***/ "./src/fileformats/detect.js":
/*!***********************************!*\
  !*** ./src/fileformats/detect.js ***!
  \***********************************/
/*! exports provided: FileDetector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FileDetector\", function() { return FileDetector; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _soundtracker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./soundtracker */ \"./src/fileformats/soundtracker.js\");\n/* harmony import */ var _protracker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./protracker */ \"./src/fileformats/protracker.js\");\n/* harmony import */ var _fasttracker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fasttracker */ \"./src/fileformats/fasttracker.js\");\n/* harmony import */ var _lib_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/util */ \"./src/lib/util.js\");\n/* harmony import */ var _FileType__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./FileType */ \"./src/fileformats/FileType.js\");\n\n\n\n\n\n\n\nvar FileDetector =\n/*#__PURE__*/\nfunction () {\n  function FileDetector(tracker) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FileDetector);\n\n    this.tracker = tracker;\n    this.filetypes = {\n      unknown: new _FileType__WEBPACK_IMPORTED_MODULE_6__[\"FileType\"]('UNKNOWN', null, null),\n      unsupported: new _FileType__WEBPACK_IMPORTED_MODULE_6__[\"FileType\"]('UNSUPPORTED', null, null),\n      mod_ProTracker: new _FileType__WEBPACK_IMPORTED_MODULE_6__[\"FileType\"]('PROTRACKER', true, function () {\n        return new _protracker__WEBPACK_IMPORTED_MODULE_3__[\"ProTracker\"](tracker);\n      }),\n      mod_SoundTracker: new _FileType__WEBPACK_IMPORTED_MODULE_6__[\"FileType\"]('SOUNDTRACKER', true, function () {\n        return new _soundtracker__WEBPACK_IMPORTED_MODULE_2__[\"SoundTracker\"](tracker);\n      }),\n      mod_FastTracker: new _FileType__WEBPACK_IMPORTED_MODULE_6__[\"FileType\"]('FASTTRACKER', true, function () {\n        return new _fasttracker__WEBPACK_IMPORTED_MODULE_4__[\"FastTracker\"](tracker);\n      })\n    };\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(FileDetector, [{\n    key: \"detect\",\n    value: function detect(file, name) {\n      var fmts = ['M.K.', 'M!K!', 'M&K!', 'FLT4', '2CHN', '6CHN', '8CHN', '10CH', '12CH', '14CH', '16CH', '18CH', '20CH', '22CH', '24CH', '26CH', '28CH', '30CH', '32CH'];\n      var length = file.length;\n      var id = '';\n      id = file.readString(17, 0);\n\n      if (id == 'Extended Module: ') {\n        return this.filetypes.mod_FastTracker;\n      }\n\n      if (length > 1100) {\n        id = file.readString(4, 1080); // M.K.\n      }\n\n      if (fmts.includes(id)) {\n        return this.filetypes.mod_ProTracker;\n      } // might be an 15 instrument mod?\n      // filename should at least contain a '.' this avoids checking all ST-XX samples\n\n\n      if (name && name.indexOf('.') >= 0 && length > 1624) {\n        var isSoundTracker = Object(_lib_util__WEBPACK_IMPORTED_MODULE_5__[\"isST\"])(file);\n\n        if (isSoundTracker) {\n          return this.filetypes.mod_SoundTracker;\n        }\n      } // fallback to sample\n\n\n      return this.filetypes.unsupported;\n    }\n  }]);\n\n  return FileDetector;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QYXN1dW5hUGxheWVyLy4vc3JjL2ZpbGVmb3JtYXRzL2RldGVjdC5qcz9lODUxIl0sIm5hbWVzIjpbIkZpbGVEZXRlY3RvciIsInRyYWNrZXIiLCJmaWxldHlwZXMiLCJ1bmtub3duIiwiRmlsZVR5cGUiLCJ1bnN1cHBvcnRlZCIsIm1vZF9Qcm9UcmFja2VyIiwiUHJvVHJhY2tlciIsIm1vZF9Tb3VuZFRyYWNrZXIiLCJTb3VuZFRyYWNrZXIiLCJtb2RfRmFzdFRyYWNrZXIiLCJGYXN0VHJhY2tlciIsImZpbGUiLCJuYW1lIiwiZm10cyIsImxlbmd0aCIsImlkIiwicmVhZFN0cmluZyIsImluY2x1ZGVzIiwiaW5kZXhPZiIsImlzU291bmRUcmFja2VyIiwiaXNTVCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFTyxJQUFNQSxZQUFiO0FBQUE7QUFBQTtBQUNDLHdCQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQ3BCLFNBQUtBLE9BQUwsR0FBZUEsT0FBZjtBQUNBLFNBQUtDLFNBQUwsR0FBaUI7QUFDaEJDLGFBQU8sRUFBRSxJQUFJQyxrREFBSixDQUFhLFNBQWIsRUFBd0IsSUFBeEIsRUFBOEIsSUFBOUIsQ0FETztBQUVoQkMsaUJBQVcsRUFBRSxJQUFJRCxrREFBSixDQUFhLGFBQWIsRUFBNEIsSUFBNUIsRUFBa0MsSUFBbEMsQ0FGRztBQUdoQkUsb0JBQWMsRUFBRSxJQUFJRixrREFBSixDQUFhLFlBQWIsRUFBMkIsSUFBM0IsRUFBaUM7QUFBQSxlQUFNLElBQUlHLHNEQUFKLENBQWVOLE9BQWYsQ0FBTjtBQUFBLE9BQWpDLENBSEE7QUFJaEJPLHNCQUFnQixFQUFFLElBQUlKLGtEQUFKLENBQWEsY0FBYixFQUE2QixJQUE3QixFQUFtQztBQUFBLGVBQU0sSUFBSUssMERBQUosQ0FBaUJSLE9BQWpCLENBQU47QUFBQSxPQUFuQyxDQUpGO0FBS2hCUyxxQkFBZSxFQUFFLElBQUlOLGtEQUFKLENBQWEsYUFBYixFQUE0QixJQUE1QixFQUFrQztBQUFBLGVBQU0sSUFBSU8sd0RBQUosQ0FBZ0JWLE9BQWhCLENBQU47QUFBQSxPQUFsQztBQUxELEtBQWpCO0FBT0E7O0FBVkY7QUFBQTtBQUFBLDJCQVlRVyxJQVpSLEVBWWNDLElBWmQsRUFZb0I7QUFDbEIsVUFBTUMsSUFBSSxHQUFHLENBQUMsTUFBRCxFQUFTLE1BQVQsRUFBaUIsTUFBakIsRUFBeUIsTUFBekIsRUFBaUMsTUFBakMsRUFBeUMsTUFBekMsRUFBaUQsTUFBakQsRUFBeUQsTUFBekQsRUFBaUUsTUFBakUsRUFBeUUsTUFBekUsRUFBaUYsTUFBakYsRUFBeUYsTUFBekYsRUFBaUcsTUFBakcsRUFBeUcsTUFBekcsRUFBaUgsTUFBakgsRUFBeUgsTUFBekgsRUFBaUksTUFBakksRUFBeUksTUFBekksRUFBaUosTUFBakosQ0FBYjtBQUNBLFVBQU1DLE1BQU0sR0FBR0gsSUFBSSxDQUFDRyxNQUFwQjtBQUNBLFVBQUlDLEVBQUUsR0FBRyxFQUFUO0FBRUFBLFFBQUUsR0FBR0osSUFBSSxDQUFDSyxVQUFMLENBQWdCLEVBQWhCLEVBQW9CLENBQXBCLENBQUw7O0FBQ0EsVUFBSUQsRUFBRSxJQUFJLG1CQUFWLEVBQStCO0FBQzlCLGVBQU8sS0FBS2QsU0FBTCxDQUFlUSxlQUF0QjtBQUNBOztBQUVELFVBQUlLLE1BQU0sR0FBRyxJQUFiLEVBQW1CO0FBQ2xCQyxVQUFFLEdBQUdKLElBQUksQ0FBQ0ssVUFBTCxDQUFnQixDQUFoQixFQUFtQixJQUFuQixDQUFMLENBRGtCLENBQ2E7QUFDL0I7O0FBRUQsVUFBSUgsSUFBSSxDQUFDSSxRQUFMLENBQWNGLEVBQWQsQ0FBSixFQUF1QjtBQUN0QixlQUFPLEtBQUtkLFNBQUwsQ0FBZUksY0FBdEI7QUFDQSxPQWhCaUIsQ0FrQmxCO0FBQ0E7OztBQUNBLFVBQUlPLElBQUksSUFBSUEsSUFBSSxDQUFDTSxPQUFMLENBQWEsR0FBYixLQUFxQixDQUE3QixJQUFrQ0osTUFBTSxHQUFHLElBQS9DLEVBQXFEO0FBQ3BELFlBQU1LLGNBQWMsR0FBR0Msc0RBQUksQ0FBQ1QsSUFBRCxDQUEzQjs7QUFDQSxZQUFJUSxjQUFKLEVBQW9CO0FBQ25CLGlCQUFPLEtBQUtsQixTQUFMLENBQWVNLGdCQUF0QjtBQUNBO0FBQ0QsT0F6QmlCLENBMkJsQjs7O0FBQ0EsYUFBTyxLQUFLTixTQUFMLENBQWVHLFdBQXRCO0FBQ0E7QUF6Q0Y7O0FBQUE7QUFBQSIsImZpbGUiOiIuL3NyYy9maWxlZm9ybWF0cy9kZXRlY3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTb3VuZFRyYWNrZXIgfSBmcm9tICcuL3NvdW5kdHJhY2tlcic7XHJcbmltcG9ydCB7IFByb1RyYWNrZXIgfSBmcm9tICcuL3Byb3RyYWNrZXInO1xyXG5pbXBvcnQgeyBGYXN0VHJhY2tlciB9IGZyb20gJy4vZmFzdHRyYWNrZXInO1xyXG5pbXBvcnQgeyBpc1NUIH0gZnJvbSAnLi4vbGliL3V0aWwnO1xyXG5pbXBvcnQgeyBGaWxlVHlwZSB9IGZyb20gJy4vRmlsZVR5cGUnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEZpbGVEZXRlY3RvciB7XHJcblx0Y29uc3RydWN0b3IodHJhY2tlcikge1xyXG5cdFx0dGhpcy50cmFja2VyID0gdHJhY2tlcjtcclxuXHRcdHRoaXMuZmlsZXR5cGVzID0ge1xyXG5cdFx0XHR1bmtub3duOiBuZXcgRmlsZVR5cGUoJ1VOS05PV04nLCBudWxsLCBudWxsKSxcclxuXHRcdFx0dW5zdXBwb3J0ZWQ6IG5ldyBGaWxlVHlwZSgnVU5TVVBQT1JURUQnLCBudWxsLCBudWxsKSxcclxuXHRcdFx0bW9kX1Byb1RyYWNrZXI6IG5ldyBGaWxlVHlwZSgnUFJPVFJBQ0tFUicsIHRydWUsICgpID0+IG5ldyBQcm9UcmFja2VyKHRyYWNrZXIpICksXHJcblx0XHRcdG1vZF9Tb3VuZFRyYWNrZXI6IG5ldyBGaWxlVHlwZSgnU09VTkRUUkFDS0VSJywgdHJ1ZSwgKCkgPT4gbmV3IFNvdW5kVHJhY2tlcih0cmFja2VyKSApLFxyXG5cdFx0XHRtb2RfRmFzdFRyYWNrZXI6IG5ldyBGaWxlVHlwZSgnRkFTVFRSQUNLRVInLCB0cnVlLCAoKSA9PiBuZXcgRmFzdFRyYWNrZXIodHJhY2tlcikgKSxcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGRldGVjdChmaWxlLCBuYW1lKSB7XHJcblx0XHRjb25zdCBmbXRzID0gWydNLksuJywgJ00hSyEnLCAnTSZLIScsICdGTFQ0JywgJzJDSE4nLCAnNkNITicsICc4Q0hOJywgJzEwQ0gnLCAnMTJDSCcsICcxNENIJywgJzE2Q0gnLCAnMThDSCcsICcyMENIJywgJzIyQ0gnLCAnMjRDSCcsICcyNkNIJywgJzI4Q0gnLCAnMzBDSCcsICczMkNIJ107XHJcblx0XHRjb25zdCBsZW5ndGggPSBmaWxlLmxlbmd0aDtcclxuXHRcdGxldCBpZCA9ICcnO1xyXG5cclxuXHRcdGlkID0gZmlsZS5yZWFkU3RyaW5nKDE3LCAwKTtcclxuXHRcdGlmIChpZCA9PSAnRXh0ZW5kZWQgTW9kdWxlOiAnKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmZpbGV0eXBlcy5tb2RfRmFzdFRyYWNrZXI7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKGxlbmd0aCA+IDExMDApIHtcclxuXHRcdFx0aWQgPSBmaWxlLnJlYWRTdHJpbmcoNCwgMTA4MCk7IC8vIE0uSy5cclxuXHRcdH1cclxuXHJcblx0XHRpZiAoZm10cy5pbmNsdWRlcyhpZCkpIHtcclxuXHRcdFx0cmV0dXJuIHRoaXMuZmlsZXR5cGVzLm1vZF9Qcm9UcmFja2VyO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIG1pZ2h0IGJlIGFuIDE1IGluc3RydW1lbnQgbW9kP1xyXG5cdFx0Ly8gZmlsZW5hbWUgc2hvdWxkIGF0IGxlYXN0IGNvbnRhaW4gYSAnLicgdGhpcyBhdm9pZHMgY2hlY2tpbmcgYWxsIFNULVhYIHNhbXBsZXNcclxuXHRcdGlmIChuYW1lICYmIG5hbWUuaW5kZXhPZignLicpID49IDAgJiYgbGVuZ3RoID4gMTYyNCkge1xyXG5cdFx0XHRjb25zdCBpc1NvdW5kVHJhY2tlciA9IGlzU1QoZmlsZSk7XHJcblx0XHRcdGlmIChpc1NvdW5kVHJhY2tlcikge1xyXG5cdFx0XHRcdHJldHVybiB0aGlzLmZpbGV0eXBlcy5tb2RfU291bmRUcmFja2VyO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gZmFsbGJhY2sgdG8gc2FtcGxlXHJcblx0XHRyZXR1cm4gdGhpcy5maWxldHlwZXMudW5zdXBwb3J0ZWQ7XHJcblx0fTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/fileformats/detect.js\n");

/***/ }),

/***/ "./src/fileformats/fasttracker.js":
/*!****************************************!*\
  !*** ./src/fileformats/fasttracker.js ***!
  \****************************************/
/*! exports provided: FastTracker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FastTracker\", function() { return FastTracker; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _models_sample__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/sample */ \"./src/models/sample.js\");\n/* harmony import */ var _models_note__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/note */ \"./src/models/note.js\");\n/* harmony import */ var _models_instrument__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/instrument */ \"./src/models/instrument.js\");\n/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../enum */ \"./src/enum.js\");\n/* harmony import */ var _lib_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lib/util */ \"./src/lib/util.js\");\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../events */ \"./src/events.js\");\n\n\n\n\n\n\n\n\nvar FastTracker =\n/*#__PURE__*/\nfunction () {\n  function FastTracker(tracker) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FastTracker);\n\n    this.tracker = tracker;\n  } // see ftp://ftp.modland.com/pub/documents/format_documentation/FastTracker%202%20v2.04%20(.xm).html\n\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(FastTracker, [{\n    key: \"load\",\n    value: function load(file) {\n      this.tracker.setTrackerMode(_enum__WEBPACK_IMPORTED_MODULE_5__[\"TRACKERMODE\"].FASTTRACKER);\n      this.tracker.clearInstruments(1);\n      var mod = {};\n      var song = {\n        patterns: [],\n        instruments: []\n      };\n      file.littleEndian = true;\n      file.goto(17);\n      song.title = file.readString(20);\n      file.jump(1); //$1a\n\n      mod.trackerName = file.readString(20);\n      mod.trackerVersion = file.readByte();\n      mod.trackerVersion = file.readByte() + '.' + mod.trackerVersion;\n      mod.headerSize = file.readDWord(); // is this always 276?\n\n      mod.songlength = file.readWord();\n      mod.restartPosition = file.readWord();\n      mod.numberOfChannels = file.readWord();\n      mod.numberOfPatterns = file.readWord(); // this is sometimes more then the actual number? should we scan for highest pattern? -> YES! -> NO!\n\n      mod.numberOfInstruments = file.readWord();\n      mod.flags = file.readWord();\n\n      if (mod.flags % 2 === 1) {\n        this.tracker.useLinearFrequency = true;\n      } else {\n        this.tracker.useLinearFrequency = false;\n      }\n\n      mod.defaultTempo = file.readWord();\n      mod.defaultBPM = file.readWord();\n      var patternTable = [];\n      var highestPattern = 0;\n\n      for (var i = 0; i < mod.songlength; ++i) {\n        patternTable[i] = file.readUbyte();\n        if (highestPattern < patternTable[i]) highestPattern = patternTable[i];\n      }\n\n      song.patternTable = patternTable;\n      song.length = mod.songlength;\n      song.channels = mod.numberOfChannels;\n      song.restartPosition = mod.restartPosition + 1;\n      var fileStartPos = 60 + mod.headerSize;\n      file.goto(fileStartPos);\n\n      for (var _i = 0; _i < mod.numberOfPatterns; _i++) {\n        var patternData = [];\n        var thisPattern = {};\n        thisPattern.headerSize = file.readDWord();\n        thisPattern.packingType = file.readUbyte(); // always 0\n\n        thisPattern.patternLength = file.readWord();\n        thisPattern.patternSize = file.readWord();\n        fileStartPos += thisPattern.headerSize;\n        file.goto(fileStartPos);\n\n        for (var step = 0; step < thisPattern.patternLength; step++) {\n          var row = [];\n          var channel = void 0;\n\n          for (channel = 0; channel < mod.numberOfChannels; channel++) {\n            var note = new _models_note__WEBPACK_IMPORTED_MODULE_3__[\"Note\"](this.tracker);\n            var v = file.readUbyte();\n\n            if (v & 128) {\n              if (v & 1) note.setIndex(file.readUbyte());\n              if (v & 2) note.instrument = file.readUbyte();\n              if (v & 4) note.volumeEffect = file.readUbyte();\n              if (v & 8) note.effect = file.readUbyte();\n              if (v & 16) note.param = file.readUbyte();\n            } else {\n              note.setIndex(v);\n              note.instrument = file.readUbyte();\n              note.volumeEffect = file.readUbyte();\n              note.effect = file.readUbyte();\n              note.param = file.readUbyte();\n            }\n\n            row.push(note);\n          }\n\n          patternData.push(row);\n        }\n\n        fileStartPos += thisPattern.patternSize;\n        file.goto(fileStartPos);\n        song.patterns.push(patternData);\n      }\n\n      var instrumentContainer = [];\n\n      for (var _i2 = 1; _i2 <= mod.numberOfInstruments; ++_i2) {\n        var instrument = new _models_instrument__WEBPACK_IMPORTED_MODULE_4__[\"Instrument\"](this.tracker);\n\n        try {\n          instrument.filePosition = file.index;\n          instrument.headerSize = file.readDWord();\n          instrument.name = file.readString(22);\n          instrument.type = file.readUbyte();\n          instrument.numberOfSamples = file.readWord();\n          instrument.samples = [];\n          instrument.sampleHeaderSize = 0;\n\n          if (instrument.numberOfSamples > 0) {\n            instrument.sampleHeaderSize = file.readDWord(); // some files report incorrect sampleheadersize (18, without the samplename)\n            // e.g. dubmood - cybernostra weekends.xm\n            // sample header should be at least 40 bytes\n\n            instrument.sampleHeaderSize = Math.max(instrument.sampleHeaderSize, 40); // and not too much ... (Files saved with sk@letracker)\n\n            if (instrument.sampleHeaderSize > 200) instrument.sampleHeaderSize = 40; //should we assume it's always 40? not according to specs ...\n\n            for (var si = 0; si < 96; si++) {\n              instrument.sampleNumberForNotes.push(file.readUbyte());\n            }\n\n            for (var _si = 0; _si < 24; _si++) {\n              instrument.volumeEnvelope.raw.push(file.readWord());\n            }\n\n            for (var _si2 = 0; _si2 < 24; _si2++) {\n              instrument.panningEnvelope.raw.push(file.readWord());\n            }\n\n            instrument.volumeEnvelope.count = file.readUbyte();\n            instrument.panningEnvelope.count = file.readUbyte();\n            instrument.volumeEnvelope.sustainPoint = file.readUbyte();\n            instrument.volumeEnvelope.loopStartPoint = file.readUbyte();\n            instrument.volumeEnvelope.loopEndPoint = file.readUbyte();\n            instrument.panningEnvelope.sustainPoint = file.readUbyte();\n            instrument.panningEnvelope.loopStartPoint = file.readUbyte();\n            instrument.panningEnvelope.loopEndPoint = file.readUbyte();\n            instrument.volumeEnvelope.type = file.readUbyte();\n            instrument.panningEnvelope.type = file.readUbyte();\n            instrument.vibrato.type = file.readUbyte();\n            instrument.vibrato.sweep = file.readUbyte();\n            instrument.vibrato.depth = Math.min(file.readUbyte(), 15); // some trackers have a different scale here? (e.g. Ambrozia)\n\n            instrument.vibrato.rate = file.readUbyte();\n            instrument.fadeout = file.readWord();\n            instrument.reserved = file.readWord();\n            instrument.volumeEnvelope = Object(_lib_util__WEBPACK_IMPORTED_MODULE_6__[\"processEnvelope\"])(instrument.volumeEnvelope);\n            instrument.panningEnvelope = Object(_lib_util__WEBPACK_IMPORTED_MODULE_6__[\"processEnvelope\"])(instrument.panningEnvelope);\n          }\n        } catch (e) {\n          console.error('Pasuuna trakcer error', e);\n        }\n\n        fileStartPos += instrument.headerSize;\n        file.goto(fileStartPos);\n\n        if (instrument.numberOfSamples === 0) {\n          var sample = new _models_sample__WEBPACK_IMPORTED_MODULE_2__[\"Sample\"]();\n          instrument.samples.push(sample);\n        } else {\n          if (file.isEOF(1)) {\n            console.error('Pasuuna seek past EOF', instrument);\n            break;\n          }\n\n          for (var sampleI = 0; sampleI < instrument.numberOfSamples; sampleI++) {\n            var _sample = new _models_sample__WEBPACK_IMPORTED_MODULE_2__[\"Sample\"]();\n\n            _sample.length = file.readDWord();\n            _sample.loop.start = file.readDWord();\n            _sample.loop.length = file.readDWord();\n            _sample.volume = file.readUbyte();\n            _sample.finetuneX = file.readByte();\n            _sample.type = file.readUbyte();\n            _sample.panning = file.readUbyte() - 128;\n            _sample.relativeNote = file.readByte();\n            _sample.reserved = file.readByte();\n            _sample.name = file.readString(22);\n            _sample.bits = 8;\n            instrument.samples.push(_sample);\n            fileStartPos += instrument.sampleHeaderSize;\n            file.goto(fileStartPos);\n          }\n\n          for (var _sampleI = 0; _sampleI < instrument.numberOfSamples; _sampleI++) {\n            var _sample2 = instrument.samples[_sampleI];\n            if (!_sample2.length) continue;\n            fileStartPos += _sample2.length;\n\n            if (_sample2.type & 16) {\n              _sample2.bits = 16;\n              _sample2.type ^= 16;\n              _sample2.length >>= 1;\n              _sample2.loop.start >>= 1;\n              _sample2.loop.length >>= 1;\n            }\n\n            _sample2.loop.type = _sample2.type || 0;\n            _sample2.loop.enabled = !!_sample2.loop.type; // sample data\n            // console.log('Reading sample from 0x' + file.index + ' with length of ' + sample.length + (sample.bits === 16 ? ' words' : ' bytes') + ' and repeat length of ' + sample.loop.length);\n\n            var sampleEnd = _sample2.length;\n            var old = 0;\n\n            if (_sample2.bits === 16) {\n              for (var j = 0; j < sampleEnd; j++) {\n                var b = file.readShort() + old;\n                if (b < -32768) b += 65536;else if (b > 32767) b -= 65536;\n                old = b;\n\n                _sample2.data.push(b / 32768);\n              }\n            } else {\n              for (var _j = 0; _j < sampleEnd; _j++) {\n                var _b = file.readByte() + old;\n\n                if (_b < -128) {\n                  _b += 256;\n                } else if (_b > 127) {\n                  _b -= 256;\n                }\n\n                old = _b;\n\n                _sample2.data.push(_b / 127); // TODO: or /128 ? seems to introduce artifacts - see test-loop-fadeout.xm\n\n              }\n            } // unroll ping pong loops\n\n\n            if (_sample2.loop.type === _enum__WEBPACK_IMPORTED_MODULE_5__[\"LOOPTYPE\"].PINGPONG) {\n              // TODO: keep original sample?\n              var loopPart = _sample2.data.slice(_sample2.loop.start, _sample2.loop.start + _sample2.loop.length);\n\n              _sample2.data = _sample2.data.slice(0, _sample2.loop.start + _sample2.loop.length);\n              _sample2.data = _sample2.data.concat(loopPart.reverse());\n              _sample2.loop.length = _sample2.loop.length * 2;\n              _sample2.length = _sample2.loop.start + _sample2.loop.length;\n            }\n\n            file.goto(fileStartPos);\n          }\n        }\n\n        instrument.setSampleIndex(0);\n        this.tracker.setInstrument(_i2, instrument);\n        instrumentContainer.push({\n          label: _i2 + ' ' + instrument.name,\n          data: _i2\n        });\n      }\n\n      _events__WEBPACK_IMPORTED_MODULE_7__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_5__[\"EVENT\"].instrumentListChange, instrumentContainer);\n      song.instruments = this.tracker.getInstruments();\n      this.tracker.setBPM(mod.defaultBPM);\n      this.tracker.setAmigaSpeed(mod.defaultTempo);\n      this.validate(song);\n      return song;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(song) {\n      song.instruments.forEach(function (instrument) {\n        // check envelope\n        instrument.volumeEnvelope = Object(_lib_util__WEBPACK_IMPORTED_MODULE_6__[\"checkEnvelope\"])(instrument.volumeEnvelope, 'volume');\n        instrument.panningEnvelope = Object(_lib_util__WEBPACK_IMPORTED_MODULE_6__[\"checkEnvelope\"])(instrument.panningEnvelope, 'panning'); // check sampleIndexes;\n\n        var maxSampleIndex = instrument.samples.length - 1;\n\n        for (var i = 0, max = instrument.sampleNumberForNotes.length; i < max; i++) {\n          instrument.sampleNumberForNotes[i] = Math.min(instrument.sampleNumberForNotes[i], maxSampleIndex);\n        }\n      });\n    }\n  }]);\n\n  return FastTracker;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/fileformats/fasttracker.js\n");

/***/ }),

/***/ "./src/fileformats/protracker.js":
/*!***************************************!*\
  !*** ./src/fileformats/protracker.js ***!
  \***************************************/
/*! exports provided: ProTracker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProTracker\", function() { return ProTracker; });\n/* harmony import */ var _babel_runtime_helpers_readOnlyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/readOnlyError */ \"./node_modules/@babel/runtime/helpers/readOnlyError.js\");\n/* harmony import */ var _babel_runtime_helpers_readOnlyError__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_readOnlyError__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _models_note__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/note */ \"./src/models/note.js\");\n/* harmony import */ var _models_instrument__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/instrument */ \"./src/models/instrument.js\");\n/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../enum */ \"./src/enum.js\");\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../events */ \"./src/events.js\");\n\n\n\n\n\n\n\nvar ProTracker =\n/*#__PURE__*/\nfunction () {\n  function ProTracker(tracker) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, ProTracker);\n\n    this.tracker = tracker;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(ProTracker, [{\n    key: \"load\",\n    value: function load(file) {\n      this.tracker.setTrackerMode(_enum__WEBPACK_IMPORTED_MODULE_5__[\"TRACKERMODE\"].PROTRACKER);\n      this.tracker.useLinearFrequency = false;\n      this.tracker.clearInstruments(31);\n      var patternLength = 64;\n      var instrumentCount = 31;\n      var channelCount = 4;\n      var song = {\n        typeId: null,\n        title: '',\n        channels: 0,\n        length: 0,\n        patterns: [],\n        restartPosition: 1\n      };\n      song.typeId = file.readString(4, 1080);\n      song.title = file.readString(20, 0);\n\n      if (song.typeId === '2CHN') {\n        channelCount = 2;\n      }\n\n      if (song.typeId === '6CHN') {\n        channelCount = 6;\n      }\n\n      if (song.typeId === '8CHN') {\n        channelCount = 8;\n      }\n\n      if (song.typeId === '10CH') {\n        channelCount = 10;\n      }\n\n      if (song.typeId === '12CH') {\n        channelCount = 12;\n      }\n\n      if (song.typeId === '14CH') {\n        channelCount = 14;\n      }\n\n      if (song.typeId === '16CH') {\n        channelCount = 16;\n      }\n\n      if (song.typeId === '18CH') {\n        channelCount = 18;\n      }\n\n      if (song.typeId === '20CH') {\n        channelCount = 20;\n      }\n\n      if (song.typeId === '22CH') {\n        channelCount = 22;\n      }\n\n      if (song.typeId === '24CH') {\n        channelCount = 24;\n      }\n\n      if (song.typeId === '26CH') {\n        channelCount = 26;\n      }\n\n      if (song.typeId === '28CH') {\n        channelCount = 28;\n      }\n\n      if (song.typeId === '30CH') {\n        channelCount = 30;\n      }\n\n      if (song.typeId === '32CH') {\n        channelCount = 32;\n      }\n\n      song.channels = channelCount;\n      var sampleDataOffset = 0;\n\n      for (var i = 1; i <= instrumentCount; ++i) {\n        var instrumentName = file.readString(22);\n        var sampleLength = file.readWord(); // in words\n\n        var instrument = new _models_instrument__WEBPACK_IMPORTED_MODULE_4__[\"Instrument\"](this.tracker);\n        instrument.name = instrumentName;\n        instrument.sample.length = instrument.sample.realLen = sampleLength << 1;\n        var finetune = file.readUbyte();\n\n        if (finetune > 7) {\n          finetune -= 16;\n        }\n\n        instrument.setFineTune(finetune);\n        instrument.sample.volume = file.readUbyte();\n        instrument.sample.loop.start = file.readWord() << 1;\n        instrument.sample.loop.length = file.readWord() << 1;\n        instrument.sample.loop.enabled = instrument.sample.loop.length > 2;\n        instrument.sample.loop.type = _enum__WEBPACK_IMPORTED_MODULE_5__[\"LOOPTYPE\"].FORWARD;\n        instrument.pointer = sampleDataOffset;\n        sampleDataOffset += instrument.sample.length;\n        instrument.setSampleIndex(0);\n        this.tracker.setInstrument(i, instrument);\n      }\n\n      song.instruments = this.tracker.getInstruments();\n      file.goto(950);\n      song.length = file.readUbyte();\n      file.jump(1); // 127 byte\n\n      var patternTable = [];\n      var highestPattern = 0;\n\n      for (var _i = 0; _i < 128; ++_i) {\n        patternTable[_i] = file.readUbyte();\n        if (patternTable[_i] > highestPattern) highestPattern = patternTable[_i];\n      }\n\n      song.patternTable = patternTable;\n      file.goto(1084); // pattern data\n\n      for (var _i2 = 0; _i2 <= highestPattern; ++_i2) {\n        var patternData = [];\n\n        for (var step = 0; step < patternLength; step++) {\n          var row = [];\n\n          for (var channel = 0; channel < channelCount; channel++) {\n            var note = new _models_note__WEBPACK_IMPORTED_MODULE_3__[\"Note\"](this.tracker);\n            var trackStepInfo = file.readUint();\n            note.setPeriod(trackStepInfo >> 16 & 0x0fff);\n            note.effect = trackStepInfo >> 8 & 0x0f;\n            note.instrument = trackStepInfo >> 24 & 0xf0 | trackStepInfo >> 12 & 0x0f;\n            note.param = trackStepInfo & 0xff;\n            row.push(note);\n          }\n\n          patternData.push(row);\n        }\n\n        song.patterns.push(patternData);\n      }\n\n      var instrumentContainer = [];\n\n      for (var _i3 = 1; _i3 <= instrumentCount; _i3++) {\n        var _instrument = this.tracker.getInstrument(_i3);\n\n        if (_instrument) {\n          // console.log('Reading sample from 0x' + file.index + ' with length of ' + instrument.sample.length + ' bytes and repeat length of ' + instrument.sample.loop.length);\n          var sampleEnd = _instrument.sample.length;\n\n          if (_instrument.sample.loop.length > 2 && _enum__WEBPACK_IMPORTED_MODULE_5__[\"SETTINGS\"].unrollShortLoops && _instrument.sample.loop.length < 1000) {\n            // cut off trailing bytes for short looping samples\n            sampleEnd = (_babel_runtime_helpers_readOnlyError__WEBPACK_IMPORTED_MODULE_0___default()(\"sampleEnd\"), Math.min(sampleEnd, _instrument.sample.loop.start + _instrument.sample.loop.length));\n            _instrument.sample.length = sampleEnd;\n          }\n\n          for (var j = 0; j < sampleEnd; j++) {\n            var b = file.readByte(); // ignore first 2 bytes\n\n            if (j < 2) {\n              b = 0;\n            }\n\n            _instrument.sample.data.push(b / 127);\n          }\n\n          if ((_enum__WEBPACK_IMPORTED_MODULE_5__[\"SETTINGS\"].unrollShortLoops || _enum__WEBPACK_IMPORTED_MODULE_5__[\"SETTINGS\"].unrollLoops) && _instrument.sample.loop.length > 2) {\n            var loopCount = Math.ceil(40000 / _instrument.sample.loop.length) + 1;\n            if (!_enum__WEBPACK_IMPORTED_MODULE_5__[\"SETTINGS\"].unrollLoops) loopCount = 0;\n            var resetLoopNumbers = false;\n            var loopLength = 0;\n\n            if (_enum__WEBPACK_IMPORTED_MODULE_5__[\"SETTINGS\"].unrollShortLoops && _instrument.sample.loop.length < 1600) {\n              loopCount = Math.floor(1000 / _instrument.sample.loop.length);\n              resetLoopNumbers = true;\n            }\n\n            for (var l = 0; l < loopCount; l++) {\n              var start = _instrument.sample.loop.start;\n              var end = start + _instrument.sample.loop.length;\n\n              for (var _j = start; _j < end; _j++) {\n                _instrument.sample.data.push(_instrument.sample.data[_j]);\n              }\n\n              loopLength += _instrument.sample.loop.length;\n            }\n\n            if (resetLoopNumbers && loopLength) {\n              _instrument.sample.loop.length += loopLength;\n              _instrument.sample.length += loopLength;\n            }\n          }\n\n          instrumentContainer.push({\n            label: _i3 + ' ' + _instrument.name,\n            data: _i3\n          });\n        }\n      }\n\n      _events__WEBPACK_IMPORTED_MODULE_6__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_5__[\"EVENT\"].instrumentListChange, instrumentContainer);\n      return song;\n    }\n  }]);\n\n  return ProTracker;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/fileformats/protracker.js\n");

/***/ }),

/***/ "./src/fileformats/soundtracker.js":
/*!*****************************************!*\
  !*** ./src/fileformats/soundtracker.js ***!
  \*****************************************/
/*! exports provided: SoundTracker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SoundTracker\", function() { return SoundTracker; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _models_instrument__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/instrument */ \"./src/models/instrument.js\");\n/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../enum */ \"./src/enum.js\");\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../events */ \"./src/events.js\");\n\n\n\n\n\nvar SoundTracker =\n/*#__PURE__*/\nfunction () {\n  function SoundTracker(tracker) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, SoundTracker);\n\n    this.tracker = tracker;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(SoundTracker, [{\n    key: \"load\",\n    value: function load(file) {\n      this.tracker.setTrackerMode(_enum__WEBPACK_IMPORTED_MODULE_3__[\"TRACKERMODE\"].PROTRACKER);\n      this.tracker.useLinearFrequency = false;\n      this.tracker.clearInstruments(15);\n      var patternLength = 64;\n      var instrumentCount = 15;\n      var song = {\n        patterns: [],\n        restartPosition: 1\n      };\n      song.typeId = \"ST\";\n      song.channels = 4;\n      song.title = file.readString(20, 0);\n      var sampleDataOffset = 0;\n\n      for (var i = 1; i <= instrumentCount; ++i) {\n        var sampleName = file.readString(22);\n        var sampleLength = file.readWord(); // in words\n\n        var instrument = new _models_instrument__WEBPACK_IMPORTED_MODULE_2__[\"Instrument\"](this.tracker);\n        instrument.name = sampleName;\n        instrument.sample.length = instrument.realLen = sampleLength << 1;\n        instrument.sample.volume = file.readWord();\n        instrument.setFineTune(0);\n        instrument.sample.loop.start = file.readWord(); // in bytes!\n\n        instrument.sample.loop.length = file.readWord() << 1;\n        instrument.sample.loop.enabled = instrument.sample.loop.length > 2;\n        instrument.sample.loop.type = _enum__WEBPACK_IMPORTED_MODULE_3__[\"LOOPTYPE\"].FORWARD;\n        instrument.pointer = sampleDataOffset;\n        sampleDataOffset += instrument.sample.length;\n        instrument.setSampleIndex(0);\n        this.tracker.setInstrument(i, instrument);\n      }\n\n      song.instruments = this.tracker.getInstruments();\n      file.goto(470);\n      song.length = file.readUbyte();\n      song.speed = file.readUbyte();\n      var patternTable = [];\n      var highestPattern = 0;\n\n      for (var _i = 0; _i < 128; ++_i) {\n        patternTable[_i] = file.readUbyte();\n        if (patternTable[_i] > highestPattern) highestPattern = patternTable[_i];\n      }\n\n      song.patternTable = patternTable;\n      file.goto(600); // pattern data\n\n      for (var _i2 = 0; _i2 <= highestPattern; ++_i2) {\n        var patternData = [];\n\n        for (var step = 0; step < patternLength; step++) {\n          var row = [];\n\n          for (var channel = 0; channel < 4; channel++) {\n            var trackStepInfo = file.readUint();\n            var trackStep = {\n              period: trackStepInfo >> 16 & 0x0fff,\n              effect: trackStepInfo >> 8 & 0x0f,\n              instrument: trackStepInfo >> 24 & 0xf0 | trackStepInfo >> 12 & 0x0f,\n              param: trackStepInfo & 0xff\n            };\n            row.push(trackStep);\n          } // fill with empty data for other channels\n\n\n          for (var _channel = 4; _channel < this.tracker.getTrackCount(); _channel++) {\n            row.push({\n              note: 0,\n              effect: 0,\n              instrument: 0,\n              param: 0\n            });\n          }\n\n          patternData.push(row);\n        }\n\n        song.patterns.push(patternData);\n      }\n\n      var instrumentContainer = [];\n\n      for (var _i3 = 1; _i3 <= instrumentCount; _i3++) {\n        var _instrument = this.tracker.getInstrument(_i3);\n\n        if (_instrument) {\n          // console.log(\"Reading sample from 0x\" + file.index + \" with length of \" + instrument.sample.length + \" bytes and repeat length of \" + instrument.sample.loop.length);\n          var sampleEnd = _instrument.sample.length;\n\n          for (var j = 0; j < sampleEnd; j++) {\n            var b = file.readByte(); // ignore first 2 bytes\n\n            if (j < 2) b = 0;\n\n            _instrument.sample.data.push(b / 127);\n          }\n\n          instrumentContainer.push({\n            label: _i3 + \" \" + _instrument.name,\n            data: _i3\n          });\n        }\n      }\n\n      _events__WEBPACK_IMPORTED_MODULE_4__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_3__[\"EVENT\"].instrumentListChange, instrumentContainer);\n      return song;\n    }\n  }]);\n\n  return SoundTracker;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/fileformats/soundtracker.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: EVENT, PLAYTYPE, FILETYPE, MODULETYPE, Tracker, Audio */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tracker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracker */ \"./src/tracker.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Tracker\", function() { return _tracker__WEBPACK_IMPORTED_MODULE_0__[\"Tracker\"]; });\n\n/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enum */ \"./src/enum.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EVENT\", function() { return _enum__WEBPACK_IMPORTED_MODULE_1__[\"EVENT\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PLAYTYPE\", function() { return _enum__WEBPACK_IMPORTED_MODULE_1__[\"PLAYTYPE\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FILETYPE\", function() { return _enum__WEBPACK_IMPORTED_MODULE_1__[\"FILETYPE\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MODULETYPE\", function() { return _enum__WEBPACK_IMPORTED_MODULE_1__[\"MODULETYPE\"]; });\n\n/* harmony import */ var _audio__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./audio */ \"./src/audio.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Audio\", function() { return _audio__WEBPACK_IMPORTED_MODULE_2__[\"Audio\"]; });\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QYXN1dW5hUGxheWVyLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBIiwiZmlsZSI6Ii4vc3JjL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi90cmFja2VyJztcclxuZXhwb3J0IHtFVkVOVCwgUExBWVRZUEUsIEZJTEVUWVBFLCBNT0RVTEVUWVBFfSBmcm9tICcuL2VudW0nO1xyXG5leHBvcnQgKiBmcm9tICcuL2F1ZGlvJztcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/lib/util.js":
/*!*************************!*\
  !*** ./src/lib/util.js ***!
  \*************************/
/*! exports provided: processEnvelope, checkEnvelope, isAcii, isST, loadFile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"processEnvelope\", function() { return processEnvelope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkEnvelope\", function() { return checkEnvelope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAcii\", function() { return isAcii; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isST\", function() { return isST; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadFile\", function() { return loadFile; });\nfunction processEnvelope(envelope) {\n  envelope.points = [];\n\n  for (var si = 0; si < 12; si++) {\n    envelope.points.push(envelope.raw.slice(si * 2, si * 2 + 2));\n  }\n\n  if (envelope.type & 1) {\n    // on\n    envelope.enabled = true;\n  }\n\n  if (envelope.type & 2) {\n    // sustain\n    envelope.sustain = true;\n  }\n\n  if (envelope.type & 4) {\n    // loop\n    envelope.loop = true;\n  }\n\n  return envelope;\n}\nfunction checkEnvelope(envelope, type) {\n  var isValid = true;\n\n  if (envelope.points && envelope.points[0]) {\n    if (envelope.points[0][0] === 0) {\n      var c = 0;\n\n      for (var i = 1; i < envelope.count; i++) {\n        var point = envelope.points[i];\n\n        if (point && point[0] > c) {\n          c = point[0];\n        } else {\n          isValid = false;\n        }\n      }\n    } else {\n      isValid = false;\n    }\n  } else {\n    isValid = false;\n  }\n\n  if (isValid) {\n    return envelope;\n  } else {\n    console.warn('Invalid envelope, resetting to default');\n    return type === 'volume' ? {\n      raw: [],\n      enabled: false,\n      points: [[0, 48], [10, 64], [20, 40], [30, 18], [40, 28], [50, 18]],\n      count: 6\n    } : {\n      raw: [],\n      enabled: false,\n      points: [[0, 32], [20, 40], [40, 24], [60, 32], [80, 32]],\n      count: 5\n    };\n  }\n}\nfunction isAcii(byte) {\n  return byte < 128;\n}\nfunction isST(file) {\n  // console.log('Checking for old 15 instrument soundtracker format');\n  file.goto(0);\n\n  for (var i = 0; i < 20; i++) {\n    if (!isAcii(file.readByte())) {\n      return false;\n    }\n  } // check samples\n  // console.log('First 20 chars are ascii, checking Samples');\n\n\n  var totalSampleLength = 0;\n  var probability = 0;\n\n  for (var s = 0; s < 15; s++) {\n    for (var _i = 0; _i < 22; _i++) {\n      if (!isAcii(file.readByte())) {\n        return false;\n      }\n    }\n\n    file.jump(-22);\n    var name = file.readString(22);\n\n    if (name.toLowerCase().substr(0, 3) == 'st-') {\n      probability += 10;\n    }\n\n    if (probability > 20) {\n      return true;\n    }\n\n    totalSampleLength += file.readWord();\n    file.jump(6);\n  }\n\n  if (totalSampleLength * 2 + 1624 > length) {\n    return false;\n  }\n\n  return true;\n}\nfunction loadFile(url, next) {\n  var req = new XMLHttpRequest();\n  req.open('GET', url, true);\n  req.responseType = 'arraybuffer';\n\n  req.onload = function () {\n    var arrayBuffer = req.response;\n\n    if (arrayBuffer) {\n      if (next) next(arrayBuffer);\n    } else {\n      console.error('Pasuuna: unable to load', url);\n\n      if (next) {\n        next(false);\n      }\n    }\n  };\n\n  req.send(null);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/util.js\n");

/***/ }),

/***/ "./src/models/instrument.js":
/*!**********************************!*\
  !*** ./src/models/instrument.js ***!
  \**********************************/
/*! exports provided: Instrument */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Instrument\", function() { return Instrument; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _sample__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sample */ \"./src/models/sample.js\");\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../events */ \"./src/events.js\");\n/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../enum */ \"./src/enum.js\");\n\n\n\n\n\nvar Instrument =\n/*#__PURE__*/\nfunction () {\n  function Instrument(tracker) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Instrument);\n\n    this.tracker = tracker;\n    this.type = 'sample';\n    this.name = '';\n    this.instrumentIndex = 0;\n    this.sampleIndex = -1;\n    this.fadeout = 128;\n    this.data = [];\n    this.samples = [new _sample__WEBPACK_IMPORTED_MODULE_2__[\"Sample\"]()];\n    this.sample = this.samples[0];\n    this.volumeEnvelope = {\n      raw: [],\n      enabled: false,\n      points: [[0, 48], [10, 64], [20, 40], [30, 18], [40, 28], [50, 18]],\n      count: 6\n    };\n    this.panningEnvelope = {\n      raw: [],\n      enabled: false,\n      points: [[0, 32], [20, 40], [40, 24], [60, 32], [80, 32]],\n      count: 5\n    };\n    this.vibrato = {};\n    this.sampleNumberForNotes = [];\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Instrument, [{\n    key: \"processEnvelop\",\n    value: function processEnvelop(envelope, audioNode, time) {\n      var tickTime = this.tracker.getProperties().tickTime;\n      var maxPoint = envelope.sustain ? envelope.sustainPoint + 1 : envelope.count;\n      var scheduledTime = 0;\n      var lastX = 0;\n      var audioParam;\n      var center;\n      var max; // some XM files seem to have loop points outside the range.\n      // e.g. springmellow_p_ii.xm - instrument 15;\n\n      envelope.loopStartPoint = Math.min(envelope.loopStartPoint, envelope.count - 1);\n      envelope.loopEndPoint = Math.min(envelope.loopEndPoint, envelope.count - 1);\n      var doLoop = envelope.loop && envelope.loopStartPoint < envelope.loopEndPoint;\n\n      if (envelope.sustain && envelope.sustainPoint <= envelope.loopStartPoint) {\n        doLoop = false;\n      }\n\n      if (doLoop) {\n        maxPoint = envelope.loopEndPoint + 1;\n      }\n\n      if (audioNode.gain) {\n        // volume\n        audioParam = audioNode.gain;\n        center = 0;\n        max = 64;\n      } else {\n        // panning node\n        audioParam = audioNode.pan;\n        center = 32;\n        max = 32;\n      }\n\n      audioParam.setValueAtTime((envelope.points[0][1] - center) / max, time);\n\n      for (var p = 1; p < maxPoint; p++) {\n        var point = envelope.points[p];\n        lastX = point[0];\n        scheduledTime = lastX * tickTime;\n        audioParam.linearRampToValueAtTime((point[1] - center) / max, time + scheduledTime);\n      }\n\n      if (doLoop) {\n        return this.scheduleEnvelopeLoop(audioNode, time, 2, scheduledTime);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"play\",\n    value: function play(noteIndex, notePeriod, volume, track, trackEffects, time) {\n      if (this.tracker.inFTMode()) {\n        notePeriod = this.getPeriodForNote(noteIndex);\n      }\n\n      return this.tracker.audio.playSample(this.instrumentIndex, notePeriod, volume, track, trackEffects, time, noteIndex);\n    }\n  }, {\n    key: \"noteOn\",\n    value: function noteOn(time) {\n      var volumeEnvelope;\n      var panningEnvelope;\n      var envelope;\n      var scheduledTime;\n      var scheduled = {};\n\n      if (this.volumeEnvelope.enabled) {\n        volumeEnvelope = this.tracker.audio.context.createGain();\n        envelope = this.volumeEnvelope;\n        scheduledTime = this.processEnvelop(envelope, volumeEnvelope, time);\n\n        if (scheduledTime) {\n          scheduled.volume = time + scheduledTime;\n        }\n      }\n\n      if (this.panningEnvelope.enabled && this.tracker.audio.usePanning) {\n        panningEnvelope = this.tracker.audio.context.createStereoPanner();\n        envelope = this.panningEnvelope;\n        scheduledTime = this.processEnvelop(envelope, panningEnvelope, time);\n\n        if (scheduledTime) {\n          scheduled.panning = time + scheduledTime;\n        }\n      }\n\n      if (this.vibrato.rate && this.vibrato.depth) {\n        scheduled.ticks = 0;\n        scheduled.vibrato = time;\n        scheduled.vibratoFunction = this.getAutoVibratoFunction();\n      }\n\n      return {\n        volume: volumeEnvelope,\n        panning: panningEnvelope,\n        scheduled: scheduled\n      };\n    }\n  }, {\n    key: \"noteOff\",\n    value: function noteOff(time, noteInfo) {\n      if (!noteInfo || !noteInfo.volume) return;\n\n      function cancelScheduledValues() {\n        // Note: we should cancel Volume and Panning scheduling independently ...\n        noteInfo.volume.gain.cancelScheduledValues(time);\n        noteInfo.volumeFadeOut.gain.cancelScheduledValues(time);\n\n        if (noteInfo.volumeEnvelope) {\n          noteInfo.volumeEnvelope.gain.cancelScheduledValues(time);\n        }\n\n        if (noteInfo.panningEnvelope) {\n          noteInfo.panningEnvelope.pan.cancelScheduledValues(time);\n        }\n\n        noteInfo.scheduled = undefined;\n      }\n\n      if (this.tracker.inFTMode()) {\n        var tickTime = this.tracker.getProperties().tickTime;\n\n        if (this.volumeEnvelope.enabled) {\n          if (this.volumeEnvelope.sustain && noteInfo.volumeEnvelope) {\n            cancelScheduledValues();\n            var timeOffset = 0;\n            var startPoint = this.volumeEnvelope.points[this.volumeEnvelope.sustainPoint];\n\n            if (startPoint) {\n              timeOffset = startPoint[0] * tickTime;\n            }\n\n            for (var p = this.volumeEnvelope.sustainPoint; p < this.volumeEnvelope.count; p++) {\n              var point = this.volumeEnvelope.points[p];\n\n              if (point) {\n                noteInfo.volumeEnvelope.gain.linearRampToValueAtTime(point[1] / 64, time + point[0] * tickTime - timeOffset);\n              }\n            }\n          }\n\n          if (this.fadeout) {\n            var fadeOutTime = 65536 / this.fadeout * tickTime / 2;\n            noteInfo.volumeFadeOut.gain.linearRampToValueAtTime(0, time + fadeOutTime);\n          }\n        } else {\n          cancelScheduledValues();\n          noteInfo.volumeFadeOut.gain.linearRampToValueAtTime(0, time + 0.1);\n        }\n\n        if (this.panningEnvelope.enabled && this.tracker.audio.usePanning) {\n          var _timeOffset = 0;\n          var _startPoint = this.panningEnvelope.points[this.panningEnvelope.sustainPoint];\n\n          if (_startPoint) {\n            _timeOffset = _startPoint[0] * tickTime;\n          }\n\n          for (var _p = this.panningEnvelope.sustainPoint; _p < this.panningEnvelope.count; _p++) {\n            var _point = this.panningEnvelope.points[_p];\n\n            if (_point) {\n              noteInfo.panningEnvelope.pan.linearRampToValueAtTime((_point[1] - 32) / 32, time + _point[0] * tickTime - _timeOffset);\n            }\n          }\n        }\n\n        return 100;\n      } else {\n        cancelScheduledValues();\n\n        if (noteInfo.isKey && noteInfo.volume) {\n          noteInfo.volume.gain.linearRampToValueAtTime(0, time + 0.5);\n        } else {\n          return 0;\n        }\n      }\n    }\n  }, {\n    key: \"scheduleEnvelopeLoop\",\n    value: function scheduleEnvelopeLoop(audioNode, startTime, seconds, scheduledTime) {\n      // note - this is not 100% accurate when the ticktime would change during the scheduled ahead time\n      scheduledTime = scheduledTime || 0;\n      var tickTime = this.tracker.getProperties().tickTime;\n      var envelope;\n      var audioParam;\n      var center;\n      var max;\n\n      if (audioNode.gain) {\n        // volume\n        envelope = this.volumeEnvelope;\n        audioParam = audioNode.gain;\n        center = 0;\n        max = 64;\n      } else {\n        // panning node\n        envelope = this.panningEnvelope;\n        audioParam = audioNode.pan;\n        center = 32;\n        max = 32;\n      }\n\n      var point = envelope.points[envelope.loopStartPoint];\n      var loopStartX = point[0];\n      var doLoop = envelope.loop && envelope.loopStartPoint < envelope.loopEndPoint;\n\n      if (doLoop) {\n        while (scheduledTime < seconds) {\n          var startScheduledTime = scheduledTime;\n\n          for (var p = envelope.loopStartPoint; p <= envelope.loopEndPoint; p++) {\n            point = envelope.points[p];\n            scheduledTime = startScheduledTime + (point[0] - loopStartX) * tickTime;\n            audioParam.linearRampToValueAtTime((point[1] - center) / max, startTime + scheduledTime);\n          }\n        }\n      }\n\n      return scheduledTime;\n    }\n  }, {\n    key: \"scheduleAutoVibrato\",\n    value: function scheduleAutoVibrato(note, seconds) {\n      // this is only used for keyboard notes as in the player the main playback timer is used for this\n      var tickTime = this.tracker.getProperties().tickTime;\n      var scheduledTime = 0;\n      note.scheduled.ticks = note.scheduled.ticks || 0;\n      var freq = -this.vibrato.rate / 40;\n      var amp = this.tracker.useLinearFrequency ? this.vibrato.depth / 2 : this.vibrato.depth / 8;\n      var currentPeriod;\n      var vibratoFunction;\n      var time;\n      var tick;\n\n      if (note.source) {\n        currentPeriod = note.startPeriod;\n        vibratoFunction = note.scheduled.vibratoFunction || this.tracker.audio.waveFormFunction.sine;\n        time = note.scheduled.vibrato || this.tracker.audio.context.currentTime;\n        tick = 0;\n      }\n\n      while (scheduledTime < seconds) {\n        scheduledTime += tickTime;\n\n        if (currentPeriod) {\n          var sweepAmp = 1;\n\n          if (this.vibrato.sweep && note.scheduled.ticks < this.vibrato.sweep) {\n            sweepAmp = 1 - (this.vibrato.sweep - note.scheduled.ticks) / this.vibrato.sweep;\n          }\n\n          var targetPeriod = vibratoFunction(currentPeriod, note.scheduled.ticks, freq, amp * sweepAmp);\n          this.tracker.setPeriodAtTime(note, targetPeriod, time + tick * tickTime);\n          tick++;\n        }\n\n        note.scheduled.ticks++;\n      }\n\n      return scheduledTime;\n    }\n  }, {\n    key: \"getAutoVibratoFunction\",\n    value: function getAutoVibratoFunction() {\n      switch (this.vibrato.type) {\n        case 1:\n          return this.tracker.audio.waveFormFunction.square;\n\n        case 2:\n          return this.tracker.audio.waveFormFunction.saw;\n\n        case 3:\n          return this.tracker.audio.waveFormFunction.sawInverse;\n      }\n\n      return this.tracker.audio.waveFormFunction.sine;\n    }\n  }, {\n    key: \"resetVolume\",\n    value: function resetVolume(time, noteInfo) {\n      if (noteInfo.volumeFadeOut) {\n        noteInfo.volumeFadeOut.gain.cancelScheduledValues(time);\n        noteInfo.volumeFadeOut.gain.setValueAtTime(1, time);\n      }\n\n      if (noteInfo.volumeEnvelope) {\n        noteInfo.volumeEnvelope.gain.cancelScheduledValues(time);\n        var tickTime = this.tracker.getProperties().tickTime;\n        var maxPoint = this.volumeEnvelope.sustain ? this.volumeEnvelope.sustainPoint + 1 : this.volumeEnvelope.count;\n        noteInfo.volumeEnvelope.gain.setValueAtTime(this.volumeEnvelope.points[0][1] / 64, time);\n\n        for (var p = 1; p < maxPoint; p++) {\n          var point = this.volumeEnvelope.points[p];\n          noteInfo.volumeEnvelope.gain.linearRampToValueAtTime(point[1] / 64, time + point[0] * tickTime);\n        }\n      }\n    }\n  }, {\n    key: \"getFineTune\",\n    value: function getFineTune() {\n      return this.tracker.inFTMode() ? this.sample.finetuneX : this.sample.finetune;\n    }\n  }, {\n    key: \"setFineTune\",\n    value: function setFineTune(finetune) {\n      if (this.tracker.inFTMode()) {\n        this.sample.finetuneX = finetune;\n        this.sample.finetune = finetune >> 4;\n      } else {\n        if (finetune > 7) finetune = finetune - 15;\n        this.sample.finetune = finetune;\n        this.sample.finetuneX = finetune << 4;\n      }\n    }\n  }, {\n    key: \"getPeriodForNote\",\n    // in FT mode\n    value: function getPeriodForNote(noteIndex, withFineTune) {\n      var result = 0;\n\n      if (this.tracker.useLinearFrequency) {\n        result = 7680 - (noteIndex - 1) * 64;\n        if (withFineTune) result -= this.getFineTune() / 2;\n      } else {\n        result = this.tracker.FTNotes[noteIndex].period;\n\n        if (withFineTune && this.getFineTune()) {\n          result = this.tracker.audio.getFineTuneForNote(noteIndex, this.getFineTune());\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"setSampleForNoteIndex\",\n    value: function setSampleForNoteIndex(noteIndex) {\n      var sampleIndex = this.sampleNumberForNotes[noteIndex - 1];\n\n      if (sampleIndex !== this.sampleIndex && typeof sampleIndex === 'number') {\n        this.setSampleIndex(sampleIndex);\n      }\n    }\n  }, {\n    key: \"setSampleIndex\",\n    value: function setSampleIndex(index) {\n      if (this.sampleIndex !== index) {\n        this.sample = this.samples[index];\n        this.sampleIndex = index;\n        _events__WEBPACK_IMPORTED_MODULE_3__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_4__[\"EVENT\"].sampleIndexChange, this.instrumentIndex);\n      }\n    }\n  }, {\n    key: \"hasSamples\",\n    value: function hasSamples() {\n      for (var i = 0, max = this.samples.length; i < max; i++) {\n        if (this.samples[i].length) {\n          return true;\n        }\n      }\n    }\n  }, {\n    key: \"hasVibrato\",\n    value: function hasVibrato() {\n      return this.vibrato.rate && this.vibrato.depth;\n    }\n  }]);\n\n  return Instrument;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/models/instrument.js\n");

/***/ }),

/***/ "./src/models/note.js":
/*!****************************!*\
  !*** ./src/models/note.js ***!
  \****************************/
/*! exports provided: Note */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Note\", function() { return Note; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar Note =\n/*#__PURE__*/\nfunction () {\n  function Note(tracker) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Note);\n\n    this.tracker = tracker;\n    this.period = 0;\n    this.index = 0;\n    this.effect = 0;\n    this.instrument = 0;\n    this.param = 0;\n    this.volumeEffect = 0;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Note, [{\n    key: \"setPeriod\",\n    value: function setPeriod(period) {\n      this.period = period;\n      this.index = this.tracker.FTPeriods[period] || 0;\n    }\n  }, {\n    key: \"setIndex\",\n    value: function setIndex(index) {\n      this.index = index;\n      var ftNote = this.tracker.FTNotes[index];\n\n      if (ftNote) {\n        this.period = ftNote.modPeriod || ftNote.period;\n\n        if (this.period === 1) {\n          this.period = 0;\n        }\n      } else {\n        // console.warn(\"No note for index \" + index);\n        this.period = 0;\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.instrument = 0;\n      this.period = 0;\n      this.effect = 0;\n      this.param = 0;\n      this.index = 0;\n      this.volumeEffect = 0;\n    }\n  }, {\n    key: \"duplicate\",\n    value: function duplicate() {\n      return {\n        instrument: this.instrument,\n        period: this.period,\n        effect: this.effect,\n        param: this.param,\n        volumeEffect: this.volumeEffect,\n        note: this.index\n      };\n    }\n  }, {\n    key: \"populate\",\n    value: function populate(data) {\n      this.instrument = data.instrument || 0;\n      this.period = data.period || 0;\n      this.effect = data.effect || 0;\n      this.param = data.param || 0;\n      this.volumeEffect = data.volumeEffect || 0;\n      this.index = data.note || data.index || 0;\n    }\n  }]);\n\n  return Note;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QYXN1dW5hUGxheWVyLy4vc3JjL21vZGVscy9ub3RlLmpzPzc1ZTQiXSwibmFtZXMiOlsiTm90ZSIsInRyYWNrZXIiLCJwZXJpb2QiLCJpbmRleCIsImVmZmVjdCIsImluc3RydW1lbnQiLCJwYXJhbSIsInZvbHVtZUVmZmVjdCIsIkZUUGVyaW9kcyIsImZ0Tm90ZSIsIkZUTm90ZXMiLCJtb2RQZXJpb2QiLCJub3RlIiwiZGF0YSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTyxJQUFNQSxJQUFiO0FBQUE7QUFBQTtBQUNDLGdCQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQ3BCLFNBQUtBLE9BQUwsR0FBZUEsT0FBZjtBQUNBLFNBQUtDLE1BQUwsR0FBYyxDQUFkO0FBQ0EsU0FBS0MsS0FBTCxHQUFhLENBQWI7QUFDQSxTQUFLQyxNQUFMLEdBQWMsQ0FBZDtBQUNBLFNBQUtDLFVBQUwsR0FBa0IsQ0FBbEI7QUFDQSxTQUFLQyxLQUFMLEdBQWEsQ0FBYjtBQUNBLFNBQUtDLFlBQUwsR0FBb0IsQ0FBcEI7QUFDQTs7QUFURjtBQUFBO0FBQUEsOEJBV1dMLE1BWFgsRUFXbUI7QUFDakIsV0FBS0EsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsV0FBS0MsS0FBTCxHQUFhLEtBQUtGLE9BQUwsQ0FBYU8sU0FBYixDQUF1Qk4sTUFBdkIsS0FBa0MsQ0FBL0M7QUFDQTtBQWRGO0FBQUE7QUFBQSw2QkFnQlVDLEtBaEJWLEVBZ0JpQjtBQUNmLFdBQUtBLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFVBQU1NLE1BQU0sR0FBRyxLQUFLUixPQUFMLENBQWFTLE9BQWIsQ0FBcUJQLEtBQXJCLENBQWY7O0FBQ0EsVUFBSU0sTUFBSixFQUFZO0FBQ1gsYUFBS1AsTUFBTCxHQUFjTyxNQUFNLENBQUNFLFNBQVAsSUFBb0JGLE1BQU0sQ0FBQ1AsTUFBekM7O0FBQ0EsWUFBSSxLQUFLQSxNQUFMLEtBQWdCLENBQXBCLEVBQXVCO0FBQ3RCLGVBQUtBLE1BQUwsR0FBYyxDQUFkO0FBQ0E7QUFDRCxPQUxELE1BS087QUFDTjtBQUNBLGFBQUtBLE1BQUwsR0FBYyxDQUFkO0FBQ0E7QUFDRDtBQTVCRjtBQUFBO0FBQUEsNEJBOEJTO0FBQ1AsV0FBS0csVUFBTCxHQUFrQixDQUFsQjtBQUNBLFdBQUtILE1BQUwsR0FBYyxDQUFkO0FBQ0EsV0FBS0UsTUFBTCxHQUFjLENBQWQ7QUFDQSxXQUFLRSxLQUFMLEdBQWEsQ0FBYjtBQUNBLFdBQUtILEtBQUwsR0FBYSxDQUFiO0FBQ0EsV0FBS0ksWUFBTCxHQUFvQixDQUFwQjtBQUNBO0FBckNGO0FBQUE7QUFBQSxnQ0F1Q2E7QUFDWCxhQUFPO0FBQ05GLGtCQUFVLEVBQUUsS0FBS0EsVUFEWDtBQUVOSCxjQUFNLEVBQUUsS0FBS0EsTUFGUDtBQUdORSxjQUFNLEVBQUUsS0FBS0EsTUFIUDtBQUlORSxhQUFLLEVBQUUsS0FBS0EsS0FKTjtBQUtOQyxvQkFBWSxFQUFFLEtBQUtBLFlBTGI7QUFNTkssWUFBSSxFQUFFLEtBQUtUO0FBTkwsT0FBUDtBQVFBO0FBaERGO0FBQUE7QUFBQSw2QkFrRFVVLElBbERWLEVBa0RnQjtBQUNkLFdBQUtSLFVBQUwsR0FBa0JRLElBQUksQ0FBQ1IsVUFBTCxJQUFtQixDQUFyQztBQUNBLFdBQUtILE1BQUwsR0FBY1csSUFBSSxDQUFDWCxNQUFMLElBQWUsQ0FBN0I7QUFDQSxXQUFLRSxNQUFMLEdBQWNTLElBQUksQ0FBQ1QsTUFBTCxJQUFlLENBQTdCO0FBQ0EsV0FBS0UsS0FBTCxHQUFhTyxJQUFJLENBQUNQLEtBQUwsSUFBYyxDQUEzQjtBQUNBLFdBQUtDLFlBQUwsR0FBb0JNLElBQUksQ0FBQ04sWUFBTCxJQUFxQixDQUF6QztBQUNBLFdBQUtKLEtBQUwsR0FBYVUsSUFBSSxDQUFDRCxJQUFMLElBQWFDLElBQUksQ0FBQ1YsS0FBbEIsSUFBMkIsQ0FBeEM7QUFDQTtBQXpERjs7QUFBQTtBQUFBIiwiZmlsZSI6Ii4vc3JjL21vZGVscy9ub3RlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIE5vdGUge1xyXG5cdGNvbnN0cnVjdG9yKHRyYWNrZXIpIHtcclxuXHRcdHRoaXMudHJhY2tlciA9IHRyYWNrZXI7XHJcblx0XHR0aGlzLnBlcmlvZCA9IDA7XHJcblx0XHR0aGlzLmluZGV4ID0gMDtcclxuXHRcdHRoaXMuZWZmZWN0ID0gMDtcclxuXHRcdHRoaXMuaW5zdHJ1bWVudCA9IDA7XHJcblx0XHR0aGlzLnBhcmFtID0gMDtcclxuXHRcdHRoaXMudm9sdW1lRWZmZWN0ID0gMDtcclxuXHR9XHJcblxyXG5cdHNldFBlcmlvZChwZXJpb2QpIHtcclxuXHRcdHRoaXMucGVyaW9kID0gcGVyaW9kO1xyXG5cdFx0dGhpcy5pbmRleCA9IHRoaXMudHJhY2tlci5GVFBlcmlvZHNbcGVyaW9kXSB8fCAwO1xyXG5cdH07XHJcblxyXG5cdHNldEluZGV4KGluZGV4KSB7XHJcblx0XHR0aGlzLmluZGV4ID0gaW5kZXg7XHJcblx0XHRjb25zdCBmdE5vdGUgPSB0aGlzLnRyYWNrZXIuRlROb3Rlc1tpbmRleF07XHJcblx0XHRpZiAoZnROb3RlKSB7XHJcblx0XHRcdHRoaXMucGVyaW9kID0gZnROb3RlLm1vZFBlcmlvZCB8fCBmdE5vdGUucGVyaW9kO1xyXG5cdFx0XHRpZiAodGhpcy5wZXJpb2QgPT09IDEpIHtcclxuXHRcdFx0XHR0aGlzLnBlcmlvZCA9IDA7XHJcblx0XHRcdH1cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdC8vIGNvbnNvbGUud2FybihcIk5vIG5vdGUgZm9yIGluZGV4IFwiICsgaW5kZXgpO1xyXG5cdFx0XHR0aGlzLnBlcmlvZCA9IDA7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0Y2xlYXIoKSB7XHJcblx0XHR0aGlzLmluc3RydW1lbnQgPSAwO1xyXG5cdFx0dGhpcy5wZXJpb2QgPSAwO1xyXG5cdFx0dGhpcy5lZmZlY3QgPSAwO1xyXG5cdFx0dGhpcy5wYXJhbSA9IDA7XHJcblx0XHR0aGlzLmluZGV4ID0gMDtcclxuXHRcdHRoaXMudm9sdW1lRWZmZWN0ID0gMDtcclxuXHR9O1xyXG5cclxuXHRkdXBsaWNhdGUoKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRpbnN0cnVtZW50OiB0aGlzLmluc3RydW1lbnQsXHJcblx0XHRcdHBlcmlvZDogdGhpcy5wZXJpb2QsXHJcblx0XHRcdGVmZmVjdDogdGhpcy5lZmZlY3QsXHJcblx0XHRcdHBhcmFtOiB0aGlzLnBhcmFtLFxyXG5cdFx0XHR2b2x1bWVFZmZlY3Q6IHRoaXMudm9sdW1lRWZmZWN0LFxyXG5cdFx0XHRub3RlOiB0aGlzLmluZGV4XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0cG9wdWxhdGUoZGF0YSkge1xyXG5cdFx0dGhpcy5pbnN0cnVtZW50ID0gZGF0YS5pbnN0cnVtZW50IHx8IDA7XHJcblx0XHR0aGlzLnBlcmlvZCA9IGRhdGEucGVyaW9kIHx8IDA7XHJcblx0XHR0aGlzLmVmZmVjdCA9IGRhdGEuZWZmZWN0IHx8IDA7XHJcblx0XHR0aGlzLnBhcmFtID0gZGF0YS5wYXJhbSB8fCAwO1xyXG5cdFx0dGhpcy52b2x1bWVFZmZlY3QgPSBkYXRhLnZvbHVtZUVmZmVjdCB8fCAwO1xyXG5cdFx0dGhpcy5pbmRleCA9IGRhdGEubm90ZSB8fCBkYXRhLmluZGV4IHx8IDA7XHJcblx0fTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/models/note.js\n");

/***/ }),

/***/ "./src/models/sample.js":
/*!******************************!*\
  !*** ./src/models/sample.js ***!
  \******************************/
/*! exports provided: Sample */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Sample\", function() { return Sample; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar Sample =\n/*#__PURE__*/\nfunction () {\n  function Sample() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Sample);\n\n    this.data = [];\n    this.length = 0;\n    this.name = '';\n    this.bits = 8;\n    this.volume = 64;\n    this.finetune = 0;\n    this.finetuneX = 0;\n    this.panning = 0;\n    this.relativeNote = 0;\n    this.loop = {\n      enabled: false,\n      start: 0,\n      length: 0,\n      type: 0\n    };\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Sample, [{\n    key: \"check\",\n    value: function check() {\n      var min = 0;\n      var max = 0;\n\n      for (var i = 0; i < this.data.length; i++) {\n        min = Math.min(min, this.data[i]);\n        max = Math.max(max, this.data[i]);\n      }\n\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }]);\n\n  return Sample;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QYXN1dW5hUGxheWVyLy4vc3JjL21vZGVscy9zYW1wbGUuanM/NTM5ZiJdLCJuYW1lcyI6WyJTYW1wbGUiLCJkYXRhIiwibGVuZ3RoIiwibmFtZSIsImJpdHMiLCJ2b2x1bWUiLCJmaW5ldHVuZSIsImZpbmV0dW5lWCIsInBhbm5pbmciLCJyZWxhdGl2ZU5vdGUiLCJsb29wIiwiZW5hYmxlZCIsInN0YXJ0IiwidHlwZSIsIm1pbiIsIm1heCIsImkiLCJNYXRoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLElBQU1BLE1BQWI7QUFBQTtBQUFBO0FBQ0Msb0JBQWM7QUFBQTs7QUFDYixTQUFLQyxJQUFMLEdBQVksRUFBWjtBQUNBLFNBQUtDLE1BQUwsR0FBYyxDQUFkO0FBQ0EsU0FBS0MsSUFBTCxHQUFZLEVBQVo7QUFDQSxTQUFLQyxJQUFMLEdBQVksQ0FBWjtBQUNBLFNBQUtDLE1BQUwsR0FBYyxFQUFkO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQixDQUFoQjtBQUNBLFNBQUtDLFNBQUwsR0FBaUIsQ0FBakI7QUFDQSxTQUFLQyxPQUFMLEdBQWUsQ0FBZjtBQUNBLFNBQUtDLFlBQUwsR0FBb0IsQ0FBcEI7QUFDQSxTQUFLQyxJQUFMLEdBQVk7QUFDWEMsYUFBTyxFQUFFLEtBREU7QUFFWEMsV0FBSyxFQUFFLENBRkk7QUFHWFYsWUFBTSxFQUFFLENBSEc7QUFJWFcsVUFBSSxFQUFFO0FBSkssS0FBWjtBQU1BOztBQWpCRjtBQUFBO0FBQUEsNEJBbUJTO0FBQ1AsVUFBSUMsR0FBRyxHQUFHLENBQVY7QUFDQSxVQUFJQyxHQUFHLEdBQUcsQ0FBVjs7QUFDQSxXQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUcsS0FBS2YsSUFBTCxDQUFVQyxNQUE5QixFQUFzQ2MsQ0FBQyxFQUF2QyxFQUEyQztBQUMxQ0YsV0FBRyxHQUFHRyxJQUFJLENBQUNILEdBQUwsQ0FBU0EsR0FBVCxFQUFjLEtBQUtiLElBQUwsQ0FBVWUsQ0FBVixDQUFkLENBQU47QUFDQUQsV0FBRyxHQUFHRSxJQUFJLENBQUNGLEdBQUwsQ0FBU0EsR0FBVCxFQUFjLEtBQUtkLElBQUwsQ0FBVWUsQ0FBVixDQUFkLENBQU47QUFDQTs7QUFDRCxhQUFPO0FBQUVGLFdBQUcsRUFBSEEsR0FBRjtBQUFPQyxXQUFHLEVBQUhBO0FBQVAsT0FBUDtBQUNBO0FBM0JGOztBQUFBO0FBQUEiLCJmaWxlIjoiLi9zcmMvbW9kZWxzL3NhbXBsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTYW1wbGUge1xyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0dGhpcy5kYXRhID0gW107XHJcblx0XHR0aGlzLmxlbmd0aCA9IDA7XHJcblx0XHR0aGlzLm5hbWUgPSAnJztcclxuXHRcdHRoaXMuYml0cyA9IDg7XHJcblx0XHR0aGlzLnZvbHVtZSA9IDY0O1xyXG5cdFx0dGhpcy5maW5ldHVuZSA9IDA7XHJcblx0XHR0aGlzLmZpbmV0dW5lWCA9IDA7XHJcblx0XHR0aGlzLnBhbm5pbmcgPSAwO1xyXG5cdFx0dGhpcy5yZWxhdGl2ZU5vdGUgPSAwO1xyXG5cdFx0dGhpcy5sb29wID0ge1xyXG5cdFx0XHRlbmFibGVkOiBmYWxzZSxcclxuXHRcdFx0c3RhcnQ6IDAsXHJcblx0XHRcdGxlbmd0aDogMCxcclxuXHRcdFx0dHlwZTogMFxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdGNoZWNrKCkge1xyXG5cdFx0bGV0IG1pbiA9IDA7XHJcblx0XHRsZXQgbWF4ID0gMDtcclxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5kYXRhLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdG1pbiA9IE1hdGgubWluKG1pbiwgdGhpcy5kYXRhW2ldKTtcclxuXHRcdFx0bWF4ID0gTWF0aC5tYXgobWF4LCB0aGlzLmRhdGFbaV0pO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHsgbWluLCBtYXggfTtcclxuXHR9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/models/sample.js\n");

/***/ }),

/***/ "./src/tracker.js":
/*!************************!*\
  !*** ./src/tracker.js ***!
  \************************/
/*! exports provided: Tracker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Tracker\", function() { return Tracker; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var waaclock__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! waaclock */ \"./node_modules/waaclock/index.js\");\n/* harmony import */ var waaclock__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(waaclock__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _models_note__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./models/note */ \"./src/models/note.js\");\n/* harmony import */ var _models_instrument__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./models/instrument */ \"./src/models/instrument.js\");\n/* harmony import */ var _fileformats_detect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fileformats/detect */ \"./src/fileformats/detect.js\");\n/* harmony import */ var _lib_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/util */ \"./src/lib/util.js\");\n/* harmony import */ var _binaryStream__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./binaryStream */ \"./src/binaryStream.js\");\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./events */ \"./src/events.js\");\n/* harmony import */ var _audio__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./audio */ \"./src/audio.js\");\n/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./enum */ \"./src/enum.js\");\n\n\n\n\n\n\n\n\n\n\n\nvar Tracker =\n/*#__PURE__*/\nfunction () {\n  function Tracker() {\n    var audioContext = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Tracker);\n\n    this.events = _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"];\n    this.audio = new _audio__WEBPACK_IMPORTED_MODULE_9__[\"Audio\"](this, audioContext);\n    this.externalAudioContext = audioContext !== null;\n    this.detector = new _fileformats_detect__WEBPACK_IMPORTED_MODULE_5__[\"FileDetector\"](this);\n    this.useLinearFrequency = true;\n    this.periodNoteTable = {};\n    this.periodFinetuneTable = {};\n    this.nameNoteTable = {};\n    this.noteNames = [];\n    this.FTNotes = [];\n    this.FTPeriods = [];\n    this.isPlaying = false;\n    this.song = null;\n    this.instruments = [];\n    this.playType = _enum__WEBPACK_IMPORTED_MODULE_10__[\"PLAYTYPE\"].song;\n    this.patternIndex = 0;\n    this.patternStep = 0;\n    this.patternNumber = null;\n    this.patternData = null;\n    this.currentInstrumentIndex = 1;\n    this.prevInstrumentIndex = null;\n    this.vibratoFunction = null;\n    this.tremoloFunction = null;\n    this.bpm = 125;\n    this.ticksPerStep = 6;\n    this.tickTime = 2.5 / this.bpm;\n    this.mainTimer = null;\n    this.clock = null;\n    this.patternLength = 64;\n    this.trackerMode = _enum__WEBPACK_IMPORTED_MODULE_10__[\"TRACKERMODE\"].PROTRACKER;\n    this.trackerStates = [];\n    this.patternLoopStart = [];\n    this.patternLoopCount = [];\n    this.trackCount = 4;\n    this.clearEffectsCache();\n    this.clearTrackNotes();\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Tracker, [{\n    key: \"init\",\n    value: function init() {\n      this.audio.init();\n\n      for (var i = -8; i < 8; i++) {\n        this.periodFinetuneTable[i] = {};\n      }\n\n      for (var key in _enum__WEBPACK_IMPORTED_MODULE_10__[\"NOTEPERIOD\"]) {\n        if (_enum__WEBPACK_IMPORTED_MODULE_10__[\"NOTEPERIOD\"].hasOwnProperty(key)) {\n          var note = _enum__WEBPACK_IMPORTED_MODULE_10__[\"NOTEPERIOD\"][key];\n          this.periodNoteTable[note.period] = note;\n          this.nameNoteTable[note.name] = note;\n          this.noteNames.push(note.name); // build fineTune table\n\n          if (note.tune) {\n            for (var _i = -8; _i < 8; _i++) {\n              var table = this.periodFinetuneTable[_i];\n              var index = _i + 8;\n              table[note.tune[index]] = note.period;\n            }\n          }\n        }\n      }\n\n      var ftCounter = 0;\n\n      for (var _key in _enum__WEBPACK_IMPORTED_MODULE_10__[\"FTNOTEPERIOD\"]) {\n        if (_enum__WEBPACK_IMPORTED_MODULE_10__[\"FTNOTEPERIOD\"].hasOwnProperty(_key)) {\n          var ftNote = _enum__WEBPACK_IMPORTED_MODULE_10__[\"FTNOTEPERIOD\"][_key];\n          if (!ftNote.period) ftNote.period = 1;\n          this.FTNotes.push(ftNote);\n          this.FTPeriods[ftNote.period] = ftCounter;\n          if (ftNote.modPeriod) this.FTPeriods[ftNote.modPeriod] = ftCounter;\n          ftCounter++;\n        }\n      }\n    }\n  }, {\n    key: \"resetDefaultSettings\",\n    value: function resetDefaultSettings() {\n      this.setAmigaSpeed(6);\n      this.setBPM(125);\n      this.vibratoFunction = this.audio.waveFormFunction.sine;\n      this.tremoloFunction = this.audio.waveFormFunction.sine;\n      this.clearTrackNotes();\n      this.clearEffectsCache();\n      this.useLinearFrequency = false;\n      this.setTrackerMode(_enum__WEBPACK_IMPORTED_MODULE_10__[\"TRACKERMODE\"].PROTRACKER);\n      this.audio.setMasterVolume(1);\n      this.audio.setAmigaLowPassFilter(false, 0);\n    }\n  }, {\n    key: \"clearInstruments\",\n    value: function clearInstruments(count) {\n      if (!this.song) {\n        return;\n      }\n\n      var instrumentContainer = [];\n      var max = count || this.song.instruments.length - 1;\n      this.instruments = [];\n\n      for (var i = 1; i <= max; i++) {\n        this.setInstrument(i, new _models_instrument__WEBPACK_IMPORTED_MODULE_4__[\"Instrument\"](this));\n        instrumentContainer.push({\n          label: i + ' ',\n          data: i\n        });\n      }\n\n      this.song.instruments = this.instruments;\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].instrumentListChange, instrumentContainer);\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].instrumentChange, this.currentInstrumentIndex);\n    }\n  }, {\n    key: \"clearTrackNotes\",\n    value: function clearTrackNotes() {\n      this.trackNotes = [];\n\n      for (var i = 0; i < this.trackCount; i++) {\n        this.trackNotes.push({});\n      }\n    }\n  }, {\n    key: \"stopNotes\",\n    value: function stopNotes() {\n      for (var i = 0; i < this.trackCount; i++) {\n        if (this.trackNotes[i].source) {\n          try {\n            this.trackNotes[i].source.stop();\n          } catch (e) {// swallow error\n          }\n        }\n      }\n    }\n  }, {\n    key: \"clearEffectsCache\",\n    value: function clearEffectsCache() {\n      this.trackEffectCache = [];\n\n      for (var i = 0; i < this.trackCount; i++) {\n        this.trackEffectCache.push({});\n      }\n    }\n    /**\r\n     * Sets the pattern number. Updates the pattern index automatically.\r\n     *\r\n     * The pattern number differs from the index in that the former is a pattern\r\n     * specifically named by a number and can appear multiple times in a song.\r\n     * The latter specifies the order that said patterns should be played.\r\n     * \r\n     * The song object specifies both:\r\n     * `song.patterns` specifies the pattern numbers (`song.pattern[0]` is the\r\n     * pattern named 0, and isn't necessarily the first pattern to be played).\r\n     * \r\n     * `song.patternTable` specifies the indexes. `song.patternTable[0]`\r\n     * specifies the number of the pattern that should be played first.\r\n     * \r\n     * @param {number} number The pattern number. Refers to the first entry to\r\n     * that pattern in the song. Range is undefined, as it is specified by the\r\n     * song author.\r\n     * @param {boolean} resetStep Indicates that the tracker should play the\r\n     * specified pattern from the beggining. Defaults true.\r\n     * @param {boolean} stopNotes Indicates that the tracker should stop the\r\n     * currently playing samples before changing the current pattern. Defaults\r\n     * false.\r\n     */\n\n  }, {\n    key: \"setPatternByNumber\",\n    value: function setPatternByNumber(number) {\n      var resetStep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var stopNotes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (number < 0) number = 0;\n      this.patternNumber = number;\n      this.patternIndex = this.song.patternTable.indexOf(this.patternNumber);\n      this.patternData = this.song.patterns[this.patternNumber];\n\n      if (!this.patternData) {\n        // insert empty pattern;\n        this.patternData = this.getEmptyPattern();\n        this.song.patterns[this.currentPattern] = this.currentPatternData;\n      }\n\n      this.patternLength = this.patternData.length;\n      if (stopNotes) this.stopNotes();\n      if (resetStep) this.patternStep = 0;\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].patternChange, {\n        patternIndex: this.patternIndex,\n        pattern: this.patternData\n      });\n    }\n  }, {\n    key: \"getPatternNumber\",\n    value: function getPatternNumber() {\n      return this.patternNumber;\n    }\n    /**\r\n     * Sets the pattern index. Updates the pattern number automatically.\r\n     * If the index if beyond the track's length, replays the song from the\r\n     * specified restart pattern.\r\n     * TODO: Check for any pattern jumps on the nearest pattern and replay the\r\n     * song from that pattern instead. (Happens in CookingItUp.mod, the pattern\r\n     * jump in the last pattern (3) is different from the restart position (0))\r\n     * \r\n     * @param {number} index The pattern index. Refers to the order that the\r\n     * patterns must be played. Ranges from zero to the amount of patterns in the\r\n     * song.\r\n     * @param {boolean} resetStep Indicates that the tracker should play the\r\n     * specified pattern from the beggining. Defaults true.\r\n     * @param {boolean} stopNotes Indicates that the tracker should stop the\r\n     * currently playing samples before changing the current pattern. Defaults\r\n     * false.\r\n     */\n\n  }, {\n    key: \"setPattern\",\n    value: function setPattern(index) {\n      var resetStep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var stopNotes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (index < 0) index = 0;else if (index >= this.song.length) {\n        index = this.song.restartPosition ? this.song.restartPosition - 1 : 0;\n        this.events.emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].songRestart, index);\n      }\n      this.patternIndex = index;\n      this.patternNumber = this.song.patternTable[this.patternIndex];\n      this.patternData = this.song.patterns[this.patternNumber];\n      if (stopNotes) this.stopNotes();\n      if (resetStep) this.patternStep = 0;\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].patternChange, {\n        patternIndex: this.patternIndex,\n        pattern: this.patternData\n      });\n    }\n  }, {\n    key: \"getPattern\",\n    value: function getPattern() {\n      return this.patternIndex;\n    }\n  }, {\n    key: \"getPatternData\",\n    value: function getPatternData() {\n      return this.patternData;\n    }\n  }, {\n    key: \"setPlayType\",\n    value: function setPlayType(playType) {\n      this.playType = playType;\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].playTypeChange, this.playType);\n    }\n  }, {\n    key: \"getPlayType\",\n    value: function getPlayType() {\n      return this.playType;\n    }\n  }, {\n    key: \"playSong\",\n    value: function playSong() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.stop();\n      this.audio.checkState();\n      this.setPlayType(_enum__WEBPACK_IMPORTED_MODULE_10__[\"PLAYTYPE\"].song);\n      this.isPlaying = true;\n\n      if (this.getPattern() !== index) {\n        this.setPattern(index);\n      }\n\n      this.playPatternIndex();\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].playingChange, this.isPlaying);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var resetVolume = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this.clock) {\n        this.clock.stop();\n      }\n\n      this.audio.disable();\n\n      if (resetVolume) {\n        this.audio.setMasterVolume(1);\n      }\n\n      this.clearEffectsCache();\n      this.setPattern(0, true, true);\n      this.isPlaying = false;\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].playingChange, this.isPlaying);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      // this is only called when speed is set to 0\n      if (this.clock) this.clock.stop();\n      this.isPlaying = false;\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].playingChange, this.isPlaying);\n    }\n  }, {\n    key: \"getProperties\",\n    value: function getProperties() {\n      return {\n        ticksPerStep: this.ticksPerStep,\n        tickTime: this.tickTime\n      };\n    }\n  }, {\n    key: \"playPatternIndex\",\n    value: function playPatternIndex() {\n      this.clock = this.clock || new waaclock__WEBPACK_IMPORTED_MODULE_2___default.a(this.audio.context);\n      this.clock.start();\n      this.audio.enable();\n      this.patternLoopStart = [];\n      this.patternLoopCount = [];\n      var thisPatternLength = this.patternData.length;\n      var stepResult = {}; // look-ahead playback - far less demanding, works OK on mobile devices\n\n      var time = this.audio.context.currentTime + 0.1; // add small delay to allow some time to render the first notes before playing\n      // start with a small delay then make it longer\n      // this is because Chrome on Android doesn't start playing until the first batch of scheduling is done?\n\n      var delay = _enum__WEBPACK_IMPORTED_MODULE_10__[\"SETTINGS\"].playbackDelayStart;\n      var playingDelay = _enum__WEBPACK_IMPORTED_MODULE_10__[\"SETTINGS\"].playbackDelay;\n      this.trackerStates = [];\n      this.mainTimer = this.clock.setTimeout(function (event) {\n        if (this.patternStep > 1) {\n          delay = playingDelay;\n          this.mainTimer.repeat(delay);\n        }\n\n        var maxTime = event.deadline + delay;\n        this.audio.clearScheduledNotesCache();\n\n        while (time < maxTime) {\n          if (stepResult.pause) {\n            // speed is set to 0\n            if (!stepResult.pauseHandled) {\n              var delta = time - this.audio.context.currentTime;\n\n              if (delta > 0) {\n                setTimeout(function () {\n                  this.pause(); // in Fasttracker this repeats the current step with the previous speed - including effects.\n                  // (which seems totally weird)\n\n                  this.setAmigaSpeed(6);\n                }, Math.round(delta * 1000) + 100);\n              }\n\n              stepResult.pauseHandled = true;\n            }\n\n            return;\n          }\n\n          this.setStateAtTime(time, {\n            patternStep: this.patternStep,\n            patternNumber: this.patternNumber\n          });\n\n          if (stepResult.patternDelay) {\n            // the E14 effect is used: delay Pattern but keep processing effects\n            stepResult.patternDelay--;\n\n            for (var i = 0; i < this.trackCount; i++) {\n              this.applyEffects(i, time);\n            }\n\n            time += this.ticksPerStep * this.tickTime;\n          } else {\n            stepResult = this.playPatternStep(this.patternStep, time, this.patternData, this.patternIndex);\n            time += this.ticksPerStep * this.tickTime;\n            this.patternStep++;\n\n            if (this.patternStep >= thisPatternLength || stepResult.patternBreak) {\n              if (!(stepResult.positionBreak && stepResult.targetSongPosition == this.patternIndex)) {\n                //We're not in a pattern loop\n                this.patternLoopStart = [];\n                this.patternLoopCount = [];\n              }\n\n              this.patternStep = 0;\n\n              if (this.getPlayType() == _enum__WEBPACK_IMPORTED_MODULE_10__[\"PLAYTYPE\"].song) {\n                var nextPosition = stepResult.positionBreak ? stepResult.targetSongPosition : this.patternIndex + 1;\n\n                if (nextPosition >= this.song.length) {\n                  nextPosition = this.song.restartPosition ? this.song.restartPosition - 1 : 0;\n                  this.events.emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].songRestart, nextPosition);\n                }\n\n                if (nextPosition >= this.song.length) {\n                  this.events.emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].songRestart, nextPosition);\n                  nextPosition = 0;\n                }\n\n                this.setPattern(nextPosition); // some invalid(?) XM files have non-existent patterns in their song list - eg. cybernautic_squierl.xm\n\n                if (!this.patternData) {\n                  this.patternData = this.getEmptyPattern();\n                  this.song.patterns[this.patternIndex] = this.patternData;\n                }\n\n                thisPatternLength = this.patternData.length;\n\n                if (stepResult.patternBreak) {\n                  this.patternStep = stepResult.targetPatternPosition || 0;\n\n                  if (this.patternStep > this.patternData.length) {\n                    this.patternStep = 0; // occurs in the wild - example 'Lake Of Sadness' - last pattern\n                  }\n                }\n              } else {\n                if (stepResult.patternBreak) {\n                  this.patternStep = stepResult.targetPatternPosition || 0;\n\n                  if (this.patternStep > thisPatternLength) {\n                    this.patternStep = 0;\n                  }\n                }\n              }\n            }\n          }\n        } // check if a playing note has looping parameters that needs further scheduling\n\n\n        for (var _i2 = 0; _i2 < this.trackCount; _i2++) {\n          var trackNote = this.trackNotes[_i2];\n\n          if (trackNote && trackNote.time && trackNote.scheduled) {\n            var instrument = this.getInstrument(trackNote.instrumentIndex);\n\n            if (trackNote.scheduled.volume) {\n              if (time + delay >= trackNote.scheduled.volume) {\n                var scheduledtime = instrument.scheduleEnvelopeLoop(trackNote.volumeEnvelope, trackNote.scheduled.volume, 2);\n                trackNote.scheduled.volume += scheduledtime;\n              }\n            }\n\n            if (trackNote.scheduled.panning) {\n              if (time + delay >= trackNote.scheduled.panning) {\n                var _scheduledtime = instrument.scheduleEnvelopeLoop(trackNote.panningEnvelope, trackNote.scheduled.panning, 2);\n\n                trackNote.scheduled.panning += _scheduledtime;\n              }\n            }\n          }\n        }\n      }.bind(this), 0.01).repeat(delay).tolerance({\n        early: 0.1\n      });\n    }\n  }, {\n    key: \"playPatternStep\",\n    value: function playPatternStep(step, time, patternData, songPosition) {\n      patternData = patternData; // note: patternData can be different than currentPatternData when playback is active with long look ahead times\n\n      var patternStep = patternData[step];\n      var tracks = this.trackCount;\n      var result = {}; // hmmm ... Whut?\n      // The Speed setting influences other effects too,\n      // on Amiga players the effects are processed each tick, so the speed setting on a later channel can influence the effects on a previous channel ...\n      // This is implemented by setting the speed before all other effects\n      // example: see the ED2 command pattern 0, track 3, step 32 in AceMan - Dirty Tricks.mod\n      // not sure this is 100% correct, but in any case it's more correct then setting it at the track it self.\n      // Thinking ... ... yes ... should be fine as no speed related effects are processed on tick 0?\n\n      for (var i = 0; i < tracks; i++) {\n        var note = patternStep[i];\n\n        if (note && note.effect && note.effect === 15) {\n          if (note.param <= 32) {\n            //if (note.param == 0) note.param = 1;\n            this.setAmigaSpeed(note.param);\n            if (note.param === 0) result.pause = true;\n          } else {\n            this.setBPM(note.param);\n          }\n        }\n      } // --- end Whut? ---\n\n\n      for (var _i3 = 0; _i3 < tracks; _i3++) {\n        var _note = patternStep[_i3];\n\n        if (_note) {\n          var songPos = {\n            position: songPosition,\n            step: step\n          };\n          var playtime = time;\n          var r = this.playNote(_note, _i3, playtime, songPos);\n\n          if (r.patternBreak) {\n            result.patternBreak = true;\n            result.targetPatternPosition = r.targetPatternPosition || 0;\n          }\n\n          if (r.positionBreak) {\n            result.positionBreak = true;\n            result.targetPatternPosition = r.targetPatternPosition || 0;\n            result.targetSongPosition = r.targetSongPosition || 0;\n          }\n\n          if (r.patternDelay) result.patternDelay = r.patternDelay;\n        }\n      }\n\n      for (var _i4 = 0; _i4 < tracks; _i4++) {\n        this.applyEffects(_i4, time);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"playNote\",\n    value: function playNote(note, track, time, songPos) {\n      var defaultVolume = 100;\n      var trackEffects = {};\n      var instrumentIndex = note.instrument;\n      var notePeriod = note.period;\n      var noteIndex = note.index;\n      var instrument;\n\n      if (notePeriod && !instrumentIndex) {\n        // reuse previous instrument\n        instrumentIndex = this.trackNotes[track].currentInstrument;\n        defaultVolume = typeof this.trackNotes[track].currentVolume === 'number' ? this.trackNotes[track].currentVolume : defaultVolume;\n\n        if (_enum__WEBPACK_IMPORTED_MODULE_10__[\"SETTINGS\"].emulateProtracker1OffsetBug && instrumentIndex && this.trackEffectCache[track].offset) {\n          if (this.trackEffectCache[track].offset.instrument === instrumentIndex) {\n            trackEffects.offset = this.trackEffectCache[track].offset;\n          }\n        }\n      }\n\n      if (typeof note.instrument === 'number') {\n        instrument = this.getInstrument(note.instrument);\n\n        if (instrument) {\n          defaultVolume = 100 * (instrument.sample.volume / 64);\n\n          if (_enum__WEBPACK_IMPORTED_MODULE_10__[\"SETTINGS\"].emulateProtracker1OffsetBug) {\n            // reset instrument offset when a instrument number is present;\n            this.trackEffectCache[track].offset = this.trackEffectCache[track].offset || {};\n            this.trackEffectCache[track].offset.value = 0;\n            this.trackEffectCache[track].offset.instrument = note.instrument;\n          }\n        }\n      }\n\n      var volume = defaultVolume;\n      var doPlayNote = true;\n\n      if (typeof instrumentIndex === 'number') {\n        instrument = this.getInstrument(instrumentIndex);\n      }\n\n      if (noteIndex && this.inFTMode()) {\n        if (noteIndex === 97) {\n          noteIndex = _enum__WEBPACK_IMPORTED_MODULE_10__[\"NOTEOFF\"];\n        }\n\n        if (noteIndex === _enum__WEBPACK_IMPORTED_MODULE_10__[\"NOTEOFF\"]) {\n          var _offInstrument = instrument || this.getInstrument(this.trackNotes[track].currentInstrument);\n\n          if (_offInstrument) {\n            volume = _offInstrument.noteOff(time, this.trackNotes[track]);\n          } else {\n            volume = 0;\n          }\n\n          defaultVolume = volume;\n          doPlayNote = false;\n        } else {\n          if (instrument) {\n            instrument.setSampleForNoteIndex(noteIndex);\n\n            if (instrument.sample.relativeNote) {\n              noteIndex += instrument.sample.relativeNote;\n            } // TODO: check of note gets out of range\n            // but apparently they still get played ... -> extend scale to 9, 10 or 11 octaves ?\n            // see jt_letgo.xm instrument 6 (track 20) for example\n\n          }\n\n          if (this.useLinearFrequency) {\n            notePeriod = 7680 - (noteIndex - 1) * 64;\n          } else {\n            var ftNote = this.FTNotes[noteIndex];\n\n            if (ftNote) {\n              notePeriod = ftNote.period;\n            }\n          }\n        }\n      }\n\n      var value = note.param;\n      var x;\n      var y;\n      var result = {};\n\n      if (note.volumeEffect && this.inFTMode()) {\n        var ve = note.volumeEffect;\n        x = ve >> 4;\n        y = ve & 0x0f;\n\n        if (ve > 15 && ve <= 80) {\n          volume = (ve - 16) / 64 * 100;\n          defaultVolume = volume; // note this is not relative to the default instrument volume but sets the instrument volume\n\n          trackEffects.volume = {\n            value: volume\n          };\n        } else {\n          switch (x) {\n            case 6:\n              // volume slide down\n              trackEffects.fade = {\n                value: -y * 100 / 64\n              };\n              break;\n\n            case 7:\n              // volume slide up\n              trackEffects.fade = {\n                value: y * 100 / 64\n              };\n              break;\n\n            case 8:\n              // Fine volume slide down\n              trackEffects.fade = {\n                value: -y * 100 / 64,\n                fine: true\n              };\n              break;\n\n            case 9:\n              // Fine volume slide up\n              trackEffects.fade = {\n                value: y * 100 / 64,\n                fine: true\n              };\n              break;\n\n            case 10:\n              // set vibrato speed\n              // console.warn('set vibrato speed not implemented');\n              break;\n\n            case 11:\n              // Vibrato\n              // console.warn('Vibrato not implemented');\n              break;\n\n            case 12:\n              // Set panning\n              trackEffects.panning = {\n                value: (ve - 192) * 17,\n                slide: false\n              };\n              break;\n\n            case 13:\n              // Panning slide left\n              // console.warn('Panning slide left not implemented - track ' + track);\n              trackEffects.panning = {\n                value: ve,\n                slide: true\n              };\n              break;\n\n            case 14:\n              // Panning slide right\n              // console.warn('Panning slide right not implemented - track ' + track);\n              break;\n\n            case 15:\n              // Tone porta\n              // console.warn('Tone Porta not implemented');\n              break;\n          }\n        }\n      }\n\n      switch (note.effect) {\n        case 0:\n          // Arpeggio\n          if (value) {\n            x = value >> 4;\n            y = value & 0x0f;\n            var finetune = 0; // TODO: when a instrument index is present other than the previous index, but no note\n            // how does this work? see example just_about_seven.mod\n\n            instrument = instrument || this.getInstrument(this.trackNotes[track].currentInstrument);\n\n            if (this.inFTMode()) {\n              if (instrument) {\n                var _noteIndex = noteIndex || this.trackNotes[track].noteIndex;\n\n                var root = instrument.getPeriodForNote(_noteIndex, true);\n\n                if (noteIndex === _enum__WEBPACK_IMPORTED_MODULE_10__[\"NOTEOFF\"]) {\n                  trackEffects.arpeggio = this.trackEffectCache[track].arpeggio;\n                } else {\n                  trackEffects.arpeggio = {\n                    root: root,\n                    interval1: root - instrument.getPeriodForNote(_noteIndex + x, true),\n                    interval2: root - instrument.getPeriodForNote(_noteIndex + y, true),\n                    step: 1\n                  };\n                  this.trackEffectCache[track].arpeggio = trackEffects.arpeggio;\n                }\n              }\n            } else {\n              var _root = notePeriod || this.trackNotes[track].startPeriod; // check if the instrument is finetuned\n\n\n              if (instrument) {\n                finetune = instrument.getFineTune();\n\n                if (finetune) {\n                  _root = this.audio.getFineTuneForPeriod(_root, finetune);\n                }\n              }\n\n              trackEffects.arpeggio = {\n                root: _root,\n                interval1: _root - this.audio.getSemiToneFrom(_root, x, finetune),\n                interval2: _root - this.audio.getSemiToneFrom(_root, y, finetune),\n                step: 1\n              };\n            }\n          } // set volume, even if no effect present\n          // note: this is consistent with the Protracker 3.15 and later playback\n          // on Protracker 2.3 and 3.0, the volume effect seems much bigger - why ? (see 'nugget - frust.mod')\n\n\n          if (note.instrument) {\n            trackEffects.volume = {\n              value: defaultVolume\n            };\n          }\n\n          break;\n\n        case 1:\n          // Slide Up\n          value = value * -1; // note: on protracker 2 and 3 , the effectcache is NOT used on this effect\n          // it is on Milkytracker (in all playback modes)\n\n          if (this.inFTMode()) {\n            if (!value && this.trackEffectCache[track].slideUp) value = this.trackEffectCache[track].slideUp.value;\n          }\n\n          trackEffects.slide = {\n            value: value\n          };\n          this.trackEffectCache[track].slideUp = trackEffects.slide;\n          break;\n\n        case 2:\n          // Slide Down\n          // note: on protracker 2 and 3 , the effectcache is NOT used on this effect\n          // it is on Milkytracker (in all playback modes)\n          if (this.inFTMode()) {\n            if (!value && this.trackEffectCache[track].slideDown) value = this.trackEffectCache[track].slideDown.value;\n          }\n\n          trackEffects.slide = {\n            value: value\n          };\n          this.trackEffectCache[track].slideDown = trackEffects.slide;\n          break;\n\n        case 3:\n          // Slide to Note - if there's a note provided, it is not played directly,\n          // if the instrument number is set, the default volume of that instrument will be set\n          // if value == 0 then the old slide will continue\n          doPlayNote = false; // note: protracker2 switches samples on the fly if the instrument index is different from the previous instrument ...\n          // Should we implement that?\n          // fasttracker does not.\n          // protracker 3 does not\n          // milkytracker tries, but not perfect\n          // the ProTracker clone of 8bitbubsy does this completely compatible to protracker2.\n\n          var target = notePeriod;\n          if (this.inFTMode() && noteIndex === _enum__WEBPACK_IMPORTED_MODULE_10__[\"NOTEOFF\"]) target = 0; // avoid using the fineTune of another instrument if another instrument index is present\n\n          if (this.trackNotes[track].currentInstrument) instrumentIndex = this.trackNotes[track].currentInstrument;\n\n          if (target && instrumentIndex) {\n            // check if the instrument is finetuned\n            var _instrument = this.getInstrument(instrumentIndex);\n\n            if (_instrument && _instrument.getFineTune()) {\n              target = this.inFTMode() ? _instrument.getPeriodForNote(noteIndex, true) : this.audio.getFineTuneForPeriod(target, _instrument.getFineTune());\n            }\n          }\n\n          var prevSlide = this.trackEffectCache[track].slide;\n\n          if (prevSlide) {\n            if (!value) value = prevSlide.value;\n          }\n\n          if (!target) {\n            target = this.trackEffectCache[track].defaultSlideTarget;\n          }\n\n          trackEffects.slide = {\n            value: value,\n            target: target,\n            canUseGlissando: true,\n            resetVolume: !!note.instrument,\n            volume: defaultVolume\n          };\n          this.trackEffectCache[track].slide = trackEffects.slide;\n\n          if (note.instrument) {\n            trackEffects.volume = {\n              value: defaultVolume\n            };\n          }\n\n          break;\n\n        case 4:\n          // vibrato\n          // reset volume and vibrato timer if instrument number is present\n          if (note.instrument) {\n            if (this.trackNotes[track].startVolume) {\n              trackEffects.volume = {\n                value: volume\n              };\n            }\n\n            this.trackNotes[track].vibratoTimer = 0;\n          }\n\n          x = value >> 4;\n          y = value & 0x0f;\n          var freq = x * this.ticksPerStep / 64;\n          var prevVibrato = this.trackEffectCache[track].vibrato;\n\n          if (x == 0 && prevVibrato) {\n            freq = prevVibrato.freq;\n          }\n\n          if (y == 0 && prevVibrato) {\n            y = prevVibrato.amplitude;\n          }\n\n          trackEffects.vibrato = {\n            amplitude: y,\n            freq: freq\n          };\n          this.trackEffectCache[track].vibrato = trackEffects.vibrato;\n          break;\n\n        case 5:\n          // continue slide to note\n          doPlayNote = false;\n          target = notePeriod;\n\n          if (target && instrumentIndex) {\n            // check if the instrument is finetuned\n            instrument = this.getInstrument(instrumentIndex);\n\n            if (instrument && instrument.getFineTune()) {\n              target = this.inFTMode() ? this.audio.getFineTuneForNote(noteIndex, instrument.getFineTune()) : this.audio.getFineTuneForPeriod(target, instrument.getFineTune());\n            }\n          }\n\n          value = 1;\n          var contPrevSlide = this.trackEffectCache[track].slide;\n\n          if (contPrevSlide) {\n            if (!target) target = contPrevSlide.target || 0;\n            value = contPrevSlide.value;\n          }\n\n          trackEffects.slide = {\n            value: value,\n            target: target\n          };\n          this.trackEffectCache[track].slide = trackEffects.slide;\n\n          if (note.instrument) {\n            trackEffects.volume = {\n              value: defaultVolume\n            };\n          } // and do volume slide\n\n\n          value = note.param;\n\n          if (!value) {// don't do volume slide\n          } else {\n            if (note.param < 16) {\n              // slide down\n              value = value * -1;\n            } else {\n              // slide up\n              //value = note.param & 0x0f;\n              value = note.param >> 4;\n            } // this is based on max volume of 64 -> normalize to 100;\n\n\n            value = value * 100 / 64;\n            trackEffects.fade = {\n              value: value,\n              resetOnStep: !!note.instrument // volume only needs resetting when the instrument number is given, other wise the volue is remembered from the preious state\n\n            };\n            this.trackEffectCache[track].fade = trackEffects.fade;\n          }\n\n          break;\n\n        case 6:\n          // Continue Vibrato and do volume slide\n          // reset volume and vibrato timer if instrument number is present\n          if (note.instrument) {\n            if (this.trackNotes[track].startVolume) {\n              trackEffects.volume = {\n                value: volume\n              };\n            }\n\n            this.trackNotes[track].vibratoTimer = 0;\n          }\n\n          if (note.param) {\n            if (note.param < 16) {\n              // volume slide down\n              value = value * -1;\n            } else {\n              // volume slide up\n              value = note.param & 0x0f;\n            } // this is based on max volume of 64 -> normalize to 100;\n\n\n            value = value * 100 / 64;\n            trackEffects.fade = {\n              value: value\n            };\n            this.trackEffectCache[track].fade = trackEffects.fade;\n          } else {\n            // on Fasttracker this command is remembered - on Protracker it is not.\n            if (this.inFTMode()) {\n              if (this.trackEffectCache[track].fade) trackEffects.fade = this.trackEffectCache[track].fade;\n            }\n          }\n\n          if (this.trackEffectCache[track].vibrato) trackEffects.vibrato = this.trackEffectCache[track].vibrato;\n          break;\n\n        case 7:\n          // Tremolo\n          // note: having a instrument number without a period doesn't seem te have any effect (protracker)\n          // when only a period -> reset the wave form / timer\n          if (notePeriod && !note.instrument) {\n            if (this.trackNotes[track].startVolume) {\n              trackEffects.volume = {\n                value: volume\n              };\n            }\n\n            this.trackNotes[track].tremoloTimer = 0;\n          }\n\n          x = value >> 4;\n          y = value & 0x0f;\n          var amplitude = y;\n          var tFreq = x * this.ticksPerStep / 64;\n          var prevTremolo = this.trackEffectCache[track].tremolo;\n\n          if (x == 0 && prevTremolo) {\n            tFreq = prevTremolo.freq;\n          }\n\n          if (y == 0 && prevTremolo) {\n            amplitude = prevTremolo.amplitude;\n          }\n\n          trackEffects.tremolo = {\n            amplitude: amplitude,\n            freq: tFreq\n          };\n          this.trackEffectCache[track].tremolo = trackEffects.tremolo;\n          break;\n\n        case 8:\n          // Set Panning position\n          trackEffects.panning = {\n            value: value,\n            slide: false\n          };\n          break;\n\n        case 9:\n          // Set instrument offset\n\n          /* quirk in Protracker 1 and 2 ?\r\n           if NO NOTE is given but a instrument number is present,\r\n           then the offset is remembered for the next note WITHOUT instrument number\r\n           but only when the derived instrument number is the same as the offset instrument number\r\n           see 'professional tracker' mod for example\r\n          \t\t also:\r\n           * if no instrument number is present: don't reset the offset\r\n            -> the effect cache of the previous 9 command of the instrument is used\r\n           * if a note is present REAPPLY the offset in the effect cache (but don't set start of instrument)\r\n            -> the effect cache now contains double the offset\r\n           */\n          value = value << 8;\n\n          if (!value && this.trackEffectCache[track].offset) {\n            value = this.trackEffectCache[track].offset.stepValue || this.trackEffectCache[track].offset.value || 0;\n          }\n\n          var stepValue = value;\n\n          if (_enum__WEBPACK_IMPORTED_MODULE_10__[\"SETTINGS\"].emulateProtracker1OffsetBug && !note.instrument && this.trackEffectCache[track].offset) {\n            // bug in PT1 and PT2: add to existing offset if no instrument number is given\n            value += this.trackEffectCache[track].offset.value;\n          }\n\n          trackEffects.offset = {\n            value: value,\n            stepValue: stepValue\n          }; // note: keep previous trackEffectCache[track].offset.instrument intact\n\n          this.trackEffectCache[track].offset = this.trackEffectCache[track].offset || {};\n          this.trackEffectCache[track].offset.value = trackEffects.offset.value;\n          this.trackEffectCache[track].offset.stepValue = trackEffects.offset.stepValue;\n\n          if (_enum__WEBPACK_IMPORTED_MODULE_10__[\"SETTINGS\"].emulateProtracker1OffsetBug) {\n            // quirk in PT1 and PT2: remember instrument offset for instrument\n            if (note.instrument) {\n              //console.log('set offset cache for instrument ' + note.instrument);\n              this.trackEffectCache[track].offset.instrument = note.instrument;\n            } // bug in PT1 and PT2: re-apply instrument offset in effect cache\n\n\n            if (notePeriod) {\n              //console.log('re-adding offset in effect cache');\n              this.trackEffectCache[track].offset.value += stepValue;\n            }\n          }\n\n          if (note.instrument) {\n            trackEffects.volume = {\n              value: defaultVolume\n            };\n          }\n\n          break;\n\n        case 10:\n          // volume slide\n          if (note.param < 16) {\n            // slide down\n            value = value * -1;\n          } else {\n            // slide up\n            value = note.param >> 4;\n          } // this is based on max volume of 64 -> normalize to 100;\n\n\n          value = value * 100 / 64;\n\n          if (!note.param) {\n            var prevFade = this.trackEffectCache[track].fade;\n\n            if (prevFade) {\n              value = prevFade.value;\n            }\n          }\n\n          trackEffects.fade = {\n            value: value,\n            resetOnStep: !!note.instrument // volume only needs resetting when the instrument number is given, otherwise the volume is remembered from the previous state\n\n          }; //!!! in FT2 this effect is remembered - in Protracker it is not\n\n          if (this.inFTMode()) {\n            this.trackEffectCache[track].fade = trackEffects.fade;\n          }\n\n          break;\n\n        case 11:\n          // Position Jump\n          result.patternBreak = true;\n          result.positionBreak = true;\n          result.targetSongPosition = note.param;\n          result.targetPatternPosition = 0;\n          break;\n\n        case 12:\n          //volume\n          volume = note.param / 64 * 100; // not this is not relative to the default instrument volume but sets the instrument volume\n\n          trackEffects.volume = {\n            value: volume\n          };\n          break;\n\n        case 13:\n          // Pattern Break\n          result.patternBreak = true;\n          x = value >> 4;\n          y = value & 0x0f;\n          result.targetPatternPosition = x * 10 + y;\n          break;\n\n        case 14:\n          // Subeffects\n          var subEffect = value >> 4;\n          var subValue = value & 0x0f;\n\n          switch (subEffect) {\n            case 0:\n              if (!this.inFTMode()) this.audio.setAmigaLowPassFilter(!subValue, time);\n              break;\n\n            case 1:\n              // Fine slide up\n              subValue = subValue * -1;\n              if (!subValue && this.trackEffectCache[track].fineSlide) subValue = this.trackEffectCache[track].fineSlide.value;\n              trackEffects.slide = {\n                value: subValue,\n                fine: true\n              };\n              this.trackEffectCache[track].fineSlide = trackEffects.slide;\n              break;\n\n            case 2:\n              // Fine slide down\n              if (!subValue && this.trackEffectCache[track].fineSlide) subValue = this.trackEffectCache[track].fineSlide.value;\n              trackEffects.slide = {\n                value: subValue,\n                fine: true\n              };\n              this.trackEffectCache[track].fineSlide = trackEffects.slide;\n              break;\n\n            case 3:\n              // set glissando control\n              this.trackEffectCache[track].glissando = !!subValue;\n              break;\n\n            case 4:\n              // Set Vibrato Waveform\n              switch (subValue) {\n                case 1:\n                  this.vibratoFunction = this.audio.waveFormFunction.saw;\n                  break;\n\n                case 2:\n                  this.vibratoFunction = this.audio.waveFormFunction.square;\n                  break;\n\n                case 3:\n                  this.vibratoFunction = this.audio.waveFormFunction.sine;\n                  break;\n                // random\n\n                case 4:\n                  this.vibratoFunction = this.audio.waveFormFunction.sine;\n                  break;\n                // no retrigger\n\n                case 5:\n                  this.vibratoFunction = this.audio.waveFormFunction.saw;\n                  break;\n                // no retrigger\n\n                case 6:\n                  this.vibratoFunction = this.audio.waveFormFunction.square;\n                  break;\n                // no retrigger\n\n                case 7:\n                  this.vibratoFunction = this.audio.waveFormFunction.sine;\n                  break;\n                // random, no retrigger\n\n                default:\n                  this.vibratoFunction = this.audio.waveFormFunction.sine;\n                  break;\n              }\n\n              break;\n\n            case 5:\n              // Set Fine Tune\n              if (instrumentIndex) {\n                var _instrument2 = this.getInstrument(instrumentIndex);\n\n                trackEffects.fineTune = {\n                  original: _instrument2.getFineTune(),\n                  instrument: _instrument2\n                };\n\n                _instrument2.setFineTune(subValue);\n              }\n\n              break;\n\n            case 6:\n              // Pattern Loop\n              if (subValue) {\n                this.patternLoopCount[track] = this.patternLoopCount[track] || 0;\n\n                if (this.patternLoopCount[track] < subValue) {\n                  this.patternLoopCount[track]++;\n                  result.patternBreak = true;\n                  result.positionBreak = true;\n                  result.targetSongPosition = songPos.position; // keep on same position\n\n                  result.targetPatternPosition = this.patternLoopStart[track] || 0; // should we default to 0 if no start was set or just ignore?\n                  // console.log('looping to ' + result.targetPatternPosition + ' for ' + this.patternLoopCount[track] + '/' + subValue);\n\n                  this.events.emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].patternLoopChange, {\n                    target: result.targetPatternPosition,\n                    count: this.patternLoopCount[track]\n                  });\n                } else {\n                  this.patternLoopCount[track] = 0;\n                }\n              } else {\n                // console.log('setting loop start to ' + songPos.step + ' on track ' + track);\n                this.patternLoopStart[track] = songPos.step;\n              }\n\n              break;\n\n            case 7:\n              // Set Tremolo WaveForm\n              switch (subValue) {\n                case 1:\n                  this.tremoloFunction = this.audio.waveFormFunction.saw;\n                  break;\n\n                case 2:\n                  this.tremoloFunction = this.audio.waveFormFunction.square;\n                  break;\n\n                case 3:\n                  this.tremoloFunction = this.audio.waveFormFunction.sine;\n                  break;\n                // random\n\n                case 4:\n                  this.tremoloFunction = this.audio.waveFormFunction.sine;\n                  break;\n                // no retrigger\n\n                case 5:\n                  this.tremoloFunction = this.audio.waveFormFunction.saw;\n                  break;\n                // no retrigger\n\n                case 6:\n                  this.tremoloFunction = this.audio.waveFormFunction.square;\n                  break;\n                // no retrigger\n\n                case 7:\n                  this.tremoloFunction = this.audio.waveFormFunction.sine;\n                  break;\n                // random, no retrigger\n\n                default:\n                  this.tremoloFunction = this.audio.waveFormFunction.sine;\n                  break;\n              }\n\n              break;\n\n            case 8:\n              // Set Panning - is this used ?\n              // console.warn('Set Panning - not implemented');\n              break;\n\n            case 9:\n              // Retrigger Note\n              if (subValue) {\n                trackEffects.reTrigger = {\n                  value: subValue\n                };\n              }\n\n              break;\n\n            case 10:\n              // Fine volume slide up\n              subValue = subValue * 100 / 64;\n              trackEffects.fade = {\n                value: subValue,\n                fine: true\n              };\n              break;\n\n            case 11:\n              // Fine volume slide down\n              subValue = subValue * 100 / 64;\n              trackEffects.fade = {\n                value: -subValue,\n                fine: true\n              };\n              break;\n\n            case 12:\n              // Cut Note\n              if (subValue) {\n                if (subValue < this.ticksPerStep) {\n                  trackEffects.cutNote = {\n                    value: subValue\n                  };\n                }\n              } else {\n                doPlayNote = false;\n              }\n\n              break;\n\n            case 13:\n              // Delay Sample start\n              if (subValue) {\n                if (subValue < this.ticksPerStep) {\n                  time += this.tickTime * subValue;\n                } else {\n                  doPlayNote = false;\n                }\n              }\n\n              break;\n\n            case 14:\n              // Pattern Delay\n              result.patternDelay = subValue;\n              break;\n\n            case 15:\n              // Invert Loop\n              // Don't think is used somewhere - ignore\n              break;\n\n            default: // console.warn('Subeffect ' + subEffect + ' not implemented');\n\n          }\n\n          break;\n\n        case 15:\n          //speed\n          // Note: shouldn't this be 'set speed at time' instead of setting it directly?\n          // TODO: -> investigate\n          // TODO: Yes ... this is actually quite wrong FIXME !!!!\n          if (note.param <= 32) {\n            //if (note.param == 0) note.param = 1;\n            this.setAmigaSpeed(note.param, time);\n          } else {\n            this.setBPM(note.param);\n          }\n\n          break;\n\n        case 16:\n          //Fasttracker only - global volume\n          value = Math.min(value, 64);\n          this.audio.setMasterVolume(value / 64, time);\n          break;\n\n        case 17:\n          //Fasttracker only - global volume slide\n          x = value >> 4;\n          y = value & 0x0f;\n          var currentVolume = this.audio.getLastMasterVolume() * 64;\n          var amount = 0;\n          var targetTime;\n\n          if (x) {\n            targetTime = time + x * this.tickTime;\n            amount = x * (this.ticksPerStep - 1);\n          } else if (y) {\n            targetTime = time + y * this.tickTime;\n            amount = -y * (this.ticksPerStep - 1);\n          }\n\n          if (amount) {\n            value = (currentVolume + amount) / 64;\n            value = Math.max(0, value);\n            value = Math.min(1, value);\n            this.audio.slideMasterVolume(value, targetTime);\n          }\n\n          break;\n\n        case 20:\n          //Fasttracker only - Key off\n          if (this.inFTMode()) {\n            offInstrument = instrument || this.getInstrument(this.trackNotes[track].currentInstrument);\n\n            if (offInstrument) {\n              volume = offInstrument.noteOff(time, this.trackNotes[track]);\n            } else {\n              volume = 0;\n            }\n\n            defaultVolume = volume;\n            doPlayNote = false;\n          }\n\n          break;\n\n        case 21:\n          //Fasttracker only - Set envelope position\n          // console.warn('Set envelope position not implemented');\n          break;\n\n        case 25:\n          //Fasttracker only - Panning slide\n          // console.warn('Panning slide not implemented - track ' + track);\n          break;\n\n        case 27:\n          //Fasttracker only - Multi retrig note\n          // still not 100% sure how this is supposed to work ...\n          // see https://forum.openmpt.org/index.php?topic=4999.15\n          // see lupo.xm for an example (RO1 command)\n          trackEffects.reTrigger = {\n            value: note.param\n          };\n          break;\n\n        case 29:\n          //Fasttracker only - Tremor\n          // console.warn('Tremor not implemented');\n          break;\n\n        case 33:\n          //Fasttracker only - Extra fine porta\n          // console.warn('Extra fine porta not implemented');\n          break;\n\n        default: // console.warn('unhandled effect: ' + note.effect);\n\n      }\n\n      if (doPlayNote && instrumentIndex && notePeriod) {\n        // cut off previous note on the same track;\n        this.cutNote(track, time);\n        this.trackNotes[track] = {};\n\n        if (instrument) {\n          this.trackNotes[track] = instrument.play(noteIndex, notePeriod, volume, track, trackEffects, time);\n        } //trackNotes[track] = this.audio.playSample(instrumentIndex,notePeriod,volume,track,trackEffects,time,noteIndex);\n\n\n        this.trackEffectCache[track].defaultSlideTarget = this.trackNotes[track].startPeriod;\n      }\n\n      if (instrumentIndex) {\n        this.trackNotes[track].currentInstrument = instrumentIndex; // reset temporary instrument settings\n\n        if (trackEffects.fineTune && trackEffects.fineTune.instrument) {\n          trackEffects.fineTune.instrument.setFineTune(trackEffects.fineTune.original || 0);\n        }\n      }\n\n      if (instrument && instrument.hasVibrato()) {\n        this.trackNotes[track].hasAutoVibrato = true;\n      }\n\n      this.trackNotes[track].effects = trackEffects;\n      this.trackNotes[track].note = note;\n      return result;\n    }\n  }, {\n    key: \"cutNote\",\n    value: function cutNote(track, time) {\n      // ramp to 0 volume to avoid clicks\n      try {\n        if (this.trackNotes[track].source) {\n          var gain = this.trackNotes[track].volume.gain;\n          gain.setValueAtTime(this.trackNotes[track].currentVolume / 100, time - 0.002);\n          gain.linearRampToValueAtTime(0, time);\n          this.trackNotes[track].source.stop(time + 0.02); //trackNotes[track].source.stop(time);\n        }\n      } catch (e) {}\n    }\n  }, {\n    key: \"applyAutoVibrato\",\n    value: function applyAutoVibrato(trackNote, currentPeriod) {\n      var instrument = this.getInstrument(trackNote.instrumentIndex);\n\n      if (instrument) {\n        var _freq = -instrument.vibrato.rate / 40;\n\n        var _amp = instrument.vibrato.depth / 8;\n\n        if (this.useLinearFrequency) {\n          _amp *= 4;\n        }\n\n        trackNote.vibratoTimer = trackNote.vibratoTimer || 0;\n\n        if (instrument.vibrato.sweep && trackNote.vibratoTimer < instrument.vibrato.sweep) {\n          var sweepAmp = 1 - (instrument.vibrato.sweep - trackNote.vibratoTimer) / instrument.vibrato.sweep;\n          _amp *= sweepAmp;\n        }\n\n        var instrumentVibratoFunction = instrument.getAutoVibratoFunction();\n        var targetPeriod = instrumentVibratoFunction(currentPeriod, trackNote.vibratoTimer, _freq, _amp);\n        trackNote.vibratoTimer++;\n        return targetPeriod;\n      }\n\n      return currentPeriod;\n    }\n  }, {\n    key: \"applyEffects\",\n    value: function applyEffects(track, time) {\n      var trackNote = this.trackNotes[track];\n      var effects = trackNote.effects;\n      var value;\n      var autoVibratoHandled = false;\n\n      if (!trackNote) {\n        return;\n      }\n\n      if (!effects) {\n        return;\n      }\n\n      trackNote.startVibratoTimer = trackNote.vibratoTimer || 0;\n\n      if (trackNote.resetPeriodOnStep && trackNote.source) {\n        // vibrato or arpeggio is done\n        // for slow vibratos it seems logical to keep the current frequency, but apparently most trackers revert back to the pre-vibrato one\n        var targetPeriod = trackNote.currentPeriod || trackNote.startPeriod;\n        this.setPeriodAtTime(trackNote, targetPeriod, time);\n        trackNote.resetPeriodOnStep = false;\n      }\n\n      if (effects.volume) {\n        var volume = effects.volume.value;\n\n        if (trackNote.volume) {\n          trackNote.volume.gain.setValueAtTime(volume / 100, time);\n        }\n\n        trackNote.currentVolume = volume;\n      }\n\n      if (effects.panning) {\n        value = effects.panning.value;\n        if (value === 255) value = 254;\n\n        if (trackNote.panning) {\n          trackNote.panning.pan.setValueAtTime((value - 127) / 127, time);\n        }\n      }\n\n      if (effects.fade) {\n        value = effects.fade.value;\n        var currentVolume;\n        var startTick = 1;\n\n        if (effects.fade.resetOnStep) {\n          currentVolume = trackNote.startVolume;\n        } else {\n          currentVolume = trackNote.currentVolume;\n        }\n\n        var steps = this.ticksPerStep;\n\n        if (effects.fade.fine) {\n          // fine Volume Up or Down\n          startTick = 0;\n          steps = 1;\n        }\n\n        for (var tick = startTick; tick < steps; tick++) {\n          if (trackNote.volume) {\n            trackNote.volume.gain.setValueAtTime(currentVolume / 100, time + tick * this.tickTime);\n            currentVolume += value;\n            currentVolume = Math.max(currentVolume, 0);\n            currentVolume = Math.min(currentVolume, 100);\n          }\n        }\n\n        trackNote.currentVolume = currentVolume;\n      }\n\n      if (effects.slide) {\n        if (trackNote.source) {\n          var currentPeriod = trackNote.currentPeriod || trackNote.startPeriod;\n          var slideValue = this.inFTMode() && this.useLinearFrequency ? effects.slide.value * 4 : effects.slide.value;\n          var _targetPeriod = currentPeriod;\n          var _steps = this.ticksPerStep;\n\n          if (effects.slide.fine) {\n            // fine Slide Up or Down\n            _steps = 2;\n          }\n\n          value = Math.abs(slideValue);\n\n          if (this.inFTMode() && effects.slide.resetVolume && (trackNote.volumeFadeOut || trackNote.volumeEnvelope)) {\n            // crap ... this should reset the volume envelope to the beginning ... annoying ...\n            var instrument = this.getInstrument(trackNote.instrumentIndex);\n\n            if (instrument) {\n              instrument.resetVolume(time, trackNote);\n            }\n          }\n\n          trackNote.vibratoTimer = trackNote.startVibratoTimer; // TODO: Why don't we use a RampToValueAtTime here ?\n\n          for (var _tick = 1; _tick < _steps; _tick++) {\n            if (effects.slide.target) {\n              this.trackEffectCache[track].defaultSlideTarget = effects.slide.target;\n\n              if (_targetPeriod < effects.slide.target) {\n                _targetPeriod += value;\n                if (_targetPeriod > effects.slide.target) _targetPeriod = effects.slide.target;\n              } else {\n                _targetPeriod -= value;\n                if (_targetPeriod < effects.slide.target) _targetPeriod = effects.slide.target;\n              }\n            } else {\n              _targetPeriod += slideValue;\n\n              if (this.trackEffectCache[track].defaultSlideTarget) {\n                this.trackEffectCache[track].defaultSlideTarget += slideValue;\n              }\n            }\n\n            if (!this.inFTMode()) {\n              _targetPeriod = this.audio.limitAmigaPeriod(_targetPeriod);\n            }\n\n            var newPeriod = _targetPeriod;\n\n            if (effects.slide.canUseGlissando && this.trackEffectCache[track].glissando) {\n              newPeriod = this.audio.getNearestSemiTone(_targetPeriod, trackNote.instrumentIndex);\n            }\n\n            if (newPeriod !== trackNote.currentPeriod) {\n              trackNote.currentPeriod = _targetPeriod;\n\n              if (trackNote.hasAutoVibrato && this.inFTMode()) {\n                _targetPeriod = this.applyAutoVibrato(trackNote, _targetPeriod);\n                autoVibratoHandled = true;\n              }\n\n              this.setPeriodAtTime(trackNote, newPeriod, time + _tick * this.tickTime);\n            }\n          }\n        }\n      }\n\n      if (effects.arpeggio) {\n        if (trackNote.source) {\n          var _currentPeriod = trackNote.currentPeriod || trackNote.startPeriod;\n\n          var _targetPeriod2;\n\n          trackNote.resetPeriodOnStep = true;\n          trackNote.vibratoTimer = trackNote.startVibratoTimer;\n\n          for (var _tick2 = 0; _tick2 < this.ticksPerStep; _tick2++) {\n            var t = _tick2 % 3;\n\n            if (t == 0) {\n              _targetPeriod2 = _currentPeriod;\n            }\n\n            if (t == 1 && effects.arpeggio.interval1) {\n              _targetPeriod2 = _currentPeriod - effects.arpeggio.interval1;\n            }\n\n            if (t == 2 && effects.arpeggio.interval2) {\n              _targetPeriod2 = _currentPeriod - effects.arpeggio.interval2;\n            }\n\n            if (trackNote.hasAutoVibrato && this.inFTMode()) {\n              _targetPeriod2 = this.applyAutoVibrato(trackNote, _targetPeriod2);\n              autoVibratoHandled = true;\n            }\n\n            this.setPeriodAtTime(trackNote, _targetPeriod2, time + _tick2 * this.tickTime);\n          }\n        }\n      }\n\n      if (effects.vibrato || trackNote.hasAutoVibrato && !autoVibratoHandled) {\n        effects.vibrato = effects.vibrato || {\n          freq: 0,\n          amplitude: 0\n        };\n        var freq = effects.vibrato.freq;\n        var amp = this.inFTMode() && this.useLinearFrequency ? effects.vibrato.amplitude * 4 : effects.vibrato.amplitude;\n        trackNote.vibratoTimer = trackNote.vibratoTimer || 0;\n\n        if (trackNote.source) {\n          trackNote.resetPeriodOnStep = true;\n\n          var _currentPeriod2 = trackNote.currentPeriod || trackNote.startPeriod;\n\n          trackNote.vibratoTimer = trackNote.startVibratoTimer;\n\n          for (var _tick3 = 0; _tick3 < this.ticksPerStep; _tick3++) {\n            var _targetPeriod3 = this.vibratoFunction(_currentPeriod2, trackNote.vibratoTimer, freq, amp); // should we add or average the 2 effects?\n\n\n            if (trackNote.hasAutoVibrato && this.inFTMode()) {\n              _targetPeriod3 = this.applyAutoVibrato(trackNote, _targetPeriod3);\n              autoVibratoHandled = true;\n            } else {\n              trackNote.vibratoTimer++;\n            } // TODO: if we ever allow multiple effect on the same tick then we should rework this as you can't have concurrent 'setPeriodAtTime' commands\n\n\n            this.setPeriodAtTime(trackNote, _targetPeriod3, time + _tick3 * this.tickTime);\n          }\n        }\n      }\n\n      if (effects.tremolo) {\n        var _freq2 = effects.tremolo.freq;\n        var _amp2 = effects.tremolo.amplitude;\n        trackNote.tremoloTimer = trackNote.tremoloTimer || 0;\n\n        if (trackNote.volume) {\n          var _volume = trackNote.startVolume;\n\n          for (var _tick4 = 0; _tick4 < this.ticksPerStep; _tick4++) {\n            _volume = this.tremoloFunction(_volume, trackNote.tremoloTimer, _freq2, _amp2);\n\n            if (_volume < 0) {\n              _volume = 0;\n            }\n\n            if (_volume > 100) {\n              _volume = 100;\n            }\n\n            trackNote.volume.gain.setValueAtTime(_volume / 100, time + _tick4 * this.tickTime);\n            trackNote.currentVolume = _volume;\n            trackNote.tremoloTimer++;\n          }\n        }\n      }\n\n      if (effects.cutNote) {\n        if (trackNote.volume) {\n          trackNote.volume.gain.setValueAtTime(0, time + effects.cutNote.value * this.tickTime);\n        }\n\n        trackNote.currentVolume = 0;\n      }\n\n      if (effects.reTrigger) {\n        var instrumentIndex = trackNote.instrumentIndex;\n        var notePeriod = trackNote.startPeriod;\n        var _volume2 = trackNote.startVolume;\n        var noteIndex = trackNote.noteIndex;\n        var triggerStep = effects.reTrigger.value || 1;\n        var triggerCount = triggerStep;\n\n        while (triggerCount < this.ticksPerStep) {\n          var triggerTime = time + triggerCount * this.tickTime;\n          this.cutNote(track, triggerTime);\n          this.trackNotes[track] = this.audio.playSample(instrumentIndex, notePeriod, _volume2, track, effects, triggerTime, noteIndex);\n          triggerCount += triggerStep;\n        }\n      }\n    }\n  }, {\n    key: \"setBPM\",\n    value: function setBPM(newBPM) {\n      if (this.clock) {\n        this.clock.timeStretch(this.audio.context.currentTime, [this.mainTimer], this.bpm / newBPM);\n      }\n\n      this.bpm = newBPM;\n      this.tickTime = 2.5 / this.bpm;\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].songBPMChange, this.bpm);\n    }\n  }, {\n    key: \"getBPM\",\n    value: function getBPM() {\n      return this.bpm;\n    }\n  }, {\n    key: \"setAmigaSpeed\",\n    value: function setAmigaSpeed(speed) {\n      // 1 tick is 0.02 seconds on a PAL Amiga\n      // 4 steps is 1 beat\n      // the speeds sets the amount of ticks in 1 step\n      // default is 6 -> 60/(6*0.02*4) = 125 bpm\n      //note: this changes the speed of the song, but not the speed of the main loop\n      this.ticksPerStep = speed;\n    }\n  }, {\n    key: \"getAmigaSpeed\",\n    value: function getAmigaSpeed() {\n      return this.ticksPerStep;\n    }\n  }, {\n    key: \"getPatternLength\",\n    value: function getPatternLength() {\n      return this.patternLength;\n    }\n  }, {\n    key: \"setPatternLength\",\n    value: function setPatternLength(value) {\n      this.patternLength = value;\n      var currentLength = this.song.patterns[this.patternNumber].length;\n\n      if (currentLength === this.patternLength) {\n        return;\n      }\n\n      if (currentLength < this.patternLength) {\n        for (var step = currentLength; step < this.patternLength; step++) {\n          var row = [];\n\n          for (var channel = 0; channel < this.trackCount; channel++) {\n            row.push(new _models_note__WEBPACK_IMPORTED_MODULE_3__[\"Note\"](this));\n          }\n\n          this.song.patterns[this.patternNumber].push(row);\n        }\n      } else {\n        this.song.patterns[this.patternNumber] = this.song.patterns[this.patternNumber].splice(0, this.patternLength);\n\n        if (this.patternIndex >= this.patternLength) {\n          this.setPattern(this.patternLength - 1);\n        }\n      }\n\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].patternChange, this.currentPattern);\n    }\n  }, {\n    key: \"getTrackCount\",\n    value: function getTrackCount() {\n      return this.trackCount;\n    }\n  }, {\n    key: \"setTrackCount\",\n    value: function setTrackCount(count) {\n      this.trackCount = count;\n\n      for (var i = this.trackNotes.length; i < this.trackCount; i++) {\n        this.trackNotes.push({});\n      }\n\n      for (var _i5 = this.trackEffectCache.length; _i5 < this.trackCount; _i5++) {\n        this.trackEffectCache.push({});\n      }\n\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].trackCountChange, this.trackCount);\n    }\n  }, {\n    key: \"setStateAtTime\",\n    value: function setStateAtTime(time, state) {\n      this.trackerStates.push({\n        time: time,\n        state: state\n      });\n    }\n  }, {\n    key: \"getStateAtTime\",\n    value: function getStateAtTime(time) {\n      var result = undefined;\n\n      for (var i = 0, len = this.trackerStates.length; i < len; i++) {\n        var state = this.trackerStates[0];\n\n        if (state.time < time) {\n          result = this.trackerStates.shift().state;\n        } else {\n          return result;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getTimeStates\",\n    value: function getTimeStates() {\n      return this.trackerStates;\n    }\n  }, {\n    key: \"setPeriodAtTime\",\n    value: function setPeriodAtTime(trackNote, period, time) {\n      var rate;\n      period = Math.max(period, 1);\n\n      if (this.inFTMode() && this.useLinearFrequency) {\n        var sampleRate = 8363 * Math.pow(2, (4608 - period) / 768);\n        rate = sampleRate / this.audio.context.sampleRate;\n      } else {\n        rate = trackNote.startPeriod / period;\n        rate = trackNote.startPlaybackRate * rate;\n      }\n\n      trackNote.source.playbackRate.setValueAtTime(rate, time);\n    }\n  }, {\n    key: \"load\",\n    value: function load(url) {\n      var _this = this;\n\n      url = url || '';\n      var name = '';\n\n      if (typeof url === 'string') {\n        name = url.substr(url.lastIndexOf('/') + 1);\n        Object(_lib_util__WEBPACK_IMPORTED_MODULE_6__[\"loadFile\"])(url, function (result) {\n          _this.processFile(result, name);\n        });\n      } else {\n        name = url.name || '';\n        this.processFile(url.buffer || url, name);\n      }\n    }\n  }, {\n    key: \"processFile\",\n    value: function processFile(arrayBuffer, name) {\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].songLoading, name);\n      var file = new _binaryStream__WEBPACK_IMPORTED_MODULE_7__[\"BinaryStream\"](arrayBuffer, true);\n      var result = this.detector.detect(file, name);\n\n      if (result.isMod && result.loader) {\n        if (this.isPlaying) {\n          this.stop();\n        }\n\n        this.resetDefaultSettings();\n        this.song = result.loader().load(file, name);\n        this.song.filename = name;\n        this.song.trackerType = result.name;\n        this.onModuleLoad();\n      }\n\n      if (result.isSample) {\n        console.error('Pasuuna cannot play samples on their own');\n      }\n    }\n  }, {\n    key: \"onModuleLoad\",\n    value: function onModuleLoad() {\n      if (this.song.channels) {\n        this.setTrackCount(this.song.channels);\n      }\n\n      if (this.song.patternTable) {\n        this.setPattern(0);\n      }\n\n      this.clearEffectsCache();\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].songLoaded, this.song);\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].songPropertyChange, this.song);\n    }\n  }, {\n    key: \"getSong\",\n    value: function getSong() {\n      return this.song;\n    }\n  }, {\n    key: \"getInstruments\",\n    value: function getInstruments() {\n      return this.instruments;\n    }\n  }, {\n    key: \"getInstrument\",\n    value: function getInstrument(index) {\n      return this.instruments[index];\n    }\n  }, {\n    key: \"setInstrument\",\n    value: function setInstrument(index, instrument) {\n      instrument.instrumentIndex = index;\n      this.instruments[index] = instrument;\n    }\n  }, {\n    key: \"setTrackerMode\",\n    value: function setTrackerMode(mode) {\n      this.trackerMode = mode;\n      _enum__WEBPACK_IMPORTED_MODULE_10__[\"SETTINGS\"].emulateProtracker1OffsetBug = !this.inFTMode();\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].trackerModeChanged, mode);\n    }\n  }, {\n    key: \"getTrackerMode\",\n    value: function getTrackerMode() {\n      return this.trackerMode;\n    }\n  }, {\n    key: \"inFTMode\",\n    value: function inFTMode() {\n      return this.trackerMode === _enum__WEBPACK_IMPORTED_MODULE_10__[\"TRACKERMODE\"].FASTTRACKER;\n    }\n  }, {\n    key: \"clearInstrument\",\n    value: function clearInstrument() {\n      this.instruments[this.currentInstrumentIndex] = new _models_instrument__WEBPACK_IMPORTED_MODULE_4__[\"Instrument\"](this);\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].instrumentChange, this.currentInstrumentIndex);\n      _events__WEBPACK_IMPORTED_MODULE_8__[\"events\"].emit(_enum__WEBPACK_IMPORTED_MODULE_10__[\"EVENT\"].instrumentNameChange, this.currentInstrumentIndex);\n    }\n  }, {\n    key: \"getEmptyPattern\",\n    value: function getEmptyPattern() {\n      var result = [];\n\n      for (var step = 0; step < this.patternLength; step++) {\n        var row = [];\n\n        for (var channel = 0; channel < this.trackCount; channel++) {\n          row.push(new _models_note__WEBPACK_IMPORTED_MODULE_3__[\"Note\"](this));\n        }\n\n        result.push(row);\n      }\n\n      return result;\n    }\n  }]);\n\n  return Tracker;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/tracker.js\n");

/***/ }),

/***/ 0:
/*!****************************!*\
  !*** multi ./src/index.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./src/index.js */"./src/index.js");


/***/ })

/******/ });
});